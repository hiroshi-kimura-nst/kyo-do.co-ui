[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/action/accountboard.js",
    "content": "/**\n* アカウント情報変更モーダルOpen要求アクション名\n*/\nexport const ACCOUNT_INFO_MODAL_OPEN = \"ACCOUNT_INFO_MODAL_OPEN\";\n\n/**\n* アカウント情報変更モーダルOpenのcreator\n* @return {Object} アカウント情報変更モーダルOpenアクション\n*/\nexport function openAccountInfoModal(){\n  return {\n    type:ACCOUNT_INFO_MODAL_OPEN\n  };\n}\n\n/**\n* アカウント情報変更モーダルClose要求アクション名\n*/\nexport const ACCOUNT_INFO_MODAL_CLOSE = \"ACCOUNT_INFO_MODAL_CLOSE\";\n\n/**\n* アカウント情報変更モーダルCloseのcreator\n* @return {Object} アカウント情報変更モーダルCloseアクション\n*/\nexport function closeAccountInfoModal(){\n  return {\n    type:ACCOUNT_INFO_MODAL_CLOSE\n  };\n}\n\n/**\n* アカウント情報変更要求アクション名\n*/\nexport const CHANGE_ACCOUNT_INFO = \"CHANGE_ACCOUNT_INFO\";\n\n/**\n* アカウント情報変更のcreator\n* @return {Object} アカウント情報変更モーダルCloseアクション\n*/\nexport function changeAccountInfo(name, pass){\n  return {\n    type:CHANGE_ACCOUNT_INFO,\n    payload:{\n      nextname:name,\n      nextpass:pass\n    }\n  };\n}\n\n/**\n* アカウント情報テキストフィールド(表示名)変更要求アクション名\n*/\nexport const CHANGE_ACCOUNT_INFO_FIELD = \"CHANGE_ACCOUNT_INFO_FIELD\";\n\n/**\n* アカウント情報テキストフィールドの変更のcreator\n* @return {Object} アカウント情報変更フィールド変更アクション\n*/\nexport function changeAccountInfoField(name, pass){\n  return {\n    type:CHANGE_ACCOUNT_INFO_FIELD,\n    payload:{\n      nextname:name,\n      nextpass:pass\n    }\n  };\n}\n",
    "static": true,
    "longname": "src/action/accountboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "ACCOUNT_INFO_MODAL_OPEN",
    "memberof": "src/action/accountboard.js",
    "static": true,
    "longname": "src/action/accountboard.js~ACCOUNT_INFO_MODAL_OPEN",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/accountboard.js",
    "importStyle": "{ACCOUNT_INFO_MODAL_OPEN}",
    "description": "アカウント情報変更モーダルOpen要求アクション名",
    "lineNumber": 4,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 2,
    "kind": "function",
    "name": "openAccountInfoModal",
    "memberof": "src/action/accountboard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/accountboard.js~openAccountInfoModal",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/accountboard.js",
    "importStyle": "{openAccountInfoModal}",
    "description": "アカウント情報変更モーダルOpenのcreator",
    "lineNumber": 10,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "アカウント情報変更モーダルOpenアクション"
    }
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "ACCOUNT_INFO_MODAL_CLOSE",
    "memberof": "src/action/accountboard.js",
    "static": true,
    "longname": "src/action/accountboard.js~ACCOUNT_INFO_MODAL_CLOSE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/accountboard.js",
    "importStyle": "{ACCOUNT_INFO_MODAL_CLOSE}",
    "description": "アカウント情報変更モーダルClose要求アクション名",
    "lineNumber": 19,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "function",
    "name": "closeAccountInfoModal",
    "memberof": "src/action/accountboard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/accountboard.js~closeAccountInfoModal",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/accountboard.js",
    "importStyle": "{closeAccountInfoModal}",
    "description": "アカウント情報変更モーダルCloseのcreator",
    "lineNumber": 25,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "アカウント情報変更モーダルCloseアクション"
    }
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "name": "CHANGE_ACCOUNT_INFO",
    "memberof": "src/action/accountboard.js",
    "static": true,
    "longname": "src/action/accountboard.js~CHANGE_ACCOUNT_INFO",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/accountboard.js",
    "importStyle": "{CHANGE_ACCOUNT_INFO}",
    "description": "アカウント情報変更要求アクション名",
    "lineNumber": 34,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "function",
    "name": "changeAccountInfo",
    "memberof": "src/action/accountboard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/accountboard.js~changeAccountInfo",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/accountboard.js",
    "importStyle": "{changeAccountInfo}",
    "description": "アカウント情報変更のcreator",
    "lineNumber": 40,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "pass",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "アカウント情報変更モーダルCloseアクション"
    }
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "name": "CHANGE_ACCOUNT_INFO_FIELD",
    "memberof": "src/action/accountboard.js",
    "static": true,
    "longname": "src/action/accountboard.js~CHANGE_ACCOUNT_INFO_FIELD",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/accountboard.js",
    "importStyle": "{CHANGE_ACCOUNT_INFO_FIELD}",
    "description": "アカウント情報テキストフィールド(表示名)変更要求アクション名",
    "lineNumber": 53,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "function",
    "name": "changeAccountInfoField",
    "memberof": "src/action/accountboard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/accountboard.js~changeAccountInfoField",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/accountboard.js",
    "importStyle": "{changeAccountInfoField}",
    "description": "アカウント情報テキストフィールドの変更のcreator",
    "lineNumber": 59,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "pass",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "アカウント情報変更フィールド変更アクション"
    }
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "src/action/board.js",
    "content": "/**\n* チームメンバーの状況を更新するアクション名\n*/\nexport const UPDATE_MEMBER_STATUS = 'UPDATE_MEMBER_STATUS';\n\n/**\n* チームメンバーの状況を更新するアクションのcreator\n* @param {Object} memberStatus メンバー状況\n* @return {Object} UPDATE_MEMBER_STATUSアクション\n*/\nexport function updateMemberStatus(memberStatus){\n  return {\n    type:UPDATE_MEMBER_STATUS,\n    payload:memberStatus\n  }\n}\n\n/**\n* pollingによるメンバーステータスの更新要求アクション\n*/\nexport const MEMBER_STATUS_POLLING = \"MEMBER_STATUS_POLLING\";\n\n/**\n* pollingによるメンバーステータスの更新要求アクションのcreator\n* @return {Object} MEMBER_STATUS_POLLINGアクション\n*/\nexport function memberStatusPolling(){\n  return {\n    type:MEMBER_STATUS_POLLING\n  };\n}\n",
    "static": true,
    "longname": "src/action/board.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "variable",
    "name": "UPDATE_MEMBER_STATUS",
    "memberof": "src/action/board.js",
    "static": true,
    "longname": "src/action/board.js~UPDATE_MEMBER_STATUS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/board.js",
    "importStyle": "{UPDATE_MEMBER_STATUS}",
    "description": "チームメンバーの状況を更新するアクション名",
    "lineNumber": 4,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "function",
    "name": "updateMemberStatus",
    "memberof": "src/action/board.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/board.js~updateMemberStatus",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/board.js",
    "importStyle": "{updateMemberStatus}",
    "description": "チームメンバーの状況を更新するアクションのcreator",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "memberStatus",
        "description": "メンバー状況"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "UPDATE_MEMBER_STATUSアクション"
    }
  },
  {
    "__docId__": 12,
    "kind": "variable",
    "name": "MEMBER_STATUS_POLLING",
    "memberof": "src/action/board.js",
    "static": true,
    "longname": "src/action/board.js~MEMBER_STATUS_POLLING",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/board.js",
    "importStyle": "{MEMBER_STATUS_POLLING}",
    "description": "pollingによるメンバーステータスの更新要求アクション",
    "lineNumber": 21,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "function",
    "name": "memberStatusPolling",
    "memberof": "src/action/board.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/board.js~memberStatusPolling",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/board.js",
    "importStyle": "{memberStatusPolling}",
    "description": "pollingによるメンバーステータスの更新要求アクションのcreator",
    "lineNumber": 27,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "MEMBER_STATUS_POLLINGアクション"
    }
  },
  {
    "__docId__": 14,
    "kind": "file",
    "name": "src/action/group.js",
    "content": "/**\n* グループのロード完了アクション名\n*/\nexport const GROUPS_LOADED = \"GROUPS_LOADED\";\n\n/**\n* グループのロード完了アクションのcreator\n* @param {Object} groupinfo ロードされたグループ情報\n* @param {String} logonUserId ログインしているユーザーのID\n* @return GROUPS_LOADED アクション\n*/\nexport function groupsLoaded(groupinfo,logonUserId){\n  return {\n    type: GROUPS_LOADED,\n    payload : {\n      groupinfo:groupinfo,\n      logonUserId:logonUserId\n    }\n  };\n}\n\n/**\n* グループメンバーのロード完了アクション名\n*/\nexport const GROUP_MEMBER_LOADED = \"GROUP_MEMBER_LOADED\";\n\n/**\n* グループメンバーのロード完了アクションのcreator\n* @param {Object} groupWithMember メンバー情報付きのグループ情報\n* @param {String} logonUserId ログインしているユーザーのID\n* @return {Object} GROUP_MEMBER_LOADEDアクション\n*/\nexport function groupMemberLoaded(groupWithMember,logonUserId){\n  return {\n    type: GROUP_MEMBER_LOADED,\n    payload:{\n      groupWithMember:groupWithMember,\n      logonUserId:logonUserId\n    }\n  };\n}\n\n\n/**\n* グループ作成要求アクション名\n*/\nexport const CREATE_GROUP_REQUIRED = \"CREATE_GROUP_REQUIRED\";\n\n/**\n* グループ作成要求アクションのcreator\n* @param {string} groupName 作成を要求するグループ名\n* @return {Object} CREATE_GROUP_REQUIREDアクション\n*/\nexport function createGroupRequired(groupName){\n  return {\n    type: CREATE_GROUP_REQUIRED,\n    payload:{\n      groupName:groupName\n    }\n  };\n}\n\n/**\n* グループ作成成功アクション名\n*/\nexport const CREATE_GROUP_SUCCESS = \"CREATE_GROUP_SUCCESS\";\n\n/**\n* グループ作成成功アクションのcreator\n* @return {Object} CREATE_GROUP_SUCCESSアクション\n*/\nexport function createGroupSuccess(groupId){\n  return {\n    type:CREATE_GROUP_SUCCESS,\n    payload:{\n      groupId:groupId\n    }\n  };\n}\n/**\n* グループ作成失敗アクション名\n*/\nexport const CREATE_GROUP_FAILURE = \"CREATE_GROUP_FAILURE\";\n/**\n* グループ作成失敗アクションのcreator\n* @return {Object} CREATE_GROUP_FAILUREアクション\n*/\nexport function createGroupFailure(){\n  return {\n    type: CREATE_GROUP_FAILURE\n  };\n}\n/**\n* グループへのメンバー追加要求アクション名\n*/\nexport const ADD_MEMBER_TO_GROUP_REQUIRED = \"ADD_MEMBER_TO_GROUP_REQUIRED\";\n\n/**\n* グループへのメンバー追加要求アクションのcreator\n* @param {string} groupId 追加するグループのID\n* @param {string} memberId 追加するメンバーのID\n* @return {Object} ADD_MEMBER_TO_GROUP_REQUIREDアクション\n*/\nexport function addMemberToGroupRequired(groupId,memberId){\n  return {\n    type:ADD_MEMBER_TO_GROUP_REQUIRED,\n    payload:{\n      groupId:groupId,\n      memberId:memberId\n    }\n  };\n}\n/**\n* グループへのメンバー追加成功アクション名\n*/\nexport const ADD_MEMBER_TO_GROUP_SUCCESS = \"ADD_MEMBER_TO_GROUP_SUCCESS\";\n\n/**\n* グループへのメンバー追加成功アクションのcreator\n* @return {Object} ADD_MEMBER_TO_GROUP_SUCCESSアクション\n*/\nexport function addMemberToGroupSuccess(){\n  return {\n    type: ADD_MEMBER_TO_GROUP_SUCCESS\n  };\n}\n/**\n* グループへのメンバー追加失敗アクション名\n*/\nexport const ADD_MEMBER_TO_GROUP_FAILURE = \"ADD_MEMBER_TO_GROUP_FAILURE\";\n\n/**\n* グループへのメンバー追加失敗アクションのcreator\n* @return {Object} ADD_MEMBER_TO_GROUP_FAILUREアクション\n*/\nexport function addMemberToGroupFailure(){\n  return {\n    type: ADD_MEMBER_TO_GROUP_FAILURE\n  };\n}\n/**\n* グループからメンバーの削除要求アクション名\n*/\nexport const DELETE_MEMBER_FROM_GROUP_REQUIRED = \"DELETE_MEMBER_FROM_GROUP_REQUIRED\";\n\n/**\n* グループからメンバー削除要求アクションのcreator\n* @param {string} groupId メンバーを削除するグループのID\n* @param {string} memberId 削除されるメンバーのID\n* @return {Object} DELETE_MEMBER_FROM_GROUP_REQUIREDアクション\n*/\nexport function deleteMemberFromGroupRequired(groupId,memberId){\n  return {\n    type:DELETE_MEMBER_FROM_GROUP_REQUIRED,\n    payload:{\n      groupId:groupId,\n      memberId:memberId\n    }\n  };\n}\n/**\n* グループからのメンバー削除成功アクション名\n*/\nexport const DELETE_MEMBER_FROM_GROUP_SUCCESS = \"DELETE_MEMBER_FROM_GROUP_SUCCESS\";\n/**\n* グループからのメンバー削除成功アクションのcreator\n* @return DELETE_MEMBER_FROM_GROUP_SUCCESSアクション\n*/\nexport function deleteMemberFromGroupSuccess(){\n  return {\n    type:DELETE_MEMBER_FROM_GROUP_SUCCESS\n  };\n}\n/**\n* グループからのメンバー削除失敗アクション名\n*/\nexport const DELETE_MEMBER_FROM_GROUP_FAILURE = \"DELETE_MEMBER_FROM_GROUP_FAILURE\";\n\n/**\n* グループからのメンバー削除失敗アクションのcreator\n* @return DELETE_MEMBER_FROM_GROUP_FAILUREアクション\n*/\nexport function deleteMemberFromGroupFailure(){\n  return {\n    type:DELETE_MEMBER_FROM_GROUP_FAILURE\n  }\n}\n/**\n* グループメンバーの管理者設定要求アクション名\n*/\nexport const SET_MEMBER_AS_GROUP_ADMIN_REQUIRED = \"SET_MEMBER_AS_GROUP_ADMIN_REQUIRED\";\n\n/**\n* グループメンバーの管理者設定要求アクションのcreator\n* @param {string} groupId 管理者に設定するグループのID\n* @param {string} memberId 管理者に設定するメンバーのID\n* @return {Object} SET_MEMBER_AS_GROUP_ADMIN_REQUIREDアクション\n*/\nexport function setMemberAsGroupAdminRequired(groupId,memberId){\n  return {\n    type:SET_MEMBER_AS_GROUP_ADMIN_REQUIRED,\n    payload:{\n      groupId:groupId,\n      memberId:memberId\n    }\n  };\n}\n\n/**\n* グループメンバーの管理者設定成功アクション名\n*/\nexport const SET_MEMBER_AS_GROUP_ADMIN_SUCCESS = \"SET_MEMBER_AS_GROUP_ADMIN_SUCCESS\";\n\n/**\n* グループメンバーの管理者設定成功アクションのcreator\n* @return {Object} SET_MEMBER_AS_GROUP_ADMIN_SUCCESSアクション\n*/\nexport function setMemberAsGroupAdminSuccess(){\n  return {\n    type:SET_MEMBER_AS_GROUP_ADMIN_SUCCESS\n  };\n}\n\n/**\n* グループメンバーの管理者設定失敗アクション名\n*/\nexport const SET_MEMBER_AS_GROUP_ADMIN_FAILURE = \"SET_MEMBER_AS_GROUP_ADMIN_FAILURE\";\n\n/**\n* グループメンバーの管理者設定失敗アクションのcreator\n* @return {Object} SET_MEMBER_AS_GROUP_ADMIN_FAILUREアクション\n*/\nexport function setMemberAsGroupAdminFailure(){\n  return {\n    type:SET_MEMBER_AS_GROUP_ADMIN_FAILURE\n  };\n}\n\n/**\n* グループメンバーの管理者設定解除アクション名\n*/\nexport const UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED = \"UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED\";\n\n/**\n* グループメンバーの管理者設定解除アクションのcreator\n* @param {string} groupId　管理者設定を解除するグループのID\n* @param {string} memberId 管理者設定を解除するメンバーのID\n* @return {Object} UNSET_MEMBER_AS_GROUP_ADMIN_REQUIREDアクション\n*/\nexport function unsetMemberAsGroupAdminRequired(groupId,memberId){\n  return {\n    type:UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED,\n    payload:{\n      groupId:groupId,\n      memberId:memberId\n    }\n  };\n}\n\n/**\n* グループメンバーの管理者設定解除成功アクション名\n*/\nexport const UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS = \"UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS\";\n\n/**\n* グループメンバーの管理者設定解除成功アクションのcreator\n* @return {Object} UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESSアクション\n*/\nexport function unsetMemberAsGroupAdminSuccess(){\n  return {\n    type:UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS\n  };\n}\n\n/**\n* グループメンバーの管理者設定解除失敗アクション名\n*/\nexport const UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE = \"UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE\";\n\n/**\n* グループメンバーの管理者設定解除失敗アクションのcreator\n* @return {Object} UNSET_MEMBER_AS_GROUP_ADMIN_FAILUREアクション\n*/\nexport function unsetMemberAsGroupAdminFailure(){\n  return {\n    type:UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE\n  };\n}\n\n/**\n* グループ名変更要求アクション名\n*/\nexport const CHANGE_GROUP_NAME_REQUIRED = \"CHANGE_GROUP_NAME_REQUIRED\";\n\n/**\n* グループ名変更要求アクションのcreator\n* @param {string} groupId 名称を変更するグループのID\n* @param {string} newName 変更後の名称\n* @return {Object} CHANGE_GROUP_NAME_REQUIREDアクション\n*/\nexport function changeGroupNameRequired(groupId,newName){\n  return {\n    type:CHANGE_GROUP_NAME_REQUIRED,\n    payload:{\n      groupId:groupId,\n      newName:newName\n    }\n  };\n}\n\n/**\n* グループ名変更成功アクション名\n*/\nexport const CHANGE_GROUP_NAME_SUCCESS = \"CHANGE_GROUP_NAME_SUCCESS\";\n\n/**\n* グループ名変更成功アクションのcreator\n* @return {Object} CHANGE_GROUP_NAME_SUCCESSアクション\n*/\nexport function changeGroupNameSuccess(){\n  return {\n    type:CHANGE_GROUP_NAME_SUCCESS\n  };\n}\n/**\n* グループ名変更失敗アクション名\n*/\nexport const CHANGE_GROUP_NAME_FAILURE = \"CHANGE_GROUP_NAME_FAILURE\";\n\n/**\n* グループ名変更失敗アクションのcreator\n* @return {Object} CHANGE_GROUP_NAME_FAILUREアクション\n*/\nexport function changeGroupNameFailure(){\n  return {\n    type:CHANGE_GROUP_NAME_FAILURE\n  };\n}\n\n/**\n*　グループ削除要求アクション名\n*/\nexport const DELETE_GROUP_REQUIRED = \"DELETE_GROUP_REQUIRED\";\n\n/**\n* グループ削除要求アクションのcreator\n* @param {string} groupId 削除するグループのID\n* @return {Object} DELETE_GROUP_REQUIREDアクション\n*/\nexport function deleteGroupRequired(groupId){\n  return {\n    type:DELETE_GROUP_REQUIRED,\n    payload:{\n      groupId:groupId\n    }\n  };\n}\n/**\n* グループ削除成功アクション名\n*/\nexport const DELETE_GROUP_SUCCESS = \"DELETE_GROUP_SUCCESS\";\n\n/**\n* グループ削除成功アクションのcreator\n* @return DELETE_GROUP_SUCCESSアクション\n*/\nexport function deleteGroupSuccess(){\n  return {\n    type:DELETE_GROUP_SUCCESS\n  };\n}\n\n/**\n* グループ削除失敗アクション名\n*/\nexport const DELETE_GROUP_FAILURE = \"DELETE_GROUP_FAILURE\";\n/**\n* グループ削除失敗アクションのcreator\n* @return {Object} DELETE_GROUP_FAILUREアクション\n*/\nexport function deleteGroupFailure(){\n  return {\n    type:DELETE_GROUP_FAILURE\n  };\n}\n",
    "static": true,
    "longname": "src/action/group.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 15,
    "kind": "variable",
    "name": "GROUPS_LOADED",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~GROUPS_LOADED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{GROUPS_LOADED}",
    "description": "グループのロード完了アクション名",
    "lineNumber": 4,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 16,
    "kind": "function",
    "name": "groupsLoaded",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~groupsLoaded",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{groupsLoaded}",
    "description": "グループのロード完了アクションのcreator",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "groupinfo",
        "description": "ロードされたグループ情報"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "logonUserId",
        "description": "ログインしているユーザーのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "GROUPS_LOADED アクション"
    }
  },
  {
    "__docId__": 17,
    "kind": "variable",
    "name": "GROUP_MEMBER_LOADED",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~GROUP_MEMBER_LOADED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{GROUP_MEMBER_LOADED}",
    "description": "グループメンバーのロード完了アクション名",
    "lineNumber": 25,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "function",
    "name": "groupMemberLoaded",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~groupMemberLoaded",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{groupMemberLoaded}",
    "description": "グループメンバーのロード完了アクションのcreator",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "groupWithMember",
        "description": "メンバー情報付きのグループ情報"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "logonUserId",
        "description": "ログインしているユーザーのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "GROUP_MEMBER_LOADEDアクション"
    }
  },
  {
    "__docId__": 19,
    "kind": "variable",
    "name": "CREATE_GROUP_REQUIRED",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~CREATE_GROUP_REQUIRED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{CREATE_GROUP_REQUIRED}",
    "description": "グループ作成要求アクション名",
    "lineNumber": 47,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "function",
    "name": "createGroupRequired",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~createGroupRequired",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{createGroupRequired}",
    "description": "グループ作成要求アクションのcreator",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "groupName",
        "description": "作成を要求するグループ名"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "CREATE_GROUP_REQUIREDアクション"
    }
  },
  {
    "__docId__": 21,
    "kind": "variable",
    "name": "CREATE_GROUP_SUCCESS",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~CREATE_GROUP_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{CREATE_GROUP_SUCCESS}",
    "description": "グループ作成成功アクション名",
    "lineNumber": 66,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "function",
    "name": "createGroupSuccess",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~createGroupSuccess",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{createGroupSuccess}",
    "description": "グループ作成成功アクションのcreator",
    "lineNumber": 72,
    "params": [
      {
        "name": "groupId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "CREATE_GROUP_SUCCESSアクション"
    }
  },
  {
    "__docId__": 23,
    "kind": "variable",
    "name": "CREATE_GROUP_FAILURE",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~CREATE_GROUP_FAILURE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{CREATE_GROUP_FAILURE}",
    "description": "グループ作成失敗アクション名",
    "lineNumber": 83,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "function",
    "name": "createGroupFailure",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~createGroupFailure",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{createGroupFailure}",
    "description": "グループ作成失敗アクションのcreator",
    "lineNumber": 88,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "CREATE_GROUP_FAILUREアクション"
    }
  },
  {
    "__docId__": 25,
    "kind": "variable",
    "name": "ADD_MEMBER_TO_GROUP_REQUIRED",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~ADD_MEMBER_TO_GROUP_REQUIRED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{ADD_MEMBER_TO_GROUP_REQUIRED}",
    "description": "グループへのメンバー追加要求アクション名",
    "lineNumber": 96,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 26,
    "kind": "function",
    "name": "addMemberToGroupRequired",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~addMemberToGroupRequired",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{addMemberToGroupRequired}",
    "description": "グループへのメンバー追加要求アクションのcreator",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "groupId",
        "description": "追加するグループのID"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "memberId",
        "description": "追加するメンバーのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "ADD_MEMBER_TO_GROUP_REQUIREDアクション"
    }
  },
  {
    "__docId__": 27,
    "kind": "variable",
    "name": "ADD_MEMBER_TO_GROUP_SUCCESS",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~ADD_MEMBER_TO_GROUP_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{ADD_MEMBER_TO_GROUP_SUCCESS}",
    "description": "グループへのメンバー追加成功アクション名",
    "lineNumber": 116,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "function",
    "name": "addMemberToGroupSuccess",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~addMemberToGroupSuccess",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{addMemberToGroupSuccess}",
    "description": "グループへのメンバー追加成功アクションのcreator",
    "lineNumber": 122,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "ADD_MEMBER_TO_GROUP_SUCCESSアクション"
    }
  },
  {
    "__docId__": 29,
    "kind": "variable",
    "name": "ADD_MEMBER_TO_GROUP_FAILURE",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~ADD_MEMBER_TO_GROUP_FAILURE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{ADD_MEMBER_TO_GROUP_FAILURE}",
    "description": "グループへのメンバー追加失敗アクション名",
    "lineNumber": 130,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "function",
    "name": "addMemberToGroupFailure",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~addMemberToGroupFailure",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{addMemberToGroupFailure}",
    "description": "グループへのメンバー追加失敗アクションのcreator",
    "lineNumber": 136,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "ADD_MEMBER_TO_GROUP_FAILUREアクション"
    }
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "name": "DELETE_MEMBER_FROM_GROUP_REQUIRED",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~DELETE_MEMBER_FROM_GROUP_REQUIRED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{DELETE_MEMBER_FROM_GROUP_REQUIRED}",
    "description": "グループからメンバーの削除要求アクション名",
    "lineNumber": 144,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "function",
    "name": "deleteMemberFromGroupRequired",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~deleteMemberFromGroupRequired",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{deleteMemberFromGroupRequired}",
    "description": "グループからメンバー削除要求アクションのcreator",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "groupId",
        "description": "メンバーを削除するグループのID"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "memberId",
        "description": "削除されるメンバーのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "DELETE_MEMBER_FROM_GROUP_REQUIREDアクション"
    }
  },
  {
    "__docId__": 33,
    "kind": "variable",
    "name": "DELETE_MEMBER_FROM_GROUP_SUCCESS",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~DELETE_MEMBER_FROM_GROUP_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{DELETE_MEMBER_FROM_GROUP_SUCCESS}",
    "description": "グループからのメンバー削除成功アクション名",
    "lineNumber": 164,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "function",
    "name": "deleteMemberFromGroupSuccess",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~deleteMemberFromGroupSuccess",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{deleteMemberFromGroupSuccess}",
    "description": "グループからのメンバー削除成功アクションのcreator",
    "lineNumber": 169,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "DELETE_MEMBER_FROM_GROUP_SUCCESSアクション"
    }
  },
  {
    "__docId__": 35,
    "kind": "variable",
    "name": "DELETE_MEMBER_FROM_GROUP_FAILURE",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~DELETE_MEMBER_FROM_GROUP_FAILURE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{DELETE_MEMBER_FROM_GROUP_FAILURE}",
    "description": "グループからのメンバー削除失敗アクション名",
    "lineNumber": 177,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "function",
    "name": "deleteMemberFromGroupFailure",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~deleteMemberFromGroupFailure",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{deleteMemberFromGroupFailure}",
    "description": "グループからのメンバー削除失敗アクションのcreator",
    "lineNumber": 183,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "DELETE_MEMBER_FROM_GROUP_FAILUREアクション"
    }
  },
  {
    "__docId__": 37,
    "kind": "variable",
    "name": "SET_MEMBER_AS_GROUP_ADMIN_REQUIRED",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~SET_MEMBER_AS_GROUP_ADMIN_REQUIRED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{SET_MEMBER_AS_GROUP_ADMIN_REQUIRED}",
    "description": "グループメンバーの管理者設定要求アクション名",
    "lineNumber": 191,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "function",
    "name": "setMemberAsGroupAdminRequired",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~setMemberAsGroupAdminRequired",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{setMemberAsGroupAdminRequired}",
    "description": "グループメンバーの管理者設定要求アクションのcreator",
    "lineNumber": 199,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "groupId",
        "description": "管理者に設定するグループのID"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "memberId",
        "description": "管理者に設定するメンバーのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "SET_MEMBER_AS_GROUP_ADMIN_REQUIREDアクション"
    }
  },
  {
    "__docId__": 39,
    "kind": "variable",
    "name": "SET_MEMBER_AS_GROUP_ADMIN_SUCCESS",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~SET_MEMBER_AS_GROUP_ADMIN_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{SET_MEMBER_AS_GROUP_ADMIN_SUCCESS}",
    "description": "グループメンバーの管理者設定成功アクション名",
    "lineNumber": 212,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "function",
    "name": "setMemberAsGroupAdminSuccess",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~setMemberAsGroupAdminSuccess",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{setMemberAsGroupAdminSuccess}",
    "description": "グループメンバーの管理者設定成功アクションのcreator",
    "lineNumber": 218,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "SET_MEMBER_AS_GROUP_ADMIN_SUCCESSアクション"
    }
  },
  {
    "__docId__": 41,
    "kind": "variable",
    "name": "SET_MEMBER_AS_GROUP_ADMIN_FAILURE",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~SET_MEMBER_AS_GROUP_ADMIN_FAILURE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{SET_MEMBER_AS_GROUP_ADMIN_FAILURE}",
    "description": "グループメンバーの管理者設定失敗アクション名",
    "lineNumber": 227,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "function",
    "name": "setMemberAsGroupAdminFailure",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~setMemberAsGroupAdminFailure",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{setMemberAsGroupAdminFailure}",
    "description": "グループメンバーの管理者設定失敗アクションのcreator",
    "lineNumber": 233,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "SET_MEMBER_AS_GROUP_ADMIN_FAILUREアクション"
    }
  },
  {
    "__docId__": 43,
    "kind": "variable",
    "name": "UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED}",
    "description": "グループメンバーの管理者設定解除アクション名",
    "lineNumber": 242,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "function",
    "name": "unsetMemberAsGroupAdminRequired",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~unsetMemberAsGroupAdminRequired",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{unsetMemberAsGroupAdminRequired}",
    "description": "グループメンバーの管理者設定解除アクションのcreator",
    "lineNumber": 250,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "groupId",
        "description": "管理者設定を解除するグループのID"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "memberId",
        "description": "管理者設定を解除するメンバーのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "UNSET_MEMBER_AS_GROUP_ADMIN_REQUIREDアクション"
    }
  },
  {
    "__docId__": 45,
    "kind": "variable",
    "name": "UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS}",
    "description": "グループメンバーの管理者設定解除成功アクション名",
    "lineNumber": 263,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "function",
    "name": "unsetMemberAsGroupAdminSuccess",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~unsetMemberAsGroupAdminSuccess",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{unsetMemberAsGroupAdminSuccess}",
    "description": "グループメンバーの管理者設定解除成功アクションのcreator",
    "lineNumber": 269,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESSアクション"
    }
  },
  {
    "__docId__": 47,
    "kind": "variable",
    "name": "UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE}",
    "description": "グループメンバーの管理者設定解除失敗アクション名",
    "lineNumber": 278,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "function",
    "name": "unsetMemberAsGroupAdminFailure",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~unsetMemberAsGroupAdminFailure",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{unsetMemberAsGroupAdminFailure}",
    "description": "グループメンバーの管理者設定解除失敗アクションのcreator",
    "lineNumber": 284,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "UNSET_MEMBER_AS_GROUP_ADMIN_FAILUREアクション"
    }
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "CHANGE_GROUP_NAME_REQUIRED",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~CHANGE_GROUP_NAME_REQUIRED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{CHANGE_GROUP_NAME_REQUIRED}",
    "description": "グループ名変更要求アクション名",
    "lineNumber": 293,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "changeGroupNameRequired",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~changeGroupNameRequired",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{changeGroupNameRequired}",
    "description": "グループ名変更要求アクションのcreator",
    "lineNumber": 301,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "groupId",
        "description": "名称を変更するグループのID"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "変更後の名称"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "CHANGE_GROUP_NAME_REQUIREDアクション"
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "CHANGE_GROUP_NAME_SUCCESS",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~CHANGE_GROUP_NAME_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{CHANGE_GROUP_NAME_SUCCESS}",
    "description": "グループ名変更成功アクション名",
    "lineNumber": 314,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "changeGroupNameSuccess",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~changeGroupNameSuccess",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{changeGroupNameSuccess}",
    "description": "グループ名変更成功アクションのcreator",
    "lineNumber": 320,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "CHANGE_GROUP_NAME_SUCCESSアクション"
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "CHANGE_GROUP_NAME_FAILURE",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~CHANGE_GROUP_NAME_FAILURE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{CHANGE_GROUP_NAME_FAILURE}",
    "description": "グループ名変更失敗アクション名",
    "lineNumber": 328,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "changeGroupNameFailure",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~changeGroupNameFailure",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{changeGroupNameFailure}",
    "description": "グループ名変更失敗アクションのcreator",
    "lineNumber": 334,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "CHANGE_GROUP_NAME_FAILUREアクション"
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "DELETE_GROUP_REQUIRED",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~DELETE_GROUP_REQUIRED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{DELETE_GROUP_REQUIRED}",
    "description": "　グループ削除要求アクション名",
    "lineNumber": 343,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "deleteGroupRequired",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~deleteGroupRequired",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{deleteGroupRequired}",
    "description": "グループ削除要求アクションのcreator",
    "lineNumber": 350,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "groupId",
        "description": "削除するグループのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "DELETE_GROUP_REQUIREDアクション"
    }
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "DELETE_GROUP_SUCCESS",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~DELETE_GROUP_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{DELETE_GROUP_SUCCESS}",
    "description": "グループ削除成功アクション名",
    "lineNumber": 361,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "deleteGroupSuccess",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~deleteGroupSuccess",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{deleteGroupSuccess}",
    "description": "グループ削除成功アクションのcreator",
    "lineNumber": 367,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "DELETE_GROUP_SUCCESSアクション"
    }
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "DELETE_GROUP_FAILURE",
    "memberof": "src/action/group.js",
    "static": true,
    "longname": "src/action/group.js~DELETE_GROUP_FAILURE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{DELETE_GROUP_FAILURE}",
    "description": "グループ削除失敗アクション名",
    "lineNumber": 376,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "deleteGroupFailure",
    "memberof": "src/action/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/group.js~deleteGroupFailure",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/group.js",
    "importStyle": "{deleteGroupFailure}",
    "description": "グループ削除失敗アクションのcreator",
    "lineNumber": 381,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "DELETE_GROUP_FAILUREアクション"
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/action/groupboards.js",
    "content": "/**\n* グループ作成ボードオープンアクション名\n*/\nexport const OPEN_GROUP_CREATION_BOARD = \"OPEN_GROUP_CREATION_BOARD\";\n\n/**\n* グループ作成ボードオープンアクションのcreator\n* @return {Object} OPEN_GROUP_CREATION_BOARDアクション\n*/\nexport function openGroupCreationBoard(){\n  return {\n    type : OPEN_GROUP_CREATION_BOARD\n  };\n}\n\n/**\n* グループ作成ボードクローズアクション\n*/\nexport const CLOSE_GROUP_CREATION_BOARD = \"CLOSE_GROUP_CREATION_BOARD\";\n\n/**\n* グループ作成ボードクローズアクションのcreator\n* @return {Object} CLOSE_GROUP_CREATION_BOARDアクション\n*/\nexport function closeGroupCreationBoard(){\n  return {\n    type: CLOSE_GROUP_CREATION_BOARD\n  };\n}\n\n/**\n* グループ管理ボードオープンアクション名\n*/\nexport const OPEN_GROUP_MANAGEMENT_BOARD = \"OPEN_GROUP_MANAGEMENT_BOARD\";\n\n/**\n* グループ管理ボードオープンアクションのcreator\n* @param {String} targetGroupId 管理対象のGroupのID\n* @return {Object} OPEN_GROUP_MANAGEMENT_BOARDアクション\n*/\nexport function openGroupManagementBoard(targetGroupId){\n  return {\n    type: OPEN_GROUP_MANAGEMENT_BOARD,\n    payload:{\n      groupId:targetGroupId\n    }\n  };\n}\n\n/**\n* グループ管理ボードクローズアクション名\n*/\nexport const CLOSE_GROUP_MANAGEMENT_BOARD = \"CLOSE_GROUP_MANAGEMENT_BOARD\";\n\n/**\n* グループ管理ボードクローズアクションのcreator\n* @return {Object} CLOSE_GROUP_MANAGEMENT_BOARDアクション\n*/\nexport function closeGroupManagementBoard(){\n  return {\n    type: CLOSE_GROUP_MANAGEMENT_BOARD\n  };\n}\n",
    "static": true,
    "longname": "src/action/groupboards.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "OPEN_GROUP_CREATION_BOARD",
    "memberof": "src/action/groupboards.js",
    "static": true,
    "longname": "src/action/groupboards.js~OPEN_GROUP_CREATION_BOARD",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/groupboards.js",
    "importStyle": "{OPEN_GROUP_CREATION_BOARD}",
    "description": "グループ作成ボードオープンアクション名",
    "lineNumber": 4,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "openGroupCreationBoard",
    "memberof": "src/action/groupboards.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/groupboards.js~openGroupCreationBoard",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/groupboards.js",
    "importStyle": "{openGroupCreationBoard}",
    "description": "グループ作成ボードオープンアクションのcreator",
    "lineNumber": 10,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "OPEN_GROUP_CREATION_BOARDアクション"
    }
  },
  {
    "__docId__": 64,
    "kind": "variable",
    "name": "CLOSE_GROUP_CREATION_BOARD",
    "memberof": "src/action/groupboards.js",
    "static": true,
    "longname": "src/action/groupboards.js~CLOSE_GROUP_CREATION_BOARD",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/groupboards.js",
    "importStyle": "{CLOSE_GROUP_CREATION_BOARD}",
    "description": "グループ作成ボードクローズアクション",
    "lineNumber": 19,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "closeGroupCreationBoard",
    "memberof": "src/action/groupboards.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/groupboards.js~closeGroupCreationBoard",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/groupboards.js",
    "importStyle": "{closeGroupCreationBoard}",
    "description": "グループ作成ボードクローズアクションのcreator",
    "lineNumber": 25,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "CLOSE_GROUP_CREATION_BOARDアクション"
    }
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "OPEN_GROUP_MANAGEMENT_BOARD",
    "memberof": "src/action/groupboards.js",
    "static": true,
    "longname": "src/action/groupboards.js~OPEN_GROUP_MANAGEMENT_BOARD",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/groupboards.js",
    "importStyle": "{OPEN_GROUP_MANAGEMENT_BOARD}",
    "description": "グループ管理ボードオープンアクション名",
    "lineNumber": 34,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "openGroupManagementBoard",
    "memberof": "src/action/groupboards.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/groupboards.js~openGroupManagementBoard",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/groupboards.js",
    "importStyle": "{openGroupManagementBoard}",
    "description": "グループ管理ボードオープンアクションのcreator",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "targetGroupId",
        "description": "管理対象のGroupのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "OPEN_GROUP_MANAGEMENT_BOARDアクション"
    }
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "CLOSE_GROUP_MANAGEMENT_BOARD",
    "memberof": "src/action/groupboards.js",
    "static": true,
    "longname": "src/action/groupboards.js~CLOSE_GROUP_MANAGEMENT_BOARD",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/groupboards.js",
    "importStyle": "{CLOSE_GROUP_MANAGEMENT_BOARD}",
    "description": "グループ管理ボードクローズアクション名",
    "lineNumber": 53,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "closeGroupManagementBoard",
    "memberof": "src/action/groupboards.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/groupboards.js~closeGroupManagementBoard",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/groupboards.js",
    "importStyle": "{closeGroupManagementBoard}",
    "description": "グループ管理ボードクローズアクションのcreator",
    "lineNumber": 59,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "CLOSE_GROUP_MANAGEMENT_BOARDアクション"
    }
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/action/login.js",
    "content": "/**\n* ログイン要求アクション名\n*/\nexport const LOGIN_REQUESTED = \"LOGIN_REQUESTED\";\n\n/**\n* ログイン要求アクションのcreator\n* @param {string} id ユーザーID\n* @param {string} pass パスワード\n* @return {Object} ログイン要求アクション\n*/\nexport function loginRequested(id,pass){\n  return {\n    type:LOGIN_REQUESTED,\n    payload:{\n      id:id,\n      pass:pass\n    }\n  };\n}\n\n/**\n* ログイン成功アクション名\n*/\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\n\n/**\n* ログイン成功アクションのcreator\n* @param {{userid:string,name:string,token:string}} userinfo 成功したユーザー情報\n* @return {Object} ログイン成功アクション\n*/\nexport function loginSuccess(userinfo){\n  return {\n    type:LOGIN_SUCCESS,\n    payload:userinfo\n  };\n}\n\n/**\n* ログイン失敗アクション名\n*/\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\n/**\n* ログイン失敗アクションのcreator\n* @return {Object} ログイン失敗アクション\n*/\nexport function loginFailure(){\n  return {\n    type: LOGIN_FAILURE\n  };\n}\n\n/**\n* ログアウト要求アクション名\n*/\nexport const LOGOUT_REQUESTED = \"LOGOUT_REQUESTED\";\n\n/**\n* ログアウト要求アクションのcreator\n* @return {Object} ログアウト要求アクション\n*/\nexport function logoutRequested(){\n  return {\n    type : LOGOUT_REQUESTED\n  };\n}\n",
    "static": true,
    "longname": "src/action/login.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "LOGIN_REQUESTED",
    "memberof": "src/action/login.js",
    "static": true,
    "longname": "src/action/login.js~LOGIN_REQUESTED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/login.js",
    "importStyle": "{LOGIN_REQUESTED}",
    "description": "ログイン要求アクション名",
    "lineNumber": 4,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "loginRequested",
    "memberof": "src/action/login.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/login.js~loginRequested",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/login.js",
    "importStyle": "{loginRequested}",
    "description": "ログイン要求アクションのcreator",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "ユーザーID"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pass",
        "description": "パスワード"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "ログイン要求アクション"
    }
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "LOGIN_SUCCESS",
    "memberof": "src/action/login.js",
    "static": true,
    "longname": "src/action/login.js~LOGIN_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/login.js",
    "importStyle": "{LOGIN_SUCCESS}",
    "description": "ログイン成功アクション名",
    "lineNumber": 25,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "loginSuccess",
    "memberof": "src/action/login.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/login.js~loginSuccess",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/login.js",
    "importStyle": "{loginSuccess}",
    "description": "ログイン成功アクションのcreator",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "{userid:string,name:string,token:string}"
        ],
        "spread": false,
        "optional": false,
        "name": "userinfo",
        "description": "成功したユーザー情報"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "ログイン成功アクション"
    }
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "LOGIN_FAILURE",
    "memberof": "src/action/login.js",
    "static": true,
    "longname": "src/action/login.js~LOGIN_FAILURE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/login.js",
    "importStyle": "{LOGIN_FAILURE}",
    "description": "ログイン失敗アクション名",
    "lineNumber": 42,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "loginFailure",
    "memberof": "src/action/login.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/login.js~loginFailure",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/login.js",
    "importStyle": "{loginFailure}",
    "description": "ログイン失敗アクションのcreator",
    "lineNumber": 48,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "ログイン失敗アクション"
    }
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "LOGOUT_REQUESTED",
    "memberof": "src/action/login.js",
    "static": true,
    "longname": "src/action/login.js~LOGOUT_REQUESTED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/login.js",
    "importStyle": "{LOGOUT_REQUESTED}",
    "description": "ログアウト要求アクション名",
    "lineNumber": 57,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "logoutRequested",
    "memberof": "src/action/login.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/login.js~logoutRequested",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/login.js",
    "importStyle": "{logoutRequested}",
    "description": "ログアウト要求アクションのcreator",
    "lineNumber": 63,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "ログアウト要求アクション"
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/action/mydestination.js",
    "content": "import {DEFAULT_MY_DESTINATION} from '../const/mydestination';\n\n/**\n* 自分の行き先変更アクション名\n*/\nexport const MY_DESTINATION_CHANGE = \"MY_DESTINATION_CHANGE\";\n\n/**\n* 自分の行き先変更アクションのcreator\n* @param {{inBusiness:boolean,comment:string,contact:string}} destination 行き先\n* @return {Object} 自分の行き先変更アクション\n*/\nexport function myDestinationChange(destination){\n  return {\n    type:MY_DESTINATION_CHANGE,\n    payload:destination\n  };\n}\n\n\n/**\n* 自分の行き先変更アクションをデフォルトの値で作るcreator\n* @return {Object} 自分の行き先変更アクション\n*/\nexport function myDestinationClear(){\n  return {\n    type:MY_DESTINATION_CHANGE,\n    payload:DEFAULT_MY_DESTINATION\n  };\n}\n\n/**\n* 自分の行き先セーブ完了アクション\n*/\nexport const MY_DESTINATION_SAVE_COMPLETE = \"MY_DESTINATION_SAVE_COMPLETE\";\n\n/**\n* 自分の行き先セーブ完了アクションのcreator\n* @param {{inBusiness:boolean,comment:string,contact:string}} destination 行き先\n* @return {Object} 自分の行き先セーブ完了アクション\n*/\nexport function myDestinationSaveComplete(destination){\n  return {\n    type : MY_DESTINATION_SAVE_COMPLETE,\n    payload:destination\n  };\n}\n",
    "static": true,
    "longname": "src/action/mydestination.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "MY_DESTINATION_CHANGE",
    "memberof": "src/action/mydestination.js",
    "static": true,
    "longname": "src/action/mydestination.js~MY_DESTINATION_CHANGE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/mydestination.js",
    "importStyle": "{MY_DESTINATION_CHANGE}",
    "description": "自分の行き先変更アクション名",
    "lineNumber": 6,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "myDestinationChange",
    "memberof": "src/action/mydestination.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/mydestination.js~myDestinationChange",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/mydestination.js",
    "importStyle": "{myDestinationChange}",
    "description": "自分の行き先変更アクションのcreator",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "{inBusiness:boolean,comment:string,contact:string}"
        ],
        "spread": false,
        "optional": false,
        "name": "destination",
        "description": "行き先"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "自分の行き先変更アクション"
    }
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "myDestinationClear",
    "memberof": "src/action/mydestination.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/mydestination.js~myDestinationClear",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/mydestination.js",
    "importStyle": "{myDestinationClear}",
    "description": "自分の行き先変更アクションをデフォルトの値で作るcreator",
    "lineNumber": 25,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "自分の行き先変更アクション"
    }
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "MY_DESTINATION_SAVE_COMPLETE",
    "memberof": "src/action/mydestination.js",
    "static": true,
    "longname": "src/action/mydestination.js~MY_DESTINATION_SAVE_COMPLETE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/mydestination.js",
    "importStyle": "{MY_DESTINATION_SAVE_COMPLETE}",
    "description": "自分の行き先セーブ完了アクション",
    "lineNumber": 35,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "myDestinationSaveComplete",
    "memberof": "src/action/mydestination.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/mydestination.js~myDestinationSaveComplete",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/mydestination.js",
    "importStyle": "{myDestinationSaveComplete}",
    "description": "自分の行き先セーブ完了アクションのcreator",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "{inBusiness:boolean,comment:string,contact:string}"
        ],
        "spread": false,
        "optional": false,
        "name": "destination",
        "description": "行き先"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "自分の行き先セーブ完了アクション"
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "src/action/signup.js",
    "content": "/**\n*サインアップ要求アクション名\n*/\nexport const SIGNUP_REQUIRED = \"SIGNUP_REQUIRED\";\n\n/**\n* サインアップ要求アクションのcreator\n* @param {{id:string,password:string,name:string}} userinfo 登録を要求するユーザー情報\n* @return {Object} SIGNUP_REQUIREDアクション\n*/\nexport function signupRequired(userinfo){\n  return {\n    type:SIGNUP_REQUIRED,\n    payload:userinfo\n  }\n}\n/**\n* サインアップ成功アクション名\n*/\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\n/**\n* サインアップ成功アクションのcreator\n* @return {Object} SIGNUP_SUCCESSアクション\n*/\nexport function signupSucceess(){\n  return {\n    type:SIGNUP_SUCCESS\n  };\n}\n\n/**\n* サインアップ失敗アクション名\n*/\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\n\n/**\n* サインアップ失敗アクションのcreator\n* @param {array} reasons 失敗理由の配列\n* @return {Object} SIGNUP_FAILUREアクション\n*/\nexport function signupFailure(reasons){\n  return {\n    type:SIGNUP_FAILURE,\n    payload:reasons\n  }\n}\n",
    "static": true,
    "longname": "src/action/signup.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "SIGNUP_REQUIRED",
    "memberof": "src/action/signup.js",
    "static": true,
    "longname": "src/action/signup.js~SIGNUP_REQUIRED",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/signup.js",
    "importStyle": "{SIGNUP_REQUIRED}",
    "description": "サインアップ要求アクション名",
    "lineNumber": 4,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "signupRequired",
    "memberof": "src/action/signup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/signup.js~signupRequired",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/signup.js",
    "importStyle": "{signupRequired}",
    "description": "サインアップ要求アクションのcreator",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "{id:string,password:string,name:string}"
        ],
        "spread": false,
        "optional": false,
        "name": "userinfo",
        "description": "登録を要求するユーザー情報"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "SIGNUP_REQUIREDアクション"
    }
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "SIGNUP_SUCCESS",
    "memberof": "src/action/signup.js",
    "static": true,
    "longname": "src/action/signup.js~SIGNUP_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/signup.js",
    "importStyle": "{SIGNUP_SUCCESS}",
    "description": "サインアップ成功アクション名",
    "lineNumber": 20,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "signupSucceess",
    "memberof": "src/action/signup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/signup.js~signupSucceess",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/signup.js",
    "importStyle": "{signupSucceess}",
    "description": "サインアップ成功アクションのcreator",
    "lineNumber": 25,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "SIGNUP_SUCCESSアクション"
    }
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "SIGNUP_FAILURE",
    "memberof": "src/action/signup.js",
    "static": true,
    "longname": "src/action/signup.js~SIGNUP_FAILURE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/signup.js",
    "importStyle": "{SIGNUP_FAILURE}",
    "description": "サインアップ失敗アクション名",
    "lineNumber": 34,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "signupFailure",
    "memberof": "src/action/signup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/signup.js~signupFailure",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/signup.js",
    "importStyle": "{signupFailure}",
    "description": "サインアップ失敗アクションのcreator",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "reasons",
        "description": "失敗理由の配列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "SIGNUP_FAILUREアクション"
    }
  },
  {
    "__docId__": 92,
    "kind": "file",
    "name": "src/action/suggestion.js",
    "content": "\n/**\n* 自分の行き先変更アクション名\n*/\nexport const SUGGESTION_CHANGE = \"SUGGESTION_CHANGE\";\n\n/**\n* 自分の行き先変更アクションのcreator\n* @param {array} suggests 行き先の配列\n* @return {Object} 自分の行き先変更アクション\n*/\nexport function suggestionChange(suggests){\n  return {\n    type:SUGGESTION_CHANGE,\n    payload:suggests\n  };\n}\n\n/**\n* 自分の行き先クリアアクション名\n*/\nexport const SUGGESTION_CLEAR = \"SUGGESTION_CLEAR\";\n\n/**\n* 自分の行き先クリアアクションのcreator\n* @return {Object} 自分の行き先クリアアクション\n*/\nexport function suggestionClear(){\n  return {\n    type:SUGGESTION_CLEAR\n  };\n}\n",
    "static": true,
    "longname": "src/action/suggestion.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "SUGGESTION_CHANGE",
    "memberof": "src/action/suggestion.js",
    "static": true,
    "longname": "src/action/suggestion.js~SUGGESTION_CHANGE",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/suggestion.js",
    "importStyle": "{SUGGESTION_CHANGE}",
    "description": "自分の行き先変更アクション名",
    "lineNumber": 5,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "suggestionChange",
    "memberof": "src/action/suggestion.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/suggestion.js~suggestionChange",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/suggestion.js",
    "importStyle": "{suggestionChange}",
    "description": "自分の行き先変更アクションのcreator",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "suggests",
        "description": "行き先の配列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "自分の行き先変更アクション"
    }
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "SUGGESTION_CLEAR",
    "memberof": "src/action/suggestion.js",
    "static": true,
    "longname": "src/action/suggestion.js~SUGGESTION_CLEAR",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/suggestion.js",
    "importStyle": "{SUGGESTION_CLEAR}",
    "description": "自分の行き先クリアアクション名",
    "lineNumber": 22,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "suggestionClear",
    "memberof": "src/action/suggestion.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/action/suggestion.js~suggestionClear",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/action/suggestion.js",
    "importStyle": "{suggestionClear}",
    "description": "自分の行き先クリアアクションのcreator",
    "lineNumber": 28,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "自分の行き先クリアアクション"
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/component/accountboard.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\nimport {Toolbar, ToolbarGroup, ToolbarSeparator, ToolbarTitle} from 'material-ui/Toolbar';\nimport Dialog from 'material-ui/Dialog';\nimport {closeAccountInfoModal,changeAccountInfo,changeAccountInfoField} from '../action/accountboard';\n\n/**\n* AccountBoardコンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class AccountBoard extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n    //ES2015版のReactだとこのおまじないをしないとメソッド内でthisが解決しない...\n    this.hundleSubmit = this.hundleSubmit.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.hundlePassChange = this.hundlePassChange.bind(this);\n    this.hundleNameChange = this.hundleNameChange.bind(this);\n  }\n\n  /**\n  * アカウント情報変更ボタンのクリックをハンドリングするメソッド\n  * @return {undefined}\n  */\n  hundleSubmit(){\n      this.props.dispatch(changeAccountInfo(this.props.accountboard.nextuser.nextname, this.props.accountboard.nextuser.nextpass));\n  }\n\n  /**\n  * モーダルのクローズをハンドリングするメソッド\n  * @return {undefined}\n  */\n  handleClose(){\n      this.props.dispatch(closeAccountInfoModal());\n  }\n\n  /**\n  * passテキストボックスの変更をハンドリングするメソッド\n  * @param {Object} event イベント\n  * @param {string} newValue 変更後の値\n  * @return {undefined}\n  */\n  hundlePassChange(event,newValue){\n    this.props.dispatch(changeAccountInfoField(this.props.accountboard.nextuser.nextname, newValue));\n  }\n\n  /**\n  * nameテキストボックスの変更をハンドリングするメソッド\n  * @param {Object} event イベント\n  * @param {string} newValue 変更後の値\n  * @return {undefined}\n  */\n  hundleNameChange(event,newValue){\n    this.props.dispatch(changeAccountInfoField(newValue, this.props.accountboard.nextuser.nextpass));\n  }\n\n  /**\n  * 描画メソッド\n  * @return {undefined}\n  */\n  render(){\n    const actions = [\n      <FlatButton\n        label=\"Cancel\"\n        primary={true}\n        onTouchTap={this.handleClose}\n        ref=\"cancel\"\n      />,\n      <FlatButton\n        label=\"Submit\"\n        primary={true}\n        onTouchTap={this.hundleSubmit}\n        ref=\"submit\"\n      />,\n    ];\n\n    // ツールバーの表示\n    const accountboard =\n        <Dialog\n          title=\"アカウント情報変更\"\n          actions={actions}\n          modal={true}\n          open={this.props.accountboard.open}\n        >\n          <TextField\n          hintText=\"表示名\"\n          value={this.props.accountboard.nextuser.nextname}\n          onChange={this.hundleNameChange}\n          ref=\"name\"\n          />\n          <br />\n          <TextField\n          hintText=\"Password\"\n          value={this.props.accountboard.nextuser.nextpass}\n          type=\"password\"\n          onChange={this.hundlePassChange}\n          ref=\"pass\"\n          />\n        </Dialog>\n\n    return (\n      <div>{accountboard}</div>\n    )\n  }\n}\n",
    "static": true,
    "longname": "src/component/accountboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "class",
    "name": "AccountBoard",
    "memberof": "src/component/accountboard.js",
    "static": true,
    "longname": "src/component/accountboard.js~AccountBoard",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/accountboard.js",
    "importStyle": "AccountBoard",
    "description": "AccountBoardコンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 99,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "hundleSubmit",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#hundleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "handleClose",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#handleClose",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "hundlePassChange",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#hundlePassChange",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "hundleNameChange",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#hundleNameChange",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "hundleSubmit",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#hundleSubmit",
    "access": null,
    "description": "アカウント情報変更ボタンのクリックをハンドリングするメソッド",
    "lineNumber": 32,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "handleClose",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#handleClose",
    "access": null,
    "description": "モーダルのクローズをハンドリングするメソッド",
    "lineNumber": 40,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "hundlePassChange",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#hundlePassChange",
    "access": null,
    "description": "passテキストボックスの変更をハンドリングするメソッド",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "変更後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "hundleNameChange",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#hundleNameChange",
    "access": null,
    "description": "nameテキストボックスの変更をハンドリングするメソッド",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "変更後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/accountboard.js~AccountBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/accountboard.js~AccountBoard#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 68,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/component/board.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MemberRow from './memberrow';\nimport TextField from 'material-ui/TextField';\n\n\n/**\n* 行き先掲示板コンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class Board extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n    this.state = {\n      current_filter_text:\"\"\n    }\n    this.hundleFilterChange = this.hundleFilterChange.bind(this);\n  }\n\n  /**\n  * Filterテキストボックスの変更をハンドリングするメソッド\n  * @param {Object} event イベント\n  * @param {string} newValue 変更後の値\n  * @return {undefined}\n  */\n  hundleFilterChange(event,newValue){\n    this.setState({current_filter_text : newValue});\n  }\n  /**\n  * 描画メソッド\n  * @return {undefined}\n  */\n  render(){\n\n    const filterMemberRows = this.props.memberStatus.filter((member) => (\n      member.name.toLowerCase().indexOf(this.state.current_filter_text.toLowerCase()) >= 0\n    ));\n\n    const memberRows = filterMemberRows.map((member,idx) => <MemberRow key={idx} member={member}/>);\n    const date = new Date().toLocaleDateString('ja-JP');\n\n    return (\n      <div>\n      <h3>行き先掲示板</h3>\n      <p>{date}</p>\n      <TextField\n        hintText=\"Filter\"\n        value={this.state.current_filter_text}\n        onChange={this.hundleFilterChange}\n        ref=\"memberfilter\"\n        />\n      {memberRows}\n      </div>);\n  }\n}\n",
    "static": true,
    "longname": "src/component/board.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "Board",
    "memberof": "src/component/board.js",
    "static": true,
    "longname": "src/component/board.js~Board",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/board.js",
    "importStyle": "Board",
    "description": "行き先掲示板コンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/board.js~Board#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "state",
    "memberof": "src/component/board.js~Board",
    "static": false,
    "longname": "src/component/board.js~Board#state",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"current_filter_text\": *}"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "hundleFilterChange",
    "memberof": "src/component/board.js~Board",
    "static": false,
    "longname": "src/component/board.js~Board#hundleFilterChange",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "hundleFilterChange",
    "memberof": "src/component/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/board.js~Board#hundleFilterChange",
    "access": null,
    "description": "Filterテキストボックスの変更をハンドリングするメソッド",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "変更後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/board.js~Board",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/board.js~Board#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 38,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/component/groupcreationboard.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\nimport Dialog from 'material-ui/Dialog';\nimport {closeGroupCreationBoard} from '../action/groupboards';\nimport {createGroupRequired} from '../action/group';\n\n/**\n* GroupCreationBoardコンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class GroupCreationBoard extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n\n    this.state = {\n      newGroupName:\"\"\n    }\n\n    this.hundleNameChange = this.hundleNameChange.bind(this);\n    this.hundleClose = this.hundleClose.bind(this);\n    this.hundleOK = this.hundleOK.bind(this);\n  }\n  /**\n  * グループ名の変更をハンドリングするhundler\n  * @param {Object} event イベント\n  * @param {string} newValue 変更後の値\n  * @return {undefined}\n  */\n  hundleNameChange(event,newValue){\n    this.setState({newGroupName:newValue});\n  }\n\n  /**\n  * キャンセルボタンのクリックをハンドリングするhundler\n  * @return {undefined}\n  */\n  hundleClose(){\n    this.setState({newGroupName:\"\"});\n    this.props.dispatch(closeGroupCreationBoard());\n  }\n  /**\n  * OKボタンのクリックをハンドリングするhundler\n  * @return {undefined}\n  */\n  hundleOK(){\n    const newGroupName = this.state.newGroupName;\n    if(newGroupName.trim().length > 0){\n      this.setState({newGroupName:\"\"});\n      this.props.dispatch(createGroupRequired(newGroupName));\n    }\n  }\n\n  /**\n  * 描画メソッド\n  * @return {Object} JSX\n  */\n  render(){\n    const actions = [\n      <FlatButton\n        label=\"Close\"\n        primary={true}\n        onTouchTap={this.hundleClose}\n        ref=\"Close\"\n      />,\n      <FlatButton\n        label=\"OK\"\n        primary={true}\n        onTouchTap={this.hundleOK}\n        ref=\"ok\"\n      />,\n    ];\n\n    return(\n      <Dialog\n        title=\"新しいグループを作成\"\n        actions={actions}\n        modal={true}\n        open={this.props.groupboards.creationBoard.isOpen}\n      >\n        <TextField\n        hintText=\"グループ名\"\n        value={this.state.newGroupName}\n        onChange={this.hundleNameChange}\n        ref=\"newGroupName\"\n        />\n      </Dialog>\n    );\n  }\n}\n",
    "static": true,
    "longname": "src/component/groupcreationboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "class",
    "name": "GroupCreationBoard",
    "memberof": "src/component/groupcreationboard.js",
    "static": true,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/groupcreationboard.js",
    "importStyle": "GroupCreationBoard",
    "description": "GroupCreationBoardコンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 118,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/groupcreationboard.js~GroupCreationBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "state",
    "memberof": "src/component/groupcreationboard.js~GroupCreationBoard",
    "static": false,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard#state",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"newGroupName\": *}"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "hundleNameChange",
    "memberof": "src/component/groupcreationboard.js~GroupCreationBoard",
    "static": false,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard#hundleNameChange",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "hundleClose",
    "memberof": "src/component/groupcreationboard.js~GroupCreationBoard",
    "static": false,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard#hundleClose",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "hundleOK",
    "memberof": "src/component/groupcreationboard.js~GroupCreationBoard",
    "static": false,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard#hundleOK",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "hundleNameChange",
    "memberof": "src/component/groupcreationboard.js~GroupCreationBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard#hundleNameChange",
    "access": null,
    "description": "グループ名の変更をハンドリングするhundler",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "変更後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "hundleClose",
    "memberof": "src/component/groupcreationboard.js~GroupCreationBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard#hundleClose",
    "access": null,
    "description": "キャンセルボタンのクリックをハンドリングするhundler",
    "lineNumber": 44,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "hundleOK",
    "memberof": "src/component/groupcreationboard.js~GroupCreationBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard#hundleOK",
    "access": null,
    "description": "OKボタンのクリックをハンドリングするhundler",
    "lineNumber": 52,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/groupcreationboard.js~GroupCreationBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupcreationboard.js~GroupCreationBoard#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 64,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "JSX"
    }
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "src/component/groupmanagementboard.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\nimport Dialog from 'material-ui/Dialog';\nimport {getGroupById} from '../module/group';\nimport {deleteGroupRequired,changeGroupNameRequired} from '../action/group';\nimport {closeGroupManagementBoard} from '../action/groupboards';\nimport MemberAddForm from './memberaddform';\nimport GroupMember from './groupmember';\n\n/**\n* グループ管理ボード コンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class GroupManagementBoard extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n\n    this.state = {\n      newGroupName:\"\"\n    }\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleDeleteGroupButton = this.handleDeleteGroupButton.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleChangeNameButton = this.handleChangeNameButton.bind(this);\n  }\n\n  /**\n  * キャンセルボタンのクリックをハンドリングするhandler\n  * @return {undefined}\n  */\n  handleClose(){\n    this.setState({newGroupName:\"\"});\n    this.props.dispatch(closeGroupManagementBoard());\n  }\n\n  /**\n  * グループの削除ボタンのクリックをハンドリングするhandler\n  */\n  handleDeleteGroupButton(){\n    if(confirm(\"削除します。よろしいですか？\")){\n      this.props.dispatch(deleteGroupRequired(this.props.managementBoard.groupId));\n      this.setState({newGroupName:\"\"});\n      this.props.dispatch(closeGroupManagementBoard());\n    }\n  }\n\n  /**\n  * グループ名の変更をハンドリングするhandler\n  * @param {Object} event イベント\n  * @param {string} newValue 変更後の値\n  * @return {undefined}\n  */\n  handleNameChange(event,newValue){\n    this.setState({newGroupName:newValue});\n  }\n\n  /**\n  * グループ名の変更ボタンのクリックをハンドリングするhandler\n  * @return {undefined}\n  */\n  handleChangeNameButton(){\n    if(this.state.newGroupName.trim().length > 0){\n      this.props.dispatch(changeGroupNameRequired(\n        this.props.managementBoard.groupId,\n        this.state.newGroupName\n      ));\n    }\n  }\n\n  /**\n  * 描画メソッド\n  * @return {Object} JSX\n  */\n  render(){\n    if(!this.props.managementBoard.isOpen){\n      return null;\n    }\n\n    const targetGroup = getGroupById(this.props.group.allGroups,this.props.managementBoard.groupId);\n    const actions = [\n      <FlatButton\n        label=\"Close\"\n        primary={true}\n        onTouchTap={this.handleClose}\n        ref=\"Close\"\n      />\n    ];\n\n    const groupNameText =\n      this.state.newGroupName === \"\" ?\n      targetGroup.name :\n      this.state.newGroupName;\n\n    const members = targetGroup.member ? targetGroup.member.map(status => status.userid)\n      .map((memberId,idx) => {\n        return (\n          <GroupMember\n            key={idx}\n            dispatch={this.props.dispatch}\n            memberId={memberId}\n            groupId={targetGroup.id}\n            isAdmin={targetGroup.admin.indexOf(memberId) >= 0}\n          />\n        );\n      }) : [];\n\n\n    return(\n      <Dialog\n        title={targetGroup.name + \"を編集\"}\n        actions={actions}\n        modal={true}\n        open={this.props.managementBoard.isOpen}\n      >\n        <div>\n          <FlatButton\n            label=\"削除\"\n            primary={true}\n            onTouchTap={this.handleDeleteGroupButton}\n            ref=\"deleteGroupButton\"\n          />\n        </div>\n        <div>\n          <TextField\n            hintText=\"グループ名\"\n            value={groupNameText}\n            onChange={this.handleNameChange}\n            ref=\"groupName\"\n          />\n          <FlatButton\n            label=\"変更\"\n            primary={true}\n            onTouchTap={this.handleChangeNameButton}\n            ref=\"changeNameButton\"\n          />\n        </div>\n        <MemberAddForm\n          dispatch={this.props.dispatch}\n          group={targetGroup}\n          memberStatus={this.props.board.memberStatus}\n        />\n        {members}\n      </Dialog>\n    )\n  }\n}\n",
    "static": true,
    "longname": "src/component/groupmanagementboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "class",
    "name": "GroupManagementBoard",
    "memberof": "src/component/groupmanagementboard.js",
    "static": true,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/groupmanagementboard.js",
    "importStyle": "GroupManagementBoard",
    "description": "グループ管理ボード コンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 129,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "state",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#state",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"newGroupName\": *}"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "handleClose",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#handleClose",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "handleDeleteGroupButton",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#handleDeleteGroupButton",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "handleNameChange",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#handleNameChange",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "handleChangeNameButton",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#handleChangeNameButton",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "handleClose",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#handleClose",
    "access": null,
    "description": "キャンセルボタンのクリックをハンドリングするhandler",
    "lineNumber": 39,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "handleDeleteGroupButton",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#handleDeleteGroupButton",
    "access": null,
    "description": "グループの削除ボタンのクリックをハンドリングするhandler",
    "lineNumber": 47,
    "params": []
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "handleNameChange",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#handleNameChange",
    "access": null,
    "description": "グループ名の変更をハンドリングするhandler",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "変更後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "handleChangeNameButton",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#handleChangeNameButton",
    "access": null,
    "description": "グループ名の変更ボタンのクリックをハンドリングするhandler",
    "lineNumber": 69,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/groupmanagementboard.js~GroupManagementBoard",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmanagementboard.js~GroupManagementBoard#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 82,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "JSX"
    }
  },
  {
    "__docId__": 140,
    "kind": "file",
    "name": "src/component/groupmember.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Checkbox from 'material-ui/Checkbox';\nimport FlatButton from 'material-ui/FlatButton';\nimport {\n  setMemberAsGroupAdminRequired,\n  unsetMemberAsGroupAdminRequired,\n  deleteMemberFromGroupRequired\n} from '../action/group';\n\n/**\n* グループメンバー管理 コンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class GroupMember extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n\n    this.handleAdminCheck = this.handleAdminCheck.bind(this);\n    this.handleDeleteMemberButton = this.handleDeleteMemberButton.bind(this);\n  }\n\n  /**\n  * 管理者チェックボックスのチェックをハンドリングするhandler\n  * @param {Object} event\n  * @param {boolean} checked チェックされた場合はtrue/外れた場合はfalse\n  * @return {undefined}\n  */\n  handleAdminCheck(event,checked){\n    if(checked){\n      this.props.dispatch(setMemberAsGroupAdminRequired(this.props.groupId,this.props.memberId));\n    }else{\n      this.props.dispatch(unsetMemberAsGroupAdminRequired(this.props.groupId,this.props.memberId));\n    }\n  }\n\n  /**\n  * メンバーの削除ボタンのクリックをハンドリングするhandler\n  */\n  handleDeleteMemberButton(){\n    if(confirm(\"メンバーから削除します。よろしいですか？\")){\n      this.props.dispatch(deleteMemberFromGroupRequired(this.props.groupId,this.props.memberId));\n    }\n  }\n\n  /**\n  * 描画メソッド\n  * @return {Object} JSX\n  */\n  render(){\n    return(\n      <div>\n        <span>{this.props.memberId}</span>\n        <Checkbox\n          label=\"管理者\"\n          defaultChecked={this.props.isAdmin}\n          onCheck={this.handleAdminCheck}\n          ref=\"adminCheckBox\"\n        />\n        <FlatButton\n          label=\"削除\"\n          primary={true}\n          onTouchTap={this.handleDeleteMemberButton}\n          ref=\"deleteMemberButton\"\n        />\n      </div>\n    )\n  }\n}\n",
    "static": true,
    "longname": "src/component/groupmember.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 141,
    "kind": "class",
    "name": "GroupMember",
    "memberof": "src/component/groupmember.js",
    "static": true,
    "longname": "src/component/groupmember.js~GroupMember",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/groupmember.js",
    "importStyle": "GroupMember",
    "description": "グループメンバー管理 コンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 142,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/groupmember.js~GroupMember",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmember.js~GroupMember#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "handleAdminCheck",
    "memberof": "src/component/groupmember.js~GroupMember",
    "static": false,
    "longname": "src/component/groupmember.js~GroupMember#handleAdminCheck",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "handleDeleteMemberButton",
    "memberof": "src/component/groupmember.js~GroupMember",
    "static": false,
    "longname": "src/component/groupmember.js~GroupMember#handleDeleteMemberButton",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "handleAdminCheck",
    "memberof": "src/component/groupmember.js~GroupMember",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmember.js~GroupMember#handleAdminCheck",
    "access": null,
    "description": "管理者チェックボックスのチェックをハンドリングするhandler",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "checked",
        "description": "チェックされた場合はtrue/外れた場合はfalse"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "handleDeleteMemberButton",
    "memberof": "src/component/groupmember.js~GroupMember",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmember.js~GroupMember#handleDeleteMemberButton",
    "access": null,
    "description": "メンバーの削除ボタンのクリックをハンドリングするhandler",
    "lineNumber": 45,
    "params": []
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/groupmember.js~GroupMember",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/groupmember.js~GroupMember#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 55,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "JSX"
    }
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "src/component/header.js",
    "content": "import React from 'react'\nimport {LOGIN_STATUS} from '../const/login'\nimport {logoutRequested} from '../action/login'\nimport Avatar from 'material-ui/Avatar';\nimport Chip from 'material-ui/Chip';\nimport IconMenu from 'material-ui/IconMenu';\nimport IconButton from 'material-ui/IconButton';\nimport NavigationExpandMoreIcon from 'material-ui/svg-icons/navigation/expand-more';\nimport MenuItem from 'material-ui/MenuItem';\nimport DropDownMenu from 'material-ui/DropDownMenu';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField'\nimport RaisedButton from 'material-ui/RaisedButton';\nimport {Toolbar, ToolbarGroup, ToolbarSeparator, ToolbarTitle} from 'material-ui/Toolbar';\nimport Dialog from 'material-ui/Dialog';\nimport AccountBoard from './accountboard';\nimport GroupCreationBoard from './groupcreationboard';\nimport GroupManagementBoard from './groupmanagementboard';\nimport {openAccountInfoModal} from '../action/accountboard';\nimport {openGroupCreationBoard} from '../action/groupboards';\n\n/**\n* Headerコンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class Header extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n    //ES2015版のReactだとこのおまじないをしないとメソッド内でthisが解決しない...\n    this.hundleLogout = this.hundleLogout.bind(this);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleCreateGroup = this.handleCreateGroup.bind(this);\n  }\n\n  /**\n  * ログアウトボタンのクリックをハンドリングするメソッド\n  * @return {undefined}\n  */\n  hundleLogout(){\n      this.props.dispatch(logoutRequested());\n  }\n\n  /**\n  * モーダルのオープンをハンドリングするメソッド\n  * @return {undefined}\n  */\n  handleOpen(){\n      this.props.dispatch(openAccountInfoModal());\n  }\n  /**\n  * グループ作成ボタンのクリックをハンドリングするメソッド\n  * @return {undefined}\n  *\n  */\n  handleCreateGroup(){\n      this.props.dispatch(openGroupCreationBoard());\n  }\n\n  /**\n  * 描画メソッド\n  * @return {undefined}\n  */\n  render(){\n    // ツールバーの表示\n    const toolbar = this.props.login.status == LOGIN_STATUS.SUCCESS ?\n      <Toolbar>\n        <ToolbarGroup>\n          <Chip><Avatar>{this.props.login.user.name.charAt(0).toUpperCase()}</Avatar>{this.props.login.user.name}</Chip>\n          <ToolbarSeparator />\n          <IconMenu\n            iconButtonElement={\n              <IconButton touch={true}>\n                <NavigationExpandMoreIcon />\n              </IconButton>\n            }\n\n            ref=\"menu_button\"\n          >\n            <MenuItem ref=\"change_account_button\" primaryText=\"アカウント情報変更\" onTouchTap={this.handleOpen} />\n            <MenuItem ref=\"create_group_button\" primaryText=\"グループ作成\" onTouchTap={this.handleCreateGroup} />\n            <MenuItem ref=\"logout_button\" primaryText=\"LOGOUT\" onTouchTap={this.hundleLogout} />\n          </IconMenu>\n        </ToolbarGroup>\n        <AccountBoard dispatch={this.props.dispatch} accountboard={this.props.accountboard} />\n        <GroupCreationBoard dispatch={this.props.dispatch} groupboards ={this.props.groupboards} />\n        <GroupManagementBoard\n          dispatch={this.props.dispatch}\n          managementBoard={this.props.groupboards.managementBoard}\n          group={this.props.group}\n          board={this.props.board}\n        />\n      </Toolbar>:\n      null\n\n    return (\n      <div><img src={\"./img/logo.png\"} />&nbsp;<br />{toolbar}</div>\n    )\n  }\n}\n",
    "static": true,
    "longname": "src/component/header.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "class",
    "name": "Header",
    "memberof": "src/component/header.js",
    "static": true,
    "longname": "src/component/header.js~Header",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/header.js",
    "importStyle": "Header",
    "description": "Headerコンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 26,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 150,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/header.js~Header",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/header.js~Header#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "hundleLogout",
    "memberof": "src/component/header.js~Header",
    "static": false,
    "longname": "src/component/header.js~Header#hundleLogout",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "handleOpen",
    "memberof": "src/component/header.js~Header",
    "static": false,
    "longname": "src/component/header.js~Header#handleOpen",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "handleCreateGroup",
    "memberof": "src/component/header.js~Header",
    "static": false,
    "longname": "src/component/header.js~Header#handleCreateGroup",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "hundleLogout",
    "memberof": "src/component/header.js~Header",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/header.js~Header#hundleLogout",
    "access": null,
    "description": "ログアウトボタンのクリックをハンドリングするメソッド",
    "lineNumber": 44,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "handleOpen",
    "memberof": "src/component/header.js~Header",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/header.js~Header#handleOpen",
    "access": null,
    "description": "モーダルのオープンをハンドリングするメソッド",
    "lineNumber": 52,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "handleCreateGroup",
    "memberof": "src/component/header.js~Header",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/header.js~Header#handleCreateGroup",
    "access": null,
    "description": "グループ作成ボタンのクリックをハンドリングするメソッド",
    "lineNumber": 60,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/header.js~Header",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/header.js~Header#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 68,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "src/component/kyodoco.js",
    "content": "import React from 'react'\nimport { connect } from 'react-redux'\nimport Header from './header'\nimport LoginForm from './loginform'\nimport SignUpForm from './signupform'\nimport Board from './board'\nimport MyDestination from './mydestination'\nimport {LOGIN_STATUS} from '../const/login'\nimport Paper from 'material-ui/Paper';\n\n\n/**\n*メインコンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nclass Kyodoco extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n  }\n\n  /**\n  * 描画メソッド\n  * @return {undefined}\n  */\n  render(){\n    const style = {\n      margin: 10,\n      padding: 10,\n      textAlign: 'center',\n      display: 'inline-block',\n    };\n\n    //ログインしていればメイン画面を、そうでなければログインフォームを描画する\n    const content =\n      this.props.login.status == LOGIN_STATUS.SUCCESS ?\n      (<div>\n        <MyDestination\n          dispatch={this.props.dispatch}\n          login={this.props.login}\n          mydestination={this.props.mydestination}\n        />\n        <Board\n          memberStatus={this.props.board.memberStatus}\n        />\n       </div>\n      ) :\n      (\n        <div>\n          <Paper style={style} zDepth={2}>\n            <LoginForm\n            dispatch={this.props.dispatch}\n            login={this.props.login}/>\n          </Paper>\n          <br />\n          <Paper style={style} zDepth={2}>\n            <SignUpForm\n            dispatch={this.props.dispatch}\n            signup={this.props.signup}/>\n          </Paper>\n        </div>\n      );\n\n    return(\n      <div>\n      <header>\n        <Header\n          dispatch={this.props.dispatch}\n          login={this.props.login}\n          accountboard={this.props.accountboard}\n          groupboards={this.props.groupboards}\n          group={this.props.group}\n          board={this.props.board}\n        />\n      </header>\n      <hr />\n      {content}\n      <hr />\n      copyright NST i-lab All Rights Reserved.\n      </div>\n    );\n  }\n}\n/**\n* reduxのstore上のstateをcomponentに接続する関数\n* @see http://qiita.com/kompiro/items/7fe90c4abc92fd32b343\n*/\nfunction mapStateToProp(state){\n  return state;\n}\n\n/**\n* メインコンポーネントをstoreと接続してexportする\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n* @see http://qiita.com/kompiro/items/7fe90c4abc92fd32b343\n*/\nexport default connect(mapStateToProp)(Kyodoco);\n",
    "static": true,
    "longname": "src/component/kyodoco.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "class",
    "name": "Kyodoco",
    "memberof": "src/component/kyodoco.js",
    "static": true,
    "longname": "src/component/kyodoco.js~Kyodoco",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/component/kyodoco.js",
    "importStyle": null,
    "description": "メインコンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 160,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/kyodoco.js~Kyodoco",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/kyodoco.js~Kyodoco#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/kyodoco.js~Kyodoco",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/kyodoco.js~Kyodoco#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 30,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "mapStateToProp",
    "memberof": "src/component/kyodoco.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/kyodoco.js~mapStateToProp",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/component/kyodoco.js",
    "importStyle": null,
    "description": "reduxのstore上のstateをcomponentに接続する関数",
    "see": [
      "http://qiita.com/kompiro/items/7fe90c4abc92fd32b343"
    ],
    "lineNumber": 92,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "src/component/loginform.js",
    "content": "import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {loginRequested} from '../action/login'\nimport {LOGIN_STATUS} from '../const/login'\nimport TextField from 'material-ui/TextField'\nimport RaisedButton from 'material-ui/RaisedButton'\n\n/**\n* LoginFormコンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class LoginForm extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n    this.state = {current_id_text:\"\",current_pass_text:\"\"};\n    //ES2015版のReactだとこのおまじないをしないとメソッド内でthisが解決しない...\n    this.hundleSubmit = this.hundleSubmit.bind(this);\n    this.hundleIDChange = this.hundleIDChange.bind(this);\n    this.hundlePassChange = this.hundlePassChange.bind(this);\n  }\n\n  /**\n  * ログインボタンのクリックをハンドリングするメソッド\n  * @return {undefined}\n  */\n  hundleSubmit(){\n    /*\n    *入力されたID/Passを取得して、\n    *それを元にLOGIN_REQUESTED(ログイン要求)アクションを作成してdispatchする\n    */\n    const userid = this.state.current_id_text.trim();\n    const password = this.state.current_pass_text.trim();\n    if(userid && password){\n      this.props.dispatch(loginRequested(userid,password));\n    }\n  }\n\n  hundleIDChange(event,newValue){\n    this.setState({current_id_text:newValue});\n  }\n\n  hundlePassChange(event,newValue){\n    this.setState({current_pass_text:newValue});\n  }\n\n  /**\n  * 描画メソッド\n  * @return {undefined}\n  */\n  render(){\n    //現在の状態がLOGIN_STATUS.FAILURE(ログイン失敗)であれば失敗メッセージを表示する\n    const message = this.props.login.status == LOGIN_STATUS.FAILURE ?\n      \"IDもしくはパスワードが正しくありません\" :\n      \"\";\n\n    return (\n      <div>\n        <h4>ログイン</h4>\n        <TextField\n        hintText=\"User ID\"\n        floatingLabelText=\"User ID\"\n        value={this.state.current_id_text}\n        ref=\"userid\"\n        onChange={this.hundleIDChange}\n        />\n        <br />\n        <TextField\n          hintText=\"Password\"\n          floatingLabelText=\"Password\"\n          type=\"password\"\n          value={this.state.current_pass_text}\n          ref=\"password\"\n          onChange={this.hundlePassChange}\n          />\n        <br />\n        <br />\n        <RaisedButton onClick={this.hundleSubmit} label=\"Login\" ref=\"loginbutton\"/>\n        <br />\n        <span style={{color:\"red\"}}>{message}</span>\n      </div>\n    );\n  }\n}\n",
    "static": true,
    "longname": "src/component/loginform.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "class",
    "name": "LoginForm",
    "memberof": "src/component/loginform.js",
    "static": true,
    "longname": "src/component/loginform.js~LoginForm",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/loginform.js",
    "importStyle": "LoginForm",
    "description": "LoginFormコンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 165,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/loginform.js~LoginForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/loginform.js~LoginForm#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "state",
    "memberof": "src/component/loginform.js~LoginForm",
    "static": false,
    "longname": "src/component/loginform.js~LoginForm#state",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"current_id_text\": *, \"current_pass_text\": *}"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "hundleSubmit",
    "memberof": "src/component/loginform.js~LoginForm",
    "static": false,
    "longname": "src/component/loginform.js~LoginForm#hundleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "hundleIDChange",
    "memberof": "src/component/loginform.js~LoginForm",
    "static": false,
    "longname": "src/component/loginform.js~LoginForm#hundleIDChange",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "hundlePassChange",
    "memberof": "src/component/loginform.js~LoginForm",
    "static": false,
    "longname": "src/component/loginform.js~LoginForm#hundlePassChange",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "hundleSubmit",
    "memberof": "src/component/loginform.js~LoginForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/loginform.js~LoginForm#hundleSubmit",
    "access": null,
    "description": "ログインボタンのクリックをハンドリングするメソッド",
    "lineNumber": 31,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "hundleIDChange",
    "memberof": "src/component/loginform.js~LoginForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/loginform.js~LoginForm#hundleIDChange",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "newValue",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "hundlePassChange",
    "memberof": "src/component/loginform.js~LoginForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/loginform.js~LoginForm#hundlePassChange",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "newValue",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/loginform.js~LoginForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/loginform.js~LoginForm#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 55,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "src/component/memberaddform.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport FlatButton from 'material-ui/FlatButton';\nimport {addMemberToGroupRequired} from '../action/group';\n\n/**\n* グループメンバー追加form コンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class MemberAddForm extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n\n    this.state = {\n      currentUserId:\"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAddMemberButton = this.handleAddMemberButton.bind(this);\n  }\n\n  /**\n  * 追加メンバーセレクトボックスの変更をハンドリングするhandler\n  * @param {Object} event イベント\n  * @param {number} key MenuItemのインデックス\n  * @param {String} payload 変更後の値\n  * @return {undefined}\n  */\n  handleChange(event,key,payload){\n    this.setState({currentUserId:payload});\n  }\n\n  /**\n  * メンバー追加ボタンのクリックをハンドリングするhandler\n  * @return {undefined}\n  */\n  handleAddMemberButton(){\n    if(this.state.currentUserId !== \"\"){\n      this.props.dispatch(addMemberToGroupRequired(this.props.group.id, this.state.currentUserId));\n      this.setState({currentUserId:\"\"});\n    }\n  }\n\n  /**\n  * 描画メソッド\n  * @return {Object} JSX\n  */\n  render(){\n    const allMemberId = this.props.memberStatus.map(status => status.userid);\n    const groupMemberId = this.props.group.member ?\n      this.props.group.member.map(status => status.userid) :\n      [];\n\n    const memberIdNotInGroup = allMemberId.filter(id => groupMemberId.indexOf(id) < 0);\n\n    const items = memberIdNotInGroup.map((id,idx) => <MenuItem key={idx+1} value={id} primaryText={id} />);\n\n    return(\n      <div>\n        <SelectField\n          floatingLabelText=\"追加ユーザー\"\n          value={this.state.currentUserId}\n          onChange={this.handleChange}\n        >\n          <MenuItem value={\"\"} primaryText=\"\" />\n          {items}\n        </SelectField>\n        <br />\n        <FlatButton\n          label=\"追加\"\n          primary={true}\n          onTouchTap={this.handleAddMemberButton}\n          ref=\"addMemberButton\"\n        />\n      </div>\n    );\n  }\n}\n",
    "static": true,
    "longname": "src/component/memberaddform.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "class",
    "name": "MemberAddForm",
    "memberof": "src/component/memberaddform.js",
    "static": true,
    "longname": "src/component/memberaddform.js~MemberAddForm",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/memberaddform.js",
    "importStyle": "MemberAddForm",
    "description": "グループメンバー追加form コンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 176,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/memberaddform.js~MemberAddForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/memberaddform.js~MemberAddForm#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "state",
    "memberof": "src/component/memberaddform.js~MemberAddForm",
    "static": false,
    "longname": "src/component/memberaddform.js~MemberAddForm#state",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"currentUserId\": *}"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "member",
    "name": "handleChange",
    "memberof": "src/component/memberaddform.js~MemberAddForm",
    "static": false,
    "longname": "src/component/memberaddform.js~MemberAddForm#handleChange",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "handleAddMemberButton",
    "memberof": "src/component/memberaddform.js~MemberAddForm",
    "static": false,
    "longname": "src/component/memberaddform.js~MemberAddForm#handleAddMemberButton",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "handleChange",
    "memberof": "src/component/memberaddform.js~MemberAddForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/memberaddform.js~MemberAddForm#handleChange",
    "access": null,
    "description": "追加メンバーセレクトボックスの変更をハンドリングするhandler",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "MenuItemのインデックス"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "変更後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "handleAddMemberButton",
    "memberof": "src/component/memberaddform.js~MemberAddForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/memberaddform.js~MemberAddForm#handleAddMemberButton",
    "access": null,
    "description": "メンバー追加ボタンのクリックをハンドリングするhandler",
    "lineNumber": 44,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/memberaddform.js~MemberAddForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/memberaddform.js~MemberAddForm#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 55,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "JSX"
    }
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "src/component/memberrow.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {List, ListItem} from 'material-ui/List';\nimport Avatar from 'material-ui/Avatar';\nimport {\n  red600,\n  grey400\n} from 'material-ui/styles/colors';\n\n/**\n* メンバーごとの行き先コンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class MemberRow extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props プロパティ\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n  }\n  /**\n  * 描画メソッド\n  * @return {undefined}\n  */\n  render(){\n    return (\n      <List>\n        <ListItem\n          primaryText={this.props.member.name + \"：\" + this.props.member.contact}\n            secondaryText={\"最終更新日:\" + this.props.member.lastUpdate.substr(0,16)+\" \"+(this.props.member.comment == null ? \"\" : this.props.member.comment)}\n          leftAvatar={<Avatar backgroundColor={this.props.member.inBusiness ? red600 : grey400} > {this.props.member.inBusiness ? \"出\" : \"退\"}</Avatar>} />\n      </List>\n    );\n  }\n}\n",
    "static": true,
    "longname": "src/component/memberrow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "class",
    "name": "MemberRow",
    "memberof": "src/component/memberrow.js",
    "static": true,
    "longname": "src/component/memberrow.js~MemberRow",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/memberrow.js",
    "importStyle": "MemberRow",
    "description": "メンバーごとの行き先コンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 185,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/memberrow.js~MemberRow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/memberrow.js~MemberRow#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "プロパティ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/memberrow.js~MemberRow",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/memberrow.js~MemberRow#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 27,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "src/component/mydestination.js",
    "content": "import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {myDestinationChange,myDestinationClear} from '../action/mydestination'\nimport Toggle from 'material-ui/Toggle'\nimport TextField from 'material-ui/TextField'\nimport AutoComplete from 'material-ui/AutoComplete';\nimport RaisedButton from 'material-ui/RaisedButton';\n\n/**\n* \"自分の行き先\"コンポーネント\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class MyDestination extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n\n    //ES2015版のReactだとこのおまじないをしないとメソッド内でthisが解決しない...\n    this.hundleClear = this.hundleClear.bind(this);\n    this.hundleToggle = this.hundleToggle.bind(this);\n    this.hundleCommentChange = this.hundleCommentChange.bind(this);\n    this.hundleContactChange = this.hundleContactChange.bind(this);\n  }\n  /**\n  * クリアボタンをクリックをハンドリングするメソッド\n  * @return {undefined}\n  */\n  hundleClear(){\n    const action = myDestinationClear();\n    this.props.dispatch(action);\n  }\n  /**\n  * 出勤/退勤の切り替えをハンドリングするメソッド\n  * @param {Object} event イベント\n  * @param {boolean} isInputChecked \"出勤\"となっているかどうか\n  * @return {undefined}\n  */\n  hundleToggle(event,isInputChecked){\n    this.props.dispatch(myDestinationChange({\n        inBusiness:isInputChecked, comment:this.props.mydestination.comment, contact:this.props.mydestination.contact\n    }));\n  }\n\n  /**\n  * コメントテキストボックスの変化をハンドリングするメソッド\n  * @param {string} newValue 新しいテキストボックスの値\n  * @return {undefined}\n  */\n  hundleCommentChange(newValue) {\n    this.props.dispatch(myDestinationChange({\n        inBusiness:this.props.mydestination.inBusiness, comment:newValue, contact:this.props.mydestination.contact\n    }));\n  }\n\n  /**\n  * 連絡先テキストボックスの変化をハンドリングするメソッド\n  * @param {Object} event イベント\n  * @param {string} newValue 新しい値\n  * @return {undefined}\n  */\n  hundleContactChange(event,newValue){\n    this.props.dispatch(myDestinationChange({\n        inBusiness:this.props.mydestination.inBusiness, comment:this.props.mydestination.comment, contact:newValue\n    }));\n  }\n\n  /**\n  * 描画メソッド\n  * @return {undefined}\n  */\n  render(){\n    return (\n      <div>\n      <h3>自分の行き先</h3>\n      <table>\n        <tbody>\n        <tr>\n          <td>{this.props.login.user.name}</td>\n          <td>\n            <Toggle label=\"出勤\" toggled={this.props.mydestination.inBusiness} onToggle={this.hundleToggle} ref=\"in_business\"/>\n          </td>\n          <td>\n            <AutoComplete\n              hintText=\"コメント\"\n              filter={AutoComplete.fuzzyFilter}\n              dataSource={this.props.mydestination.suggestion}\n              maxSearchResults={10}\n              openOnFocus={true}\n              onUpdateInput={this.hundleCommentChange}\n              searchText={this.props.mydestination.comment}\n              ref=\"comment\"\n            />\n          </td>\n          <td>\n            <RaisedButton label=\"Clear\" secondary={true} onClick={this.hundleClear} ref=\"clear_button\"/>\n          </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td></td>\n          <td>\n            <TextField hintText=\"連絡先\" value={this.props.mydestination.contact} onChange={this.hundleContactChange} ref=\"contact\"/>\n          </td>\n          <td></td>\n        </tr>\n        </tbody>\n      </table>\n      </div>);\n  }\n}\n",
    "static": true,
    "longname": "src/component/mydestination.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "class",
    "name": "MyDestination",
    "memberof": "src/component/mydestination.js",
    "static": true,
    "longname": "src/component/mydestination.js~MyDestination",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/mydestination.js",
    "importStyle": "MyDestination",
    "description": "\"自分の行き先\"コンポーネント",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 189,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/mydestination.js~MyDestination",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "hundleClear",
    "memberof": "src/component/mydestination.js~MyDestination",
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#hundleClear",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "hundleToggle",
    "memberof": "src/component/mydestination.js~MyDestination",
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#hundleToggle",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "hundleCommentChange",
    "memberof": "src/component/mydestination.js~MyDestination",
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#hundleCommentChange",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "hundleContactChange",
    "memberof": "src/component/mydestination.js~MyDestination",
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#hundleContactChange",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "hundleClear",
    "memberof": "src/component/mydestination.js~MyDestination",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#hundleClear",
    "access": null,
    "description": "クリアボタンをクリックをハンドリングするメソッド",
    "lineNumber": 32,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "hundleToggle",
    "memberof": "src/component/mydestination.js~MyDestination",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#hundleToggle",
    "access": null,
    "description": "出勤/退勤の切り替えをハンドリングするメソッド",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isInputChecked",
        "description": "\"出勤\"となっているかどうか"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "hundleCommentChange",
    "memberof": "src/component/mydestination.js~MyDestination",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#hundleCommentChange",
    "access": null,
    "description": "コメントテキストボックスの変化をハンドリングするメソッド",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "新しいテキストボックスの値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "hundleContactChange",
    "memberof": "src/component/mydestination.js~MyDestination",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#hundleContactChange",
    "access": null,
    "description": "連絡先テキストボックスの変化をハンドリングするメソッド",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "新しい値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/mydestination.js~MyDestination",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/mydestination.js~MyDestination#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 75,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 199,
    "kind": "file",
    "name": "src/component/signupform.js",
    "content": "import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {signupFailure,signupRequired} from '../action/signup'\nimport {SIGNUP_FAILURE_REASONS,SIGNUP_VALIDATION_ERROR_MESSAGES} from '../const/signup'\nimport TextField from 'material-ui/TextField'\nimport RaisedButton from 'material-ui/RaisedButton'\n/**\n* サインアップフォームのComponent\n* @see http://qiita.com/nownabe/items/2d8b92d95186c3941de0\n*/\nexport default class SignUpForm extends React.Component{\n  /**\n  * コンストラクタ\n  * @param {Object} props\n  * @return {undefined}\n  */\n  constructor(props){\n    super(props);\n    this.state = {id_text:\"\",pass_text:\"\",confirm_pass_text:\"\",name_text:\"\"};\n    //ES2015版のReactだとこのおまじないをしないとメソッド内でthisが解決しない...\n    this.hundleSubmit = this.hundleSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.hundleIDChange = this.hundleIDChange.bind(this);\n    this.hundlePassChange = this.hundlePassChange.bind(this);\n    this.hundleConfirmPasswordChange = this.hundleConfirmPasswordChange.bind(this);\n    this.hundleNameChange = this.hundleNameChange.bind(this);\n    this.renderValidationError = this.renderValidationError.bind(this);\n  }\n  /**\n  * Sign Upボタンのクリックをハンドリングするメソッド\n  * @return {undefined}\n  */\n  hundleSubmit(){\n    const id = this.state.id_text.trim();\n    const pass = this.state.pass_text.trim();\n    const pass_confirm = this.state.confirm_pass_text.trim();\n    const name = this.state.name_text.trim();\n\n    //入力値の画面サイドバリデーション\n    const forminfo = {id:id,pass:pass,pass_confirm:pass_confirm,name:name};\n    const validationErrors = this.validate(forminfo);\n\n\n    if(validationErrors.length > 0){\n      //画面サイドバリデーションが通らないので失敗\n      this.props.dispatch(signupFailure(validationErrors));\n    }else{\n      //画面サイドバリデーションが通ったので、サインアップ要求する\n      this.props.dispatch(signupRequired({id:id,password:pass,name:name}));\n    }\n\n  }\n\n  /**\n  * id textboxの更新イベントハンドラ\n  * @param {Object} event イベント\n  * @param {string} newValue 更新後の値\n  * @return {undefined}\n  */\n  hundleIDChange(event,newValue){\n    this.setState({id_text:newValue});\n  }\n\n  /**\n  * pass textboxの更新イベントハンドラ\n  * @param {Object} event イベント\n  * @param {string} newValue 更新後の値\n  * @return {undefined}\n  */\n  hundlePassChange(event,newValue){\n    this.setState({pass_text:newValue});\n  }\n\n  /**\n  * pass_confirm textboxの更新イベントハンドラ\n  * @param {Object} event イベント\n  * @param {string} newValue 更新後の値\n  * @return {undefined}\n  */\n  hundleConfirmPasswordChange(event,newValue){\n    this.setState({confirm_pass_text:newValue});\n  }\n\n  /**\n  * name textboxの更新イベントハンドラ\n  * @param {Object} event イベント\n  * @param {string} newValue 更新後の値\n  * @return {undefined}\n  */\n  hundleNameChange(event,newValue){\n    this.setState({name_text:newValue});\n  }\n\n  /**\n  * フォームデータのバリデーション\n  * @param {{id:string,pass:string,pass_confirm:string,name:string}} forminfo フォームデータ\n  * @return {array} SIGNUP_FAILURE_REASONSの配列\n  */\n  validate(forminfo){\n    const errors = [];\n    const match_pattern = /^(?=.*?[a-z])(?=.*?\\d)[a-z\\d]{8,}$/i;\n\n    if(!forminfo.id || forminfo.id.trim().length == 0){\n      errors.push(SIGNUP_FAILURE_REASONS.EMPTY_ID);\n    }\n    if(!forminfo.pass || forminfo.pass.trim().length == 0){\n      errors.push(SIGNUP_FAILURE_REASONS.EMPTY_PASSWORD);\n    }else if(!forminfo.pass.match(match_pattern)){\n      errors.push(SIGNUP_FAILURE_REASONS.POLICY_PASSWORD);\n    }\n    if(!forminfo.name || forminfo.name.trim().length == 0){\n      errors.push(SIGNUP_FAILURE_REASONS.EMPTY_NAME);\n    }\n    if(forminfo.pass !== forminfo.pass_confirm){\n      errors.push(SIGNUP_FAILURE_REASONS.INVALID_CONFIRM);\n    }\n\n    return errors;\n\n  }\n  /**\n  * props.failure_reasonの状況に応じて引数に与えられたエラー理由に対応するエラーメッセージを描画する\n  * @param {string} singleFailureReason SIGNUP_FAILURE_REASONSのうち１つ\n  * @return {Symbol} エラーメッセージを描画するreact-dom\n  */\n  renderValidationError(singleFailureReason){\n    if(this.props.signup.failure_reason.indexOf(singleFailureReason) >=0){\n      const errorMessage = SIGNUP_VALIDATION_ERROR_MESSAGES\n        .filter(m=>m.reason === singleFailureReason)\n        .map(m=>m.msg)[0];\n\n      return (\n        <span style={{color:\"red\"}}>\n          {errorMessage}\n        </span>\n      );\n    }else{\n      return null;\n    }\n  }\n  /**\n  * 描画メソッド\n  * @return {undefined}\n  */\n  render(){\n    return (\n      <div>\n        <h4>ユーザー登録</h4>\n        <h7>初めての方はこちらから登録下さい</h7>\n        <br />\n        <TextField\n        hintText=\"User ID\"\n        floatingLabelText=\"User ID\"\n        value={this.state.id_text}\n        ref=\"id\"\n        onChange={this.hundleIDChange}\n        />\n        <br />\n        {this.renderValidationError(SIGNUP_FAILURE_REASONS.EMPTY_ID)}\n        {this.renderValidationError(SIGNUP_FAILURE_REASONS.ID_DUPLICATED)}\n        <br />\n        <TextField\n        hintText=\"Password\"\n        floatingLabelText=\"Password\"\n        value={this.state.pass_text}\n        ref=\"pass\"\n        type=\"password\"\n        onChange={this.hundlePassChange}\n        />\n        <br />\n        {this.renderValidationError(SIGNUP_FAILURE_REASONS.EMPTY_PASSWORD)}\n        {this.renderValidationError(SIGNUP_FAILURE_REASONS.POLICY_PASSWORD)}\n        <br />\n        <TextField\n        hintText=\"Password(Confirm)\"\n        floatingLabelText=\"Password(Confirm)\"\n        value={this.state.confirm_pass_text}\n        ref=\"pass_confirm\"\n        type=\"password\"\n        onChange={this.hundleConfirmPasswordChange}\n        />\n        <br />\n        {this.renderValidationError(SIGNUP_FAILURE_REASONS.INVALID_CONFIRM)}\n        <br />\n        <TextField\n        hintText=\"表示名\"\n        floatingLabelText=\"表示名\"\n        value={this.state.name_text}\n        ref=\"name\"\n        onChange={this.hundleNameChange}\n        />\n        <br />\n        {this.renderValidationError(SIGNUP_FAILURE_REASONS.EMPTY_NAME)}\n        <br />\n        <br />\n        <RaisedButton ref=\"signup\" onClick={this.hundleSubmit} label=\"Sign Up\"/>\n        <br />\n        {this.renderValidationError(SIGNUP_FAILURE_REASONS.SERVER_ERROR)}\n      </div>\n    )\n  }\n}\n",
    "static": true,
    "longname": "src/component/signupform.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 200,
    "kind": "class",
    "name": "SignUpForm",
    "memberof": "src/component/signupform.js",
    "static": true,
    "longname": "src/component/signupform.js~SignUpForm",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/component/signupform.js",
    "importStyle": "SignUpForm",
    "description": "サインアップフォームのComponent",
    "see": [
      "http://qiita.com/nownabe/items/2d8b92d95186c3941de0"
    ],
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 201,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/signupform.js~SignUpForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#constructor",
    "access": null,
    "description": "コンストラクタ",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "state",
    "memberof": "src/component/signupform.js~SignUpForm",
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#state",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"id_text\": *, \"pass_text\": *, \"confirm_pass_text\": *, \"name_text\": *}"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "hundleSubmit",
    "memberof": "src/component/signupform.js~SignUpForm",
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundleSubmit",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "validate",
    "memberof": "src/component/signupform.js~SignUpForm",
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#validate",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "hundleIDChange",
    "memberof": "src/component/signupform.js~SignUpForm",
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundleIDChange",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "hundlePassChange",
    "memberof": "src/component/signupform.js~SignUpForm",
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundlePassChange",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "hundleConfirmPasswordChange",
    "memberof": "src/component/signupform.js~SignUpForm",
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundleConfirmPasswordChange",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "hundleNameChange",
    "memberof": "src/component/signupform.js~SignUpForm",
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundleNameChange",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "member",
    "name": "renderValidationError",
    "memberof": "src/component/signupform.js~SignUpForm",
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#renderValidationError",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "hundleSubmit",
    "memberof": "src/component/signupform.js~SignUpForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundleSubmit",
    "access": null,
    "description": "Sign Upボタンのクリックをハンドリングするメソッド",
    "lineNumber": 33,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "hundleIDChange",
    "memberof": "src/component/signupform.js~SignUpForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundleIDChange",
    "access": null,
    "description": "id textboxの更新イベントハンドラ",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "更新後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "hundlePassChange",
    "memberof": "src/component/signupform.js~SignUpForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundlePassChange",
    "access": null,
    "description": "pass textboxの更新イベントハンドラ",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "更新後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "hundleConfirmPasswordChange",
    "memberof": "src/component/signupform.js~SignUpForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundleConfirmPasswordChange",
    "access": null,
    "description": "pass_confirm textboxの更新イベントハンドラ",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "更新後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "hundleNameChange",
    "memberof": "src/component/signupform.js~SignUpForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#hundleNameChange",
    "access": null,
    "description": "name textboxの更新イベントハンドラ",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "イベント"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "更新後の値"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "validate",
    "memberof": "src/component/signupform.js~SignUpForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#validate",
    "access": null,
    "description": "フォームデータのバリデーション",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "{id:string,pass:string,pass_confirm:string,name:string}"
        ],
        "spread": false,
        "optional": false,
        "name": "forminfo",
        "description": "フォームデータ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "SIGNUP_FAILURE_REASONSの配列"
    }
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "renderValidationError",
    "memberof": "src/component/signupform.js~SignUpForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#renderValidationError",
    "access": null,
    "description": "props.failure_reasonの状況に応じて引数に与えられたエラー理由に対応するエラーメッセージを描画する",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "singleFailureReason",
        "description": "SIGNUP_FAILURE_REASONSのうち１つ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Symbol"
      ],
      "spread": false,
      "description": "エラーメッセージを描画するreact-dom"
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "render",
    "memberof": "src/component/signupform.js~SignUpForm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/signupform.js~SignUpForm#render",
    "access": null,
    "description": "描画メソッド",
    "lineNumber": 145,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 218,
    "kind": "file",
    "name": "src/const/group.js",
    "content": "//group stateのデフォルト値\nexport const DEFAULT_GROUP = {allGroups:[],usersGroups:[]};\n",
    "static": true,
    "longname": "src/const/group.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 219,
    "kind": "variable",
    "name": "DEFAULT_GROUP",
    "memberof": "src/const/group.js",
    "static": true,
    "longname": "src/const/group.js~DEFAULT_GROUP",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/const/group.js",
    "importStyle": "{DEFAULT_GROUP}",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"allGroups\": *, \"usersGroups\": *}"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "file",
    "name": "src/const/groupboards.js",
    "content": "/**\n* groupboards stateのデフォルト値\n*/\nexport const DEFAULT_GROUPBORADS = {\n  creationBoard:{\n    isOpen:false\n  },\n  managementBoard:{\n    isOpen:false,\n    groupId:\"\"\n  }\n};\n",
    "static": true,
    "longname": "src/const/groupboards.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 221,
    "kind": "variable",
    "name": "DEFAULT_GROUPBORADS",
    "memberof": "src/const/groupboards.js",
    "static": true,
    "longname": "src/const/groupboards.js~DEFAULT_GROUPBORADS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/const/groupboards.js",
    "importStyle": "{DEFAULT_GROUPBORADS}",
    "description": "groupboards stateのデフォルト値",
    "lineNumber": 4,
    "type": {
      "types": [
        "{\"creationBoard\": *, \"managementBoard\": *}"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "src/const/login.js",
    "content": "/**\n* login state内のstatus定義。SUCCESS(成功)、FAILURE(失敗)、NOTYET(未実施)。\n*/\nexport const LOGIN_STATUS={\n  SUCCESS:\"SUCCESS\",\n  FAILURE:\"FAILURE\",\n  NOTYET:\"NOTYET\"\n}\n",
    "static": true,
    "longname": "src/const/login.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "variable",
    "name": "LOGIN_STATUS",
    "memberof": "src/const/login.js",
    "static": true,
    "longname": "src/const/login.js~LOGIN_STATUS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/const/login.js",
    "importStyle": "{LOGIN_STATUS}",
    "description": "login state内のstatus定義。SUCCESS(成功)、FAILURE(失敗)、NOTYET(未実施)。",
    "lineNumber": 4,
    "type": {
      "types": [
        "{\"SUCCESS\": string, \"FAILURE\": string, \"NOTYET\": string}"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "file",
    "name": "src/const/mydestination.js",
    "content": "import {DEFAULT_SUGGENSTIONS} from './suggestion';\n\n/**自分の行き先のデフォルト値 */\nexport const DEFAULT_MY_DESTINATION = {\n  inBusiness:false,\n  comment:\"\",\n  contact:\"\",\n  suggestion:DEFAULT_SUGGENSTIONS\n};\n",
    "static": true,
    "longname": "src/const/mydestination.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "variable",
    "name": "DEFAULT_MY_DESTINATION",
    "memberof": "src/const/mydestination.js",
    "static": true,
    "longname": "src/const/mydestination.js~DEFAULT_MY_DESTINATION",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/const/mydestination.js",
    "importStyle": "{DEFAULT_MY_DESTINATION}",
    "description": "自分の行き先のデフォルト値",
    "lineNumber": 4,
    "type": {
      "types": [
        "{\"inBusiness\": *, \"comment\": *, \"contact\": *, \"suggestion\": *}"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "file",
    "name": "src/const/signup.js",
    "content": "/**\n* サインアップ失敗理由\n*/\nexport const SIGNUP_FAILURE_REASONS = {\n  ID_DUPLICATED : \"ID_DUPLICATED\", //ID重複\n  SERVER_ERROR : \"SERVER_ERROR\", //サーバーエラー\n  INVALID_CONFIRM : \"INVALID_CONFIRM\", //パスワード確認用不一致\n  EMPTY_ID : \"EMPTY_ID\", //IDが空,\n  EMPTY_PASSWORD:\"EMPTY_PASSWORD\", //パスワードが空\n  EMPTY_NAME : \"EMPTY_NAME\", //表示名が空\n  POLICY_PASSWORD : \"POLICY_PASSWORD\" //パスワードポリシーの要件を満たしていない\n};\n\n/**\n* サインアップ失敗時のエラーメッセージ\n*/\nexport const SIGNUP_VALIDATION_ERROR_MESSAGES = [\n  {reason : SIGNUP_FAILURE_REASONS.ID_DUPLICATED, msg : \"ご指定のIDはすでに使われています\"},\n  {reason : SIGNUP_FAILURE_REASONS.SERVER_ERROR, msg:\"サーバーエラーが発生しました\"},\n  {reason : SIGNUP_FAILURE_REASONS.INVALID_CONFIRM, msg : \"パスワードとパスワード（確認）が一致しません\"},\n  {reason : SIGNUP_FAILURE_REASONS.EMPTY_ID, msg : \"IDを入力してください\"},\n  {reason : SIGNUP_FAILURE_REASONS.EMPTY_PASSWORD, msg : \"パスワードを入力してください\"},\n  {reason : SIGNUP_FAILURE_REASONS.EMPTY_NAME, msg : \"名前を入力してください\"},\n  {reason : SIGNUP_FAILURE_REASONS.POLICY_PASSWORD, msg : \"パスワードポリシーの要件を満たしていません(8文字以上，半角英数字を1文字以上含む)\"}\n];\n",
    "static": true,
    "longname": "src/const/signup.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 227,
    "kind": "variable",
    "name": "SIGNUP_FAILURE_REASONS",
    "memberof": "src/const/signup.js",
    "static": true,
    "longname": "src/const/signup.js~SIGNUP_FAILURE_REASONS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/const/signup.js",
    "importStyle": "{SIGNUP_FAILURE_REASONS}",
    "description": "サインアップ失敗理由",
    "lineNumber": 4,
    "type": {
      "types": [
        "{\"ID_DUPLICATED\": string, \"SERVER_ERROR\": string, \"INVALID_CONFIRM\": string, \"EMPTY_ID\": string, \"EMPTY_PASSWORD\": string, \"EMPTY_NAME\": string, \"POLICY_PASSWORD\": string}"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "variable",
    "name": "SIGNUP_VALIDATION_ERROR_MESSAGES",
    "memberof": "src/const/signup.js",
    "static": true,
    "longname": "src/const/signup.js~SIGNUP_VALIDATION_ERROR_MESSAGES",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/const/signup.js",
    "importStyle": "{SIGNUP_VALIDATION_ERROR_MESSAGES}",
    "description": "サインアップ失敗時のエラーメッセージ",
    "lineNumber": 17,
    "type": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "src/const/suggestion.js",
    "content": "/**\n* オートコンプリートでサジェストする行き先のデフォルト値\n*/\nexport const DEFAULT_SUGGENSTIONS = [\"EAST 8F\", \"EAST 3F\", \"宝町\", \"NRI 13F\", \"NRI 12F\"];\n",
    "static": true,
    "longname": "src/const/suggestion.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "variable",
    "name": "DEFAULT_SUGGENSTIONS",
    "memberof": "src/const/suggestion.js",
    "static": true,
    "longname": "src/const/suggestion.js~DEFAULT_SUGGENSTIONS",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/const/suggestion.js",
    "importStyle": "{DEFAULT_SUGGENSTIONS}",
    "description": "オートコンプリートでサジェストする行き先のデフォルト値",
    "lineNumber": 4,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "src/index.js",
    "content": "import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Kyodoco from './component/kyodoco'\nimport { Provider } from 'react-redux'\nimport {configureStore} from './store/store'\n\nimport injectTapEventPlugin from 'react-tap-event-plugin'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\n// Needed for onTouchTap\n// http://stackoverflow.com/a/34015469/988941\ninjectTapEventPlugin();\n\nimport \"babel-polyfill\"\n\nconst container = document.getElementById(\"app\");\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiThemeProvider>\n      <Kyodoco />\n    </MuiThemeProvider>\n  </Provider>,\n  container\n);\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "variable",
    "name": "container",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~container",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "variable",
    "name": "store",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~store",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "src/module/base64.js",
    "content": "/**\n* base64エンコード\n* @see http://qiita.com/weal/items/1a2af81138cd8f49937d\n* @param {string} str エンコード対象文字列\n* @return {string} エンコード後文字列\n*/\nexport function base64Encode(str){\n  return btoa(unescape(encodeURIComponent(str)));\n}\n\n/**\n* base64デコード\n* @see http://qiita.com/weal/items/1a2af81138cd8f49937d\n* @param {string} str デコード対象文字列\n* @return {string} デコード後文字列\n*/\nexport function base64Decode(str){\n  return decodeURIComponent(escape(atob(str)));\n}\n",
    "static": true,
    "longname": "src/module/base64.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "base64Encode",
    "memberof": "src/module/base64.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/module/base64.js~base64Encode",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/module/base64.js",
    "importStyle": "{base64Encode}",
    "description": "base64エンコード",
    "see": [
      "http://qiita.com/weal/items/1a2af81138cd8f49937d"
    ],
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "エンコード対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "エンコード後文字列"
    }
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "base64Decode",
    "memberof": "src/module/base64.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/module/base64.js~base64Decode",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/module/base64.js",
    "importStyle": "{base64Decode}",
    "description": "base64デコード",
    "see": [
      "http://qiita.com/weal/items/1a2af81138cd8f49937d"
    ],
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "デコード対象文字列"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "デコード後文字列"
    }
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "src/module/environment.js",
    "content": "/**\n* 環境に応じてAPIのベースURLを取得する\n* @return {string} APIのベースURL\n*/\nexport function getApiBaseURL(){\n    switch(process.env.NODE_ENV){\n      case(\"debug\"):\n        return \"http://localhost:3000/\";\n      default:\n        return \"https://api.kyo-do.co/\";\n    }\n}\n",
    "static": true,
    "longname": "src/module/environment.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "function",
    "name": "getApiBaseURL",
    "memberof": "src/module/environment.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/module/environment.js~getApiBaseURL",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/module/environment.js",
    "importStyle": "{getApiBaseURL}",
    "description": "環境に応じてAPIのベースURLを取得する",
    "lineNumber": 5,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "APIのベースURL"
    }
  },
  {
    "__docId__": 239,
    "kind": "file",
    "name": "src/module/group.js",
    "content": "/**\n* グループ配列の中からIDに紐づくグループを取得する\n* @param {array} groups グループの配列\n* @param {String} groupId 取得したいグループのID\n* @return {Object} グループIDに紐づくグループ\n*/\nexport function getGroupById(groups, groupId){\n  const filteredGroups = groups.filter(group => group.id === groupId);\n  return filteredGroups.length === 1 ? filteredGroups[0] : undefined;\n}\n",
    "static": true,
    "longname": "src/module/group.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "getGroupById",
    "memberof": "src/module/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/module/group.js~getGroupById",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/module/group.js",
    "importStyle": "{getGroupById}",
    "description": "グループ配列の中からIDに紐づくグループを取得する",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "groups",
        "description": "グループの配列"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "groupId",
        "description": "取得したいグループのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "グループIDに紐づくグループ"
    }
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "src/module/localstorage.js",
    "content": "import {base64Encode,base64Decode} from './base64'\n\n/*\n* ローカルストレージのKeyのプレフィックス\n*/\nconst LOCAL_STORAGE_PREFIX = \"kyo-do.co.\";\n\n/**\n* localStorageへ値をセットする\n* @param {string} key キー\n* @param {Object} value セットするオブジェクト\n* @return {boolean} 成功すればtrue\n*/\nexport function setToStorage(key,value){\n  try{\n    localStorage.setItem(LOCAL_STORAGE_PREFIX + key,base64Encode(JSON.stringify(value)));\n    return true;\n  }catch(e){\n    return false;\n  }\n}\n/**\n* localStorageから値を取得する\n* @param {string} key キー\n* @return {Object} localStorageに保存されたオブジェクト\n*/\nexport function getFromStorage(key){\n  try{\n    return JSON.parse(base64Decode(localStorage.getItem(LOCAL_STORAGE_PREFIX + key)));\n  }catch(e){\n    return undefined;\n  }\n}\n/**\n* localStorageから値を削除する\n* @param {string} key キー\n* @return {boolean} 成功すればtrue\n*/\nexport function removeFromStorage(key){\n  try{\n    localStorage.removeItem(LOCAL_STORAGE_PREFIX + key);\n    return true;\n  }catch(e){\n    return false;\n  }\n}\n\n/**\n* localStorage上にキーが存在するかを確認する\n* @param {string} key キー\n* @return {boolean} 存在すればTrue\n*/\nexport function existsKeyOnStorage(key){\n  try{\n    const result = localStorage.getItem(LOCAL_STORAGE_PREFIX + key) !== null;\n    return result;\n  }catch(e){\n    return false;\n  }\n}\n",
    "static": true,
    "longname": "src/module/localstorage.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "LOCAL_STORAGE_PREFIX",
    "memberof": "src/module/localstorage.js",
    "static": true,
    "longname": "src/module/localstorage.js~LOCAL_STORAGE_PREFIX",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/module/localstorage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "function",
    "name": "setToStorage",
    "memberof": "src/module/localstorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/module/localstorage.js~setToStorage",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/module/localstorage.js",
    "importStyle": "{setToStorage}",
    "description": "localStorageへ値をセットする",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "キー"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "セットするオブジェクト"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功すればtrue"
    }
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "getFromStorage",
    "memberof": "src/module/localstorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/module/localstorage.js~getFromStorage",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/module/localstorage.js",
    "importStyle": "{getFromStorage}",
    "description": "localStorageから値を取得する",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "キー"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "localStorageに保存されたオブジェクト"
    }
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "removeFromStorage",
    "memberof": "src/module/localstorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/module/localstorage.js~removeFromStorage",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/module/localstorage.js",
    "importStyle": "{removeFromStorage}",
    "description": "localStorageから値を削除する",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "キー"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "成功すればtrue"
    }
  },
  {
    "__docId__": 246,
    "kind": "function",
    "name": "existsKeyOnStorage",
    "memberof": "src/module/localstorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/module/localstorage.js~existsKeyOnStorage",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/module/localstorage.js",
    "importStyle": "{existsKeyOnStorage}",
    "description": "localStorage上にキーが存在するかを確認する",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "キー"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "存在すればTrue"
    }
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "src/module/member.js",
    "content": "/**\n* メンバーIDに紐づくメンバーの状況を取得する\n* @param {array} memberStatus メンバーの状況の配列\n* @param {String} memberId 取得したいメンバーのID\n* @return {Object} メンバーIDに紐づくメンバーの状況\n*/\nexport function getMemberStatusById(memberStatus,memberId){\n  const filteredMemberStatus = memberStatus.filter(member => member.userid === memberId);\n  return filteredMemberStatus.length === 1 ? filteredMemberStatus[0] : undefined;\n}\n",
    "static": true,
    "longname": "src/module/member.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "function",
    "name": "getMemberStatusById",
    "memberof": "src/module/member.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/module/member.js~getMemberStatusById",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/module/member.js",
    "importStyle": "{getMemberStatusById}",
    "description": "メンバーIDに紐づくメンバーの状況を取得する",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "memberStatus",
        "description": "メンバーの状況の配列"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "memberId",
        "description": "取得したいメンバーのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "メンバーIDに紐づくメンバーの状況"
    }
  },
  {
    "__docId__": 249,
    "kind": "file",
    "name": "src/reducer/accountboard.js",
    "content": "import {ACCOUNT_INFO_MODAL_OPEN,ACCOUNT_INFO_MODAL_CLOSE,CHANGE_ACCOUNT_INFO,CHANGE_ACCOUNT_INFO_FIELD} from '../action/accountboard'\n\n/**\n* アカウント情報変更ボード reducer\n* @see http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864\n* @param {Object} state 変更前のstate\n* @param {Object} action dispatchされたaction\n* @return {Object} 変更後のstate\n*/\nexport default function accountboard(state={open:false, nextuser:{}}, action){\n  switch(action.type){\n    case ACCOUNT_INFO_MODAL_OPEN:\n      return {open:true, nextuser:{}};\n    case ACCOUNT_INFO_MODAL_CLOSE:\n      return {open:false, nextuser:{}};\n    case CHANGE_ACCOUNT_INFO:\n      return {open:false, nextuser:{}};\n    case CHANGE_ACCOUNT_INFO_FIELD:\n      return {open:true, nextuser:action.payload};\n    default:\n      return state;\n  }\n}\n",
    "static": true,
    "longname": "src/reducer/accountboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "accountboard",
    "memberof": "src/reducer/accountboard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/accountboard.js~accountboard",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/reducer/accountboard.js",
    "importStyle": "accountboard",
    "description": "アカウント情報変更ボード reducer",
    "see": [
      "http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864"
    ],
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "変更前のstate"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "dispatchされたaction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "変更後のstate"
    }
  },
  {
    "__docId__": 251,
    "kind": "file",
    "name": "src/reducer/board.js",
    "content": "import {UPDATE_MEMBER_STATUS} from '../action/board'\n\n/**\n* 行き先掲示板 reducer\n* @see http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864\n* @param {Object} state 変更前のstate\n* @param {Object} action dispatchされたaction\n* @return {Object} 変更後のstate\n*/\nexport default function board(state={memberStatus:[]},action){\n  switch(action.type){\n    case(UPDATE_MEMBER_STATUS):\n      return Object.assign({},state,{memberStatus:action.payload});\n    default:\n      return state;\n  }\n}\n",
    "static": true,
    "longname": "src/reducer/board.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "board",
    "memberof": "src/reducer/board.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/board.js~board",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/reducer/board.js",
    "importStyle": "board",
    "description": "行き先掲示板 reducer",
    "see": [
      "http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864"
    ],
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "変更前のstate"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "dispatchされたaction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "変更後のstate"
    }
  },
  {
    "__docId__": 253,
    "kind": "file",
    "name": "src/reducer/group.js",
    "content": "import {GROUPS_LOADED,GROUP_MEMBER_LOADED} from '../action/group';\nimport {DEFAULT_GROUP} from '../const/group';\nimport {getGroupById} from '../module/group';\n\n/**\n* グループ reducer\n* @see http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864\n* @param {Object} state 変更前のstate\n* @param {Object} action dispatchされたaction\n* @return {Object} 変更後のstate\n*/\nexport default function group(state=DEFAULT_GROUP,action){\n  switch(action.type){\n    case(GROUPS_LOADED):\n      {\n        let newAllGroups = margeGroupInfo(state.allGroups, action.payload.groupinfo);\n        let newUserGroups = filterUserGroup(newAllGroups,action.payload.logonUserId);\n        return {allGroups:newAllGroups,usersGroups:newUserGroups};\n      }\n    case(GROUP_MEMBER_LOADED):\n      {\n        let newAllGroups = fetchGroupMember(state.allGroups, action.payload.groupWithMember);\n        let newUserGroups = filterUserGroup(newAllGroups,action.payload.logonUserId);\n        return {allGroups:newAllGroups,usersGroups:newUserGroups};\n      }\n    default:\n      return state;\n  }\n}\n\n/**\n* グループ情報をマージする\n* ただし、この時点ではメンバー情報はロードされていないため、\n* メンバー情報は前のものを用いる\n* @param {array} currentGroups 現在のグループ情報\n* @param {array} ロードされたグループ情報\n* @return {array} マージされたグループ情報\n*/\nfunction margeGroupInfo(currentGroups, newGroups){\n  return newGroups.map((newGroup) => {\n    const currentGroup = getGroupById(currentGroups, newGroup.id);\n    if(currentGroup){\n      if(currentGroup.members){\n        return Object.assign({},newGroup,{members : currentGroup.members});\n      }else{\n        return newGroup;\n      }\n    }else{\n      return newGroup;\n    }\n  });\n}\n\n/**\n* ログインしているユーザーが管理者になっているもしくはメンバーになっているグループに絞り込む\n* @param {array} allGroups 絞り込む対象のグループ\n* @param {String} logonUserId ログインしているユーザーのID\n* @return {array} 絞り込まれたグループの配列\n*/\nfunction filterUserGroup(allGroups,logonUserId){\n  return allGroups.filter(group => {\n    if(group.admin.indexOf(logonUserId) >= 0){\n      return true;\n    }else{\n      if(group.members){\n        return group.members.indexOf(logonUserId) >= 0;\n      }else{\n        return false;\n      }\n    }\n  });\n}\n\n/**\n* グループ情報にメンバー情報を紐づける\n* @param {array} currentGroups メンバーを紐づけるグループの配列\n* @param newGroupWithMembers {Object} 更新するメンバー情報付きのグループ\n* @return {array}　メンバーが紐付けられたグループの配列\n*/\nfunction fetchGroupMember(currentGroups, newGroupWithMembers){\n  return currentGroups.map(group => {\n    if(group.id === newGroupWithMembers.id){\n      return newGroupWithMembers;\n    }else{\n      return group;\n    }\n  })\n}\n",
    "static": true,
    "longname": "src/reducer/group.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "group",
    "memberof": "src/reducer/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/group.js~group",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/reducer/group.js",
    "importStyle": "group",
    "description": "グループ reducer",
    "see": [
      "http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864"
    ],
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "変更前のstate"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "dispatchされたaction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "変更後のstate"
    }
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "margeGroupInfo",
    "memberof": "src/reducer/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/group.js~margeGroupInfo",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/reducer/group.js",
    "importStyle": null,
    "description": "グループ情報をマージする\nただし、この時点ではメンバー情報はロードされていないため、\nメンバー情報は前のものを用いる",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "currentGroups",
        "description": "現在のグループ情報"
      },
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "ロードされたグループ情報",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "マージされたグループ情報"
    }
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "filterUserGroup",
    "memberof": "src/reducer/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/group.js~filterUserGroup",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/reducer/group.js",
    "importStyle": null,
    "description": "ログインしているユーザーが管理者になっているもしくはメンバーになっているグループに絞り込む",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "allGroups",
        "description": "絞り込む対象のグループ"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "logonUserId",
        "description": "ログインしているユーザーのID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "絞り込まれたグループの配列"
    }
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "fetchGroupMember",
    "memberof": "src/reducer/group.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/group.js~fetchGroupMember",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/reducer/group.js",
    "importStyle": null,
    "description": "グループ情報にメンバー情報を紐づける",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "currentGroups",
        "description": "メンバーを紐づけるグループの配列"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newGroupWithMembers",
        "description": "{Object} 更新するメンバー情報付きのグループ"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "メンバーが紐付けられたグループの配列"
    }
  },
  {
    "__docId__": 258,
    "kind": "file",
    "name": "src/reducer/groupboards.js",
    "content": "import {\n  OPEN_GROUP_CREATION_BOARD,\n  CLOSE_GROUP_CREATION_BOARD,\n  OPEN_GROUP_MANAGEMENT_BOARD,\n  CLOSE_GROUP_MANAGEMENT_BOARD\n} from '../action/groupboards';\nimport {CREATE_GROUP_SUCCESS} from '../action/group';\nimport {DEFAULT_GROUPBORADS} from '../const/groupboards';\n\n/**\n* グループ reducer\n* @see http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864\n* @param {Object} state 変更前のstate\n* @param {Object} action dispatchされたaction\n* @return {Object} 変更後のstate\n*/\nexport default function groupboards(state=DEFAULT_GROUPBORADS,action){\n  switch(action.type){\n    case(OPEN_GROUP_CREATION_BOARD):\n      return Object.assign({},state,{creationBoard:{isOpen:true}});\n    case(CLOSE_GROUP_CREATION_BOARD):\n      return Object.assign({},state,{creationBoard:{isOpen:false}});\n    case(OPEN_GROUP_MANAGEMENT_BOARD):\n      return Object.assign({},state,{managementBoard:{isOpen:true, groupId:action.payload.groupId}});\n    case(CLOSE_GROUP_MANAGEMENT_BOARD):\n      return Object.assign({},state,{managementBoard:{isOpen:false, groupId:\"\"}});\n    case(CREATE_GROUP_SUCCESS):\n      return Object.assign({},state,{\n        creationBoard:{isOpen:false},\n        managementBoard:{isOpen:true, groupId:action.payload.groupId}\n      });\n    default:\n      return state;\n  }\n}\n",
    "static": true,
    "longname": "src/reducer/groupboards.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "groupboards",
    "memberof": "src/reducer/groupboards.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/groupboards.js~groupboards",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/reducer/groupboards.js",
    "importStyle": "groupboards",
    "description": "グループ reducer",
    "see": [
      "http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864"
    ],
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "変更前のstate"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "dispatchされたaction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "変更後のstate"
    }
  },
  {
    "__docId__": 260,
    "kind": "file",
    "name": "src/reducer/login.js",
    "content": "import {LOGIN_STATUS} from '../const/login'\nimport {LOGIN_SUCCESS,LOGIN_FAILURE,LOGIN_REQUESTED,LOGOUT_REQUESTED} from '../action/login'\n\nconst initialState = {status:LOGIN_STATUS.NOTYET,user:{}};\n\n/**\n* ログイン reducer\n* @see http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864\n* @param {Object} state 変更前のstate\n* @param {Object} action dispatchされたaction\n* @return {Object} 変更後のstate\n*/\nexport default function login(state=initialState, action){\n  switch(action.type){\n    case LOGIN_SUCCESS:\n      return {status:LOGIN_STATUS.SUCCESS,user:action.payload};\n    case LOGIN_FAILURE:\n      return {status:LOGIN_STATUS.FAILURE,user:{}};\n    case LOGOUT_REQUESTED:\n      return initialState;\n    case LOGIN_REQUESTED:\n      return initialState;\n    default:\n      return state;\n  }\n}\n",
    "static": true,
    "longname": "src/reducer/login.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/reducer/login.js",
    "static": true,
    "longname": "src/reducer/login.js~initialState",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/reducer/login.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"status\": *, \"user\": *}"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "function",
    "name": "login",
    "memberof": "src/reducer/login.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/login.js~login",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/reducer/login.js",
    "importStyle": "login",
    "description": "ログイン reducer",
    "see": [
      "http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864"
    ],
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "変更前のstate"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "dispatchされたaction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "変更後のstate"
    }
  },
  {
    "__docId__": 263,
    "kind": "file",
    "name": "src/reducer/mydestination.js",
    "content": "import {MY_DESTINATION_CHANGE} from '../action/mydestination'\nimport {DEFAULT_MY_DESTINATION} from '../const/mydestination'\nimport {SUGGESTION_CHANGE,SUGGESTION_CLEAR} from '../action/suggestion'\n\n/**\n* 自分の行き先 reducer\n* @see http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864\n* @param {Object} state 変更前のstate\n* @param {Object} action dispatchされたaction\n* @return {Object} 変更後のstate\n*/\nexport default function mydestination(state=DEFAULT_MY_DESTINATION,action){\n  switch(action.type){\n    case(MY_DESTINATION_CHANGE):\n      return Object.assign({},state,action.payload);\n    case(SUGGESTION_CHANGE):\n      return Object.assign({},state,{suggestion:action.payload});\n    case(SUGGESTION_CLEAR):\n      return Object.assign({},state,{suggestion:DEFAULT_MY_DESTINATION.suggestion});\n    default:\n      return state;\n  }\n}\n",
    "static": true,
    "longname": "src/reducer/mydestination.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 264,
    "kind": "function",
    "name": "mydestination",
    "memberof": "src/reducer/mydestination.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/mydestination.js~mydestination",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/reducer/mydestination.js",
    "importStyle": "mydestination",
    "description": "自分の行き先 reducer",
    "see": [
      "http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864"
    ],
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "変更前のstate"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "dispatchされたaction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "変更後のstate"
    }
  },
  {
    "__docId__": 265,
    "kind": "file",
    "name": "src/reducer/root.js",
    "content": "import { combineReducers } from 'redux'\nimport login from './login';\nimport mydestination from './mydestination'\nimport board from './board'\nimport signup from './signup'\nimport accountboard from './accountboard'\nimport group from './group'\nimport groupboards from './groupboards'\n\n/**\n* 各reducerを結合してひとまとめにしてexportする\n* @see http://qiita.com/kuy/items/59c6d7029a10972cba78\n*/\nexport default combineReducers({\n  login,\n  mydestination,\n  board,\n  signup,\n  accountboard,\n  group,\n  groupboards\n})\n",
    "static": true,
    "longname": "src/reducer/root.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "src/reducer/signup.js",
    "content": "import {SIGNUP_SUCCESS,SIGNUP_FAILURE} from '../action/signup'\n\nconst initialState = {failure_reason:[]};\n\n/**\n* サインアップ reducer\n* @see http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864\n* @param {Object} state 変更前のstate\n* @param {Object} action dispatchされたaction\n* @return {Object} 変更後のstate\n*/\nexport default function signup(state=initialState,action){\n  switch(action.type){\n    case(SIGNUP_SUCCESS):\n      return initialState;\n    case(SIGNUP_FAILURE):\n      return {failure_reason:action.payload};\n    default:\n      return state;\n  }\n}\n",
    "static": true,
    "longname": "src/reducer/signup.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/reducer/signup.js",
    "static": true,
    "longname": "src/reducer/signup.js~initialState",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/reducer/signup.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"failure_reason\": *}"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "function",
    "name": "signup",
    "memberof": "src/reducer/signup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducer/signup.js~signup",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/reducer/signup.js",
    "importStyle": "signup",
    "description": "サインアップ reducer",
    "see": [
      "http://qiita.com/yasuhiro-okada-aktsk/items/9d9025cb58ffba35f864"
    ],
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "変更前のstate"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "dispatchされたaction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "変更後のstate"
    }
  },
  {
    "__docId__": 269,
    "kind": "file",
    "name": "src/saga/accountboard.js",
    "content": "import {take,put,select,takeEvery,takeLatest,call} from 'redux-saga/effects'\nimport {CHANGE_ACCOUNT_INFO} from '../action/accountboard'\nimport {loginSuccess} from '../action/login'\nimport {getApiBaseURL} from '../module/environment'\nimport axios from \"axios\";\n\n/**\n* APIのベースURL\n*/\nconst BASE_API_URL = getApiBaseURL();\n\n/**\n* アカウント情報変更要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* changeAccountInfoSaga(){\n  /*\n  * CHANGE_ACCOUNT_INFO(アカウント情報変更要求)アクションを常に待ち続け、\n  * dispatchされたらchangeAccountInfoTaskにactionを渡して実行する\n  */\n  yield takeEvery(CHANGE_ACCOUNT_INFO,changeAccountInfoTask);\n}\n/**\n* APIに対してID/Passを問い合わせて、\n* 成功すればユーザー情報を元にLOGIN_SUCCESS(ログイン成功)アクションをput(dispatch)する\n* @param {object} action LOGIN_REQUESTED(ログイン要求)アクション\n*/\nexport function* changeAccountInfoTask(action){\n\n  const changeData = {};\n  if(action.payload.nextpass){\n    changeData.newPassword = action.payload.nextpass;\n  }\n  if(action.payload.nextname){\n    changeData.name = action.payload.nextname;\n  }\n\n\n  //XXX 現在の実装ではサーバエラーなのかID/Passが間違っているのか判断がつかない\n  try{\n    const token = yield select(state => state.login.user.token);\n    const result = yield call(axios, {\n      method:\"PUT\",\n      url:BASE_API_URL + \"user\",\n      headers:{\"Authorization\":\"Bearer \" + token},\n      data: changeData\n    });\n    const name = (result.data.name)?\n      result.data.name:\n      yield select(state => state.login.user.name);\n    const id = yield select(state => state.login.user.userid);\n\n    yield put(loginSuccess({userid:id,name:name,token:token}));\n  }catch(e){\n    console.log('error');\n    //yield put(loginFailure());\n  }\n}\n",
    "static": true,
    "longname": "src/saga/accountboard.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "variable",
    "name": "BASE_API_URL",
    "memberof": "src/saga/accountboard.js",
    "static": true,
    "longname": "src/saga/accountboard.js~BASE_API_URL",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/accountboard.js",
    "importStyle": null,
    "description": "APIのベースURL",
    "lineNumber": 10,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "changeAccountInfoSaga",
    "memberof": "src/saga/accountboard.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/accountboard.js~changeAccountInfoSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/accountboard.js",
    "importStyle": "{changeAccountInfoSaga}",
    "description": "アカウント情報変更要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 16,
    "params": []
  },
  {
    "__docId__": 272,
    "kind": "function",
    "name": "changeAccountInfoTask",
    "memberof": "src/saga/accountboard.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/accountboard.js~changeAccountInfoTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/accountboard.js",
    "importStyle": "{changeAccountInfoTask}",
    "description": "APIに対してID/Passを問い合わせて、\n成功すればユーザー情報を元にLOGIN_SUCCESS(ログイン成功)アクションをput(dispatch)する",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "LOGIN_REQUESTED(ログイン要求)アクション"
      }
    ]
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "src/saga/board.js",
    "content": "import {take,put,select,takeEvery,call} from 'redux-saga/effects'\nimport {delay} from 'redux-saga'\nimport {updateMemberStatus,memberStatusPolling,MEMBER_STATUS_POLLING} from '../action/board'\nimport {LOGIN_SUCCESS} from '../action/login'\nimport {LOGIN_STATUS} from '../const/login'\nimport {MY_DESTINATION_SAVE_COMPLETE} from '../action/mydestination'\nimport {getApiBaseURL} from '../module/environment'\nimport axios from \"axios\";\n\n/**\n* APIのベースURL\n*/\nconst BASE_API_URL = getApiBaseURL();\n\n/**\n* メンバー状況をpollingする間隔(ms)\n*/\nconst STATUS_POLLING_DURATION_MS= 15000;\n\n/**\n* メンバー状況をロードするSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* loadMemberStatusSaga(){\n  yield takeEvery(LOGIN_SUCCESS,loadMemberStatusTask);\n  yield takeEvery(MY_DESTINATION_SAVE_COMPLETE,loadMemberStatusTask);\n  yield takeEvery(MEMBER_STATUS_POLLING,loadMemberStatusTask);\n}\n\n/**\n* メンバー状況をロードするTask\n*/\nexport function* loadMemberStatusTask(){\n  const token = yield select(state => state.login.user.token);\n  const logonUserId = yield select(state=> state.login.user.userid);\n  try{\n    const result = yield call(axios,{\n      method:\"GET\",\n      url:BASE_API_URL + \"status/all\",\n      headers: { \"Authorization\": \"Bearer \" + token}\n    });\n\n    // 自分の情報を先頭に表示する\n    const memberStatus = result.data.filter(status => status.userid !== logonUserId);\n    const logonUserStatus = result.data.filter(status => status.userid === logonUserId);\n    yield put(updateMemberStatus(logonUserStatus.concat(memberStatus)));\n  }catch(e){\n    //XXX　エラーが起きればID重複と判断しているが、サーバエラーと区別したい\n  }\n}\n\n/**\n* メンバー状況を定期的に確認するSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* watchMemberStatusSaga(){\n  while(true){\n    const loginStatus = yield select(state => state.login.status);\n    if(loginStatus == LOGIN_STATUS.SUCCESS){\n      yield put(memberStatusPolling());\n    }\n    yield call(delay,STATUS_POLLING_DURATION_MS);\n  }\n}\n",
    "static": true,
    "longname": "src/saga/board.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "variable",
    "name": "BASE_API_URL",
    "memberof": "src/saga/board.js",
    "static": true,
    "longname": "src/saga/board.js~BASE_API_URL",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/board.js",
    "importStyle": null,
    "description": "APIのベースURL",
    "lineNumber": 13,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "STATUS_POLLING_DURATION_MS",
    "memberof": "src/saga/board.js",
    "static": true,
    "longname": "src/saga/board.js~STATUS_POLLING_DURATION_MS",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/board.js",
    "importStyle": null,
    "description": "メンバー状況をpollingする間隔(ms)",
    "lineNumber": 18,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "function",
    "name": "loadMemberStatusSaga",
    "memberof": "src/saga/board.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/board.js~loadMemberStatusSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/board.js",
    "importStyle": "{loadMemberStatusSaga}",
    "description": "メンバー状況をロードするSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 24,
    "params": []
  },
  {
    "__docId__": 277,
    "kind": "function",
    "name": "loadMemberStatusTask",
    "memberof": "src/saga/board.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/board.js~loadMemberStatusTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/board.js",
    "importStyle": "{loadMemberStatusTask}",
    "description": "メンバー状況をロードするTask",
    "lineNumber": 33,
    "params": []
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "watchMemberStatusSaga",
    "memberof": "src/saga/board.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/board.js~watchMemberStatusSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/board.js",
    "importStyle": "{watchMemberStatusSaga}",
    "description": "メンバー状況を定期的に確認するSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 56,
    "params": []
  },
  {
    "__docId__": 279,
    "kind": "file",
    "name": "src/saga/group.js",
    "content": "import {take,put,select,takeEvery,call,fork} from 'redux-saga/effects'\nimport {\n  groupsLoaded,\n  groupMemberLoaded,\n  createGroupSuccess,\n  createGroupFailure,\n  addMemberToGroupSuccess,\n  addMemberToGroupFailure,\n  deleteMemberFromGroupSuccess,\n  deleteMemberFromGroupFailure,\n  setMemberAsGroupAdminSuccess,\n  setMemberAsGroupAdminFailure,\n  unsetMemberAsGroupAdminSuccess,\n  unsetMemberAsGroupAdminFailure,\n  changeGroupNameSuccess,\n  changeGroupNameFailure,\n  deleteGroupSuccess,\n  deleteGroupFailure\n} from '../action/group'\nimport {\n  CREATE_GROUP_REQUIRED,\n  CREATE_GROUP_SUCCESS,\n  ADD_MEMBER_TO_GROUP_REQUIRED,\n  ADD_MEMBER_TO_GROUP_SUCCESS,\n  DELETE_MEMBER_FROM_GROUP_REQUIRED,\n  DELETE_MEMBER_FROM_GROUP_SUCCESS,\n  SET_MEMBER_AS_GROUP_ADMIN_REQUIRED,\n  SET_MEMBER_AS_GROUP_ADMIN_SUCCESS,\n  UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED,\n  UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS,\n  CHANGE_GROUP_NAME_REQUIRED,\n  CHANGE_GROUP_NAME_SUCCESS,\n  DELETE_GROUP_REQUIRED,\n  DELETE_GROUP_SUCCESS\n} from '../action/group'\nimport {UPDATE_MEMBER_STATUS} from '../action/board'\nimport {getApiBaseURL} from '../module/environment'\nimport axios from \"axios\";\nimport {getGroupById} from '../module/group';\nimport {getMemberStatusById} from '../module/member';\n\n/**\n* APIのベースURL\n*/\nconst BASE_API_URL = getApiBaseURL();\n\n/**\n* group関連の他のSagaをforkするSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* groupSaga(){\n  yield fork(loadUserGroupsSaga);\n  yield fork(createGroupSaga);\n  yield fork(addMemberToGroupSaga);\n  yield fork(deleteMemberFromGroupSaga);\n  yield fork(setMemberAsGroupAdminSaga);\n  yield fork(unsetMemberAsGroupAdminSaga);\n  yield fork(changeGroupNameSaga);\n  yield fork(deleteGroupSaga);\n}\n\n/**\n* group関連データのロードを起動するActionを受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* loadUserGroupsSaga(){\n  yield takeEvery(UPDATE_MEMBER_STATUS,loadUserGroupsTask);\n  yield takeEvery(CREATE_GROUP_SUCCESS,loadUserGroupsTask);\n  yield takeEvery(ADD_MEMBER_TO_GROUP_SUCCESS,loadUserGroupsTask);\n  yield takeEvery(DELETE_MEMBER_FROM_GROUP_SUCCESS,loadUserGroupsTask);\n  yield takeEvery(SET_MEMBER_AS_GROUP_ADMIN_SUCCESS,loadUserGroupsTask);\n  yield takeEvery(UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS,loadUserGroupsTask);\n  yield takeEvery(CHANGE_GROUP_NAME_SUCCESS,loadUserGroupsTask);\n  yield takeEvery(DELETE_GROUP_SUCCESS,loadUserGroupsTask);\n}\n\n/**\n* APIからグループ情報を取得し、その後group memberのロードを実行するTask\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* loadUserGroupsTask(){\n  const token = yield select(state => state.login.user.token);\n  const logonUserId = yield select(state=> state.login.user.userid);\n\n  try{\n    const result = yield call(axios,{\n      method:\"GET\",\n      url:BASE_API_URL + \"group\",\n      headers: { \"Authorization\": \"Bearer \" + token}\n    });\n\n    yield put(groupsLoaded(result.data));\n    yield result.data.map(group => call(fetchMemberTask,group,token,logonUserId));\n  }catch(e){\n    //noop\n  }\n}\n\n/**\n* グループのメンバーをロードするTask\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n* @param {Object} group メンバーをロードしたいgroup\n* @param {String} token API token\n* @param {String} logonUserId ログイン中のユーザーのID\n*/\nexport function* fetchMemberTask(group,token,logonUserId){\n  const groupId = group.id;\n\n  try{\n    const result = yield call(axios,{\n      method:\"GET\",\n      url:BASE_API_URL + \"group/\" + groupId + \"/member\",\n      headers: { \"Authorization\": \"Bearer \" + token}\n    });\n\n    const memberStatus = yield select(state => state.board.memberStatus);\n\n    const groupMemberStatus = result.data.members.map(\n      memberId =>getMemberStatusById(memberStatus,memberId))\n    .filter(val => val != undefined);\n\n    yield put(groupMemberLoaded(Object.assign({},group,{member:groupMemberStatus}),logonUserId));\n  }catch(e){\n    //noop\n  }\n}\n\n/**\n* グループの作成要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* createGroupSaga(){\n  yield takeEvery(CREATE_GROUP_REQUIRED,createGroupTask);\n}\n\n/**\n* グループの作成をAPIへ要求するSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n* @param {Object} action CREATE_GROUP_REQUIREDアクション\n*/\nexport function* createGroupTask(action){\n  const token = yield select(state => state.login.user.token);\n  const groupName = action.payload.groupName;\n\n  try{\n    const result = yield call(\n      axios.post,\n      BASE_API_URL + \"group\",\n      {\"groupname\": groupName},\n      {headers:{\"Authorization\":\"Bearer \" + token}}\n    );\n    yield put(createGroupSuccess(result.data.groupId));\n  }catch(e){\n    yield put(createGroupFailure());\n  }\n}\n\n/**\n* グループへのメンバー\b追加要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* addMemberToGroupSaga(){\n  yield takeEvery(ADD_MEMBER_TO_GROUP_REQUIRED,addMemberToGroupTask);\n}\n\n/**\n* グループへのメンバー追加をAPIへ要求するTask\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n* @param {Object} action  ADD_MEMBER_TO_GROUP_REQUIREDアクション\n*/\nexport function* addMemberToGroupTask(action){\n  const token = yield select(state => state.login.user.token);\n  const groupId = action.payload.groupId;\n  const memberId = action.payload.memberId;\n\n  const currentGroups = yield select(state => state.group.allGroups);\n  const targetGroup = getGroupById(currentGroups,groupId);\n\n  const currentMemberIds = targetGroup.member.map(member => member.userid);\n  const nextMemberIds = currentMemberIds.concat([memberId]);\n\n  try{\n    const result = yield call(\n      axios.put,\n      BASE_API_URL + \"group/\" + groupId + \"/member\",\n      {\"member\": nextMemberIds},\n      {headers:{\"Authorization\":\"Bearer \" + token}}\n    );\n\n    yield put(addMemberToGroupSuccess());\n  }catch(e){\n    yield put(addMemberToGroupFailure());\n  }\n}\n\n/**\n* グループからのメンバー削除要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* deleteMemberFromGroupSaga(){\n  yield takeEvery(DELETE_MEMBER_FROM_GROUP_REQUIRED,deleteMemberFromGroupTask);\n}\n\n/**\n* グループからのメンバー削除をAPIに要求するSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n* @param {Object} action DELETE_MEMBER_FROM_GROUP_REQUIREDアクション\n*/\nexport function* deleteMemberFromGroupTask(action){\n  const token = yield select(state => state.login.user.token);\n  const groupId = action.payload.groupId;\n  const memberId = action.payload.memberId;\n\n  const currentGroups = yield select(state => state.group.allGroups);\n  const targetGroup = getGroupById(currentGroups,groupId);\n\n  const currentMemberIds = targetGroup.member.map(member => member.userid);\n  const nextMemberIds = currentMemberIds.filter(mid => mid !== memberId);\n\n  try{\n    const result = yield call(\n      axios.put,\n      BASE_API_URL + \"group/\" + groupId + \"/member\",\n      {\"member\": nextMemberIds},\n      {headers:{\"Authorization\":\"Bearer \" + token}}\n    );\n\n    yield put(deleteMemberFromGroupSuccess());\n  }catch(e){\n    yield put(deleteMemberFromGroupFailure());\n  }\n}\n\n/**\n* グループの管理者設定要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* setMemberAsGroupAdminSaga(){\n  yield takeEvery(SET_MEMBER_AS_GROUP_ADMIN_REQUIRED,setMemberAsGroupAdminTask);\n}\n\n/**\n* グループの管理者設定をAPIへ要求するTask\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n* @param {Object} action SET_MEMBER_AS_GROUP_ADMIN_REQUIREDアクション\n*/\nexport function* setMemberAsGroupAdminTask(action){\n  const token = yield select(state => state.login.user.token);\n  const groupId = action.payload.groupId;\n  const memberId = action.payload.memberId;\n\n  const currentGroups = yield select(state => state.group.allGroups);\n  const targetGroup = getGroupById(currentGroups,groupId);\n\n  const currentGroupName = targetGroup.name;\n\n  const currentAdmins = targetGroup.admin;\n  const nextAdmins = currentAdmins.concat([memberId]);\n\n  try{\n    const result = yield call(\n      axios.put,\n      BASE_API_URL + \"group/\" + groupId,\n      {\n        \"groupname\": currentGroupName,\n        \"admin\" : nextAdmins\n      },\n      {headers:{\"Authorization\":\"Bearer \" + token}}\n    );\n\n    yield put(setMemberAsGroupAdminSuccess());\n  }catch(e){\n    yield put(setMemberAsGroupAdminFailure());\n  }\n}\n/**\n* グループの管理者削除要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* unsetMemberAsGroupAdminSaga(){\n  yield takeEvery(UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED,unsetMemberAsGroupAdminTask);\n}\n\n/**\n* グループの管理者削除をAPIに要求するTask\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n* @param {Object} action UNSET_MEMBER_AS_GROUP_ADMIN_REQUIREDアクション\n*/\nexport function* unsetMemberAsGroupAdminTask(action){\n  const token = yield select(state => state.login.user.token);\n  const groupId = action.payload.groupId;\n  const memberId = action.payload.memberId;\n\n  const currentGroups = yield select(state => state.group.allGroups);\n  const targetGroup = getGroupById(currentGroups,groupId);\n\n  const currentGroupName = targetGroup.name;\n\n  const currentAdmins = targetGroup.admin;\n  const nextAdmins = currentAdmins.filter(mid => mid !== memberId);\n\n  try{\n    const result = yield call(\n      axios.put,\n      BASE_API_URL + \"group/\" + groupId,\n      {\n        \"groupname\": currentGroupName,\n        \"admin\" : nextAdmins\n      },\n      {headers:{\"Authorization\":\"Bearer \" + token}}\n    );\n\n    yield put(unsetMemberAsGroupAdminSuccess());\n  }catch(e){\n    yield put(unsetMemberAsGroupAdminFailure());\n  }\n}\n\n/**\n* グループ名変更要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* changeGroupNameSaga(){\n  yield takeEvery(CHANGE_GROUP_NAME_REQUIRED,changeGroupNameTask);\n}\n\n/**\n* グループ名の変更をAPIへ要求するSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n* @param {Object} action CHANGE_GROUP_NAME_REQUIREDアクション\n*/\nexport function* changeGroupNameTask(action){\n  const token = yield select(state => state.login.user.token);\n  const groupId = action.payload.groupId;\n  const newGroupName = action.payload.newName;\n\n  const currentGroups = yield select(state => state.group.allGroups);\n  const targetGroup = getGroupById(currentGroups,groupId);\n\n  const currentAdmins = targetGroup.admin;\n\n  try{\n    const result = yield call(\n      axios.put,\n      BASE_API_URL + \"group/\" + groupId,\n      {\n        \"groupname\": newGroupName,\n        \"admin\" : currentAdmins\n      },\n      {headers:{\"Authorization\":\"Bearer \" + token}}\n    );\n\n    yield put(changeGroupNameSuccess());\n  }catch(e){\n    yield put(changeGroupNameFailure());\n  }\n}\n\n/**\n* グループ削除要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* deleteGroupSaga(){\n  yield takeEvery(DELETE_GROUP_REQUIRED,deleteGroupTask);\n}\n\n/**\n* グループの削除をAPIへ要求するTask\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n* @param {Objecy} action DELETE_GROUP_REQUIREDアクション\n*/\nexport function* deleteGroupTask(action){\n  const token = yield select(state => state.login.user.token);\n  const groupId = action.payload.groupId;\n\n  try{\n    const result = yield call(axios,{\n      method:\"DELETE\",\n      url:BASE_API_URL + \"group/\" + groupId,\n      headers: { \"Authorization\": \"Bearer \" + token}\n    });\n\n    yield put(deleteGroupSuccess());\n  }catch(e){\n    yield put(deleteGroupFailure());\n  }\n}\n",
    "static": true,
    "longname": "src/saga/group.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 280,
    "kind": "variable",
    "name": "BASE_API_URL",
    "memberof": "src/saga/group.js",
    "static": true,
    "longname": "src/saga/group.js~BASE_API_URL",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": null,
    "description": "APIのベースURL",
    "lineNumber": 45,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "groupSaga",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~groupSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{groupSaga}",
    "description": "group関連の他のSagaをforkするSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 51,
    "params": []
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "loadUserGroupsSaga",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~loadUserGroupsSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{loadUserGroupsSaga}",
    "description": "group関連データのロードを起動するActionを受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 66,
    "params": []
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "loadUserGroupsTask",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~loadUserGroupsTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{loadUserGroupsTask}",
    "description": "APIからグループ情報を取得し、その後group memberのロードを実行するTask",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 81,
    "params": []
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "fetchMemberTask",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~fetchMemberTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{fetchMemberTask}",
    "description": "グループのメンバーをロードするTask",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "group",
        "description": "メンバーをロードしたいgroup"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "API token"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "logonUserId",
        "description": "ログイン中のユーザーのID"
      }
    ]
  },
  {
    "__docId__": 285,
    "kind": "function",
    "name": "createGroupSaga",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~createGroupSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{createGroupSaga}",
    "description": "グループの作成要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 132,
    "params": []
  },
  {
    "__docId__": 286,
    "kind": "function",
    "name": "createGroupTask",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~createGroupTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{createGroupTask}",
    "description": "グループの作成をAPIへ要求するSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "CREATE_GROUP_REQUIREDアクション"
      }
    ]
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "addMemberToGroupSaga",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~addMemberToGroupSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{addMemberToGroupSaga}",
    "description": "グループへのメンバー\b追加要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 162,
    "params": []
  },
  {
    "__docId__": 288,
    "kind": "function",
    "name": "addMemberToGroupTask",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~addMemberToGroupTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{addMemberToGroupTask}",
    "description": "グループへのメンバー追加をAPIへ要求するTask",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "ADD_MEMBER_TO_GROUP_REQUIREDアクション"
      }
    ]
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "deleteMemberFromGroupSaga",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~deleteMemberFromGroupSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{deleteMemberFromGroupSaga}",
    "description": "グループからのメンバー削除要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 200,
    "params": []
  },
  {
    "__docId__": 290,
    "kind": "function",
    "name": "deleteMemberFromGroupTask",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~deleteMemberFromGroupTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{deleteMemberFromGroupTask}",
    "description": "グループからのメンバー削除をAPIに要求するSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "DELETE_MEMBER_FROM_GROUP_REQUIREDアクション"
      }
    ]
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "setMemberAsGroupAdminSaga",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~setMemberAsGroupAdminSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{setMemberAsGroupAdminSaga}",
    "description": "グループの管理者設定要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 238,
    "params": []
  },
  {
    "__docId__": 292,
    "kind": "function",
    "name": "setMemberAsGroupAdminTask",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~setMemberAsGroupAdminTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{setMemberAsGroupAdminTask}",
    "description": "グループの管理者設定をAPIへ要求するTask",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 247,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "SET_MEMBER_AS_GROUP_ADMIN_REQUIREDアクション"
      }
    ]
  },
  {
    "__docId__": 293,
    "kind": "function",
    "name": "unsetMemberAsGroupAdminSaga",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~unsetMemberAsGroupAdminSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{unsetMemberAsGroupAdminSaga}",
    "description": "グループの管理者削除要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 280,
    "params": []
  },
  {
    "__docId__": 294,
    "kind": "function",
    "name": "unsetMemberAsGroupAdminTask",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~unsetMemberAsGroupAdminTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{unsetMemberAsGroupAdminTask}",
    "description": "グループの管理者削除をAPIに要求するTask",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 289,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "UNSET_MEMBER_AS_GROUP_ADMIN_REQUIREDアクション"
      }
    ]
  },
  {
    "__docId__": 295,
    "kind": "function",
    "name": "changeGroupNameSaga",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~changeGroupNameSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{changeGroupNameSaga}",
    "description": "グループ名変更要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 323,
    "params": []
  },
  {
    "__docId__": 296,
    "kind": "function",
    "name": "changeGroupNameTask",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~changeGroupNameTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{changeGroupNameTask}",
    "description": "グループ名の変更をAPIへ要求するSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 332,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "CHANGE_GROUP_NAME_REQUIREDアクション"
      }
    ]
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "deleteGroupSaga",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~deleteGroupSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{deleteGroupSaga}",
    "description": "グループ削除要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 363,
    "params": []
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "deleteGroupTask",
    "memberof": "src/saga/group.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/group.js~deleteGroupTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/group.js",
    "importStyle": "{deleteGroupTask}",
    "description": "グループの削除をAPIへ要求するTask",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 372,
    "params": [
      {
        "nullable": null,
        "types": [
          "Objecy"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "DELETE_GROUP_REQUIREDアクション"
      }
    ]
  },
  {
    "__docId__": 299,
    "kind": "file",
    "name": "src/saga/login.js",
    "content": "import {take,put,call,takeEvery} from 'redux-saga/effects'\nimport {LOGIN_REQUESTED,LOGIN_FAILURE,LOGOUT_REQUESTED,loginRequested,loginSuccess,loginFailure} from '../action/login'\nimport {getFromStorage,setToStorage,removeFromStorage,existsKeyOnStorage} from '../module/localstorage'\nimport {getApiBaseURL} from '../module/environment';\nimport axios from \"axios\";\n\n/**\n* rememberme情報（入力されたID/Pass）をlocalStorageに保存する際のkey\n*/\nconst REMEMBER_ME_STORAGE_KEY = \"rememberme\";\n/**\n* APIのベースURL\n*/\nconst BASE_API_URL = getApiBaseURL();\n\n/**\n* login要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* loginSaga(){\n  /*\n  * LOGIN_REQUESTED(ログイン要求)アクションを常に待ち続け、\n  * dispatchされたらloginTaskにactionを渡して実行する\n  */\n  yield takeEvery(LOGIN_REQUESTED,loginTask);\n}\n/**\n* APIに対してID/Passを問い合わせて、\n* 成功すればユーザー情報を元にLOGIN_SUCCESS(ログイン成功)アクションをput(dispatch)する\n* @param {object} action LOGIN_REQUESTED(ログイン要求)アクション\n*/\nexport function* loginTask(action){\n  //rememberme\n  try{\n    yield call(setToStorage,REMEMBER_ME_STORAGE_KEY,{id:action.payload.id,pass:action.payload.pass});\n  }catch(e){\n    //localStorageにアクセスできない場合は何もしない\n  }\n\n\n  //XXX 現在の実装ではサーバエラーなのかID/Passが間違っているのか判断がつかない\n  try{\n    const result = yield call(axios.post,BASE_API_URL + \"auth\",{\n      userid:action.payload.id,\n      password:action.payload.pass\n    });\n\n    const token = result.data.token;\n\n    const resule_user = yield call(axios,{\n      method:\"GET\",\n      url:BASE_API_URL + \"user\",\n      headers:{\"Authorization\":\"Bearer \" + token}\n    });\n\n    yield put(loginSuccess({userid:action.payload.id,name:resule_user.data.name,token:token}));\n  }catch(e){\n    yield put(loginFailure());\n  }\n}\n/**\n* logout要求を受けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* logoutSaga(){\n  yield takeEvery(LOGOUT_REQUESTED,cleanRememberMeTask);\n}\n\n/**\n* ログインに失敗したときのクリーンアップを行うSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* loginFailureSaga(){\n  yield takeEvery(LOGIN_FAILURE,cleanRememberMeTask);\n}\n/**\n* localStorageに保存されているrememberme情報をクリアするTask\n*/\nexport function* cleanRememberMeTask(){\n  try{\n    yield removeFromStorage(REMEMBER_ME_STORAGE_KEY);\n  }catch(e){\n    //localStorageにアクセスできない場合は何もしない\n  }\n\n}\n\n/**\n* localStorageに保存されているID/PassからログインするSaga\n* アプリを起動して(ブラウザアクセスして)1回だけ実行される\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* loginFromRememberMeSaga(){\n  try{\n    const remembermeSaved = yield call(existsKeyOnStorage,REMEMBER_ME_STORAGE_KEY);\n    if(remembermeSaved){\n      const rememberme = yield call(getFromStorage,REMEMBER_ME_STORAGE_KEY);\n      yield put(loginRequested(rememberme.id,rememberme.pass));\n    }\n  }catch(e){\n    //localStorageにアクセスできない場合は何もしない\n  }\n}\n",
    "static": true,
    "longname": "src/saga/login.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 300,
    "kind": "variable",
    "name": "REMEMBER_ME_STORAGE_KEY",
    "memberof": "src/saga/login.js",
    "static": true,
    "longname": "src/saga/login.js~REMEMBER_ME_STORAGE_KEY",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/login.js",
    "importStyle": null,
    "description": "rememberme情報（入力されたID/Pass）をlocalStorageに保存する際のkey",
    "lineNumber": 10,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "variable",
    "name": "BASE_API_URL",
    "memberof": "src/saga/login.js",
    "static": true,
    "longname": "src/saga/login.js~BASE_API_URL",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/login.js",
    "importStyle": null,
    "description": "APIのベースURL",
    "lineNumber": 14,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "function",
    "name": "loginSaga",
    "memberof": "src/saga/login.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/login.js~loginSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/login.js",
    "importStyle": "{loginSaga}",
    "description": "login要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 20,
    "params": []
  },
  {
    "__docId__": 303,
    "kind": "function",
    "name": "loginTask",
    "memberof": "src/saga/login.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/login.js~loginTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/login.js",
    "importStyle": "{loginTask}",
    "description": "APIに対してID/Passを問い合わせて、\n成功すればユーザー情報を元にLOGIN_SUCCESS(ログイン成功)アクションをput(dispatch)する",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "LOGIN_REQUESTED(ログイン要求)アクション"
      }
    ]
  },
  {
    "__docId__": 304,
    "kind": "function",
    "name": "logoutSaga",
    "memberof": "src/saga/login.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/login.js~logoutSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/login.js",
    "importStyle": "{logoutSaga}",
    "description": "logout要求を受けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 65,
    "params": []
  },
  {
    "__docId__": 305,
    "kind": "function",
    "name": "loginFailureSaga",
    "memberof": "src/saga/login.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/login.js~loginFailureSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/login.js",
    "importStyle": "{loginFailureSaga}",
    "description": "ログインに失敗したときのクリーンアップを行うSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 73,
    "params": []
  },
  {
    "__docId__": 306,
    "kind": "function",
    "name": "cleanRememberMeTask",
    "memberof": "src/saga/login.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/login.js~cleanRememberMeTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/login.js",
    "importStyle": "{cleanRememberMeTask}",
    "description": "localStorageに保存されているrememberme情報をクリアするTask",
    "lineNumber": 79,
    "params": []
  },
  {
    "__docId__": 307,
    "kind": "function",
    "name": "loginFromRememberMeSaga",
    "memberof": "src/saga/login.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/login.js~loginFromRememberMeSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/login.js",
    "importStyle": "{loginFromRememberMeSaga}",
    "description": "localStorageに保存されているID/PassからログインするSaga\nアプリを起動して(ブラウザアクセスして)1回だけ実行される",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 93,
    "params": []
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "src/saga/mydestination.js",
    "content": "import {take,put,select,takeEvery,takeLatest,call} from 'redux-saga/effects'\nimport {delay} from 'redux-saga'\nimport {MY_DESTINATION_CHANGE,myDestinationChange,myDestinationSaveComplete} from '../action/mydestination'\nimport {LOGIN_SUCCESS} from '../action/login'\nimport {getApiBaseURL} from '../module/environment';\nimport axios from 'axios';\n\n/**\n* APIのベースURL\n*/\nconst BASE_API_URL = getApiBaseURL();\n\n/**\n* 行き先を入力してからサーバ同期するまでの遅延時間\n*/\nconst SYNC_DELAY_MS = 1000;\n\n/**\n* ログインが成功した際にログインユーザーの行き先をロードするSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* loadDestinationSaga(){\n    yield takeEvery(LOGIN_SUCCESS,loadDestinationTask);\n}\n\n/**\n* ログインユーザーの行き先をロードするtask\n*/\nexport function* loadDestinationTask(){\n    const token = yield select(state => state.login.user.token);\n\n    try{\n      const savedDestination = yield call(axios,{\n        method:\"GET\",\n        url:BASE_API_URL + \"status\",\n        headers:{\"Authorization\":\"Bearer \" + token}\n      });\n\n      yield put(myDestinationChange(savedDestination.data));\n    }catch(e){\n      console.log(e);\n      //TODO 更新に失敗したエラーアクションを投げる\n    }\n}\n/**\n* 行き先変更アクションを受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* changeDestinationSaga(){\n  yield takeLatest(MY_DESTINATION_CHANGE,changeDestinationTask);\n}\n\n/**\n* 行き先変更アクションを受け付けた際のTask\n* @param {Object} action MY_DESTINATION_CHANGEアクション\n*/\nexport function* changeDestinationTask(action){\n  yield call(delay,SYNC_DELAY_MS);\n  const token = yield select(state => state.login.user.token);\n  try{\n\n    yield call(axios.put,\n      BASE_API_URL + \"status\",\n      {inBusiness:action.payload.inBusiness,comment:action.payload.comment,contact:action.payload.contact},\n      {headers:{\"Authorization\":\"Bearer \" + token}}\n    );\n\n    yield put(myDestinationSaveComplete(action.payload));\n  }catch(e){\n    //TODO 更新が失敗した旨をエラーアクションに投げる\n    console.log(e);\n  }\n}\n",
    "static": true,
    "longname": "src/saga/mydestination.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "variable",
    "name": "BASE_API_URL",
    "memberof": "src/saga/mydestination.js",
    "static": true,
    "longname": "src/saga/mydestination.js~BASE_API_URL",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/mydestination.js",
    "importStyle": null,
    "description": "APIのベースURL",
    "lineNumber": 11,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "variable",
    "name": "SYNC_DELAY_MS",
    "memberof": "src/saga/mydestination.js",
    "static": true,
    "longname": "src/saga/mydestination.js~SYNC_DELAY_MS",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/mydestination.js",
    "importStyle": null,
    "description": "行き先を入力してからサーバ同期するまでの遅延時間",
    "lineNumber": 16,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "function",
    "name": "loadDestinationSaga",
    "memberof": "src/saga/mydestination.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/mydestination.js~loadDestinationSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/mydestination.js",
    "importStyle": "{loadDestinationSaga}",
    "description": "ログインが成功した際にログインユーザーの行き先をロードするSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 22,
    "params": []
  },
  {
    "__docId__": 312,
    "kind": "function",
    "name": "loadDestinationTask",
    "memberof": "src/saga/mydestination.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/mydestination.js~loadDestinationTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/mydestination.js",
    "importStyle": "{loadDestinationTask}",
    "description": "ログインユーザーの行き先をロードするtask",
    "lineNumber": 29,
    "params": []
  },
  {
    "__docId__": 313,
    "kind": "function",
    "name": "changeDestinationSaga",
    "memberof": "src/saga/mydestination.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/mydestination.js~changeDestinationSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/mydestination.js",
    "importStyle": "{changeDestinationSaga}",
    "description": "行き先変更アクションを受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 49,
    "params": []
  },
  {
    "__docId__": 314,
    "kind": "function",
    "name": "changeDestinationTask",
    "memberof": "src/saga/mydestination.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/mydestination.js~changeDestinationTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/mydestination.js",
    "importStyle": "{changeDestinationTask}",
    "description": "行き先変更アクションを受け付けた際のTask",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "MY_DESTINATION_CHANGEアクション"
      }
    ]
  },
  {
    "__docId__": 315,
    "kind": "file",
    "name": "src/saga/root.js",
    "content": "import {fork} from 'redux-saga/effects'\nimport {loginSaga,logoutSaga,loginFailureSaga,loginFromRememberMeSaga} from './login'\nimport {signupSaga} from './signup'\nimport {loadDestinationSaga,changeDestinationSaga} from './mydestination'\nimport {loadMemberStatusSaga,watchMemberStatusSaga} from './board'\nimport {changeAccountInfoSaga} from './accountboard'\nimport {loadSuggestionSaga,changeSuggestionSaga} from './suggestion'\nimport {groupSaga} from './group'\n\n/**\n* Sagaの起点ポイント。ここから各Sagaをforkする\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport default function* rootSaga(){\n  yield fork(loginSaga);\n  yield fork(signupSaga);\n  yield fork(logoutSaga);\n  yield fork(loginFailureSaga);\n  yield fork(loginFromRememberMeSaga);\n  yield fork(loadDestinationSaga);\n  yield fork(changeDestinationSaga);\n  yield fork(loadMemberStatusSaga);\n  yield fork(changeAccountInfoSaga);\n  yield fork(loadSuggestionSaga);\n  yield fork(changeSuggestionSaga);\n  yield fork(watchMemberStatusSaga);\n  yield fork(groupSaga);\n}\n",
    "static": true,
    "longname": "src/saga/root.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 316,
    "kind": "function",
    "name": "rootSaga",
    "memberof": "src/saga/root.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/root.js~rootSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/root.js",
    "importStyle": "rootSaga",
    "description": "Sagaの起点ポイント。ここから各Sagaをforkする",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 14,
    "params": []
  },
  {
    "__docId__": 317,
    "kind": "file",
    "name": "src/saga/signup.js",
    "content": "import {put,call,takeEvery} from 'redux-saga/effects'\nimport {SIGNUP_REQUIRED,signupSucceess,signupFailure} from '../action/signup'\nimport {SIGNUP_FAILURE_REASONS} from '../const/signup'\nimport {loginRequested} from '../action/login'\nimport {getApiBaseURL} from '../module/environment';\nimport axios from \"axios\";\n\n/**\n* APIのベースURL\n*/\nconst BASE_API_URL = getApiBaseURL();\n\n/**\n* サインアップ要求を受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* signupSaga(){\n    yield takeEvery(SIGNUP_REQUIRED,signupTask);\n}\n\n/**\n* サインアップ要求を処理するタスク\n* @param {Object} action SIGNUP_REQUIREDアクション\n*/\nexport function* signupTask(action){\n  try{\n    const result = yield call(axios.post,BASE_API_URL + \"user\",{\n      userid:action.payload.id,\n      password:action.payload.password,\n      name:action.payload.name});\n\n    yield put(signupSucceess());\n    yield put(loginRequested(action.payload.id,action.payload.password));\n  }catch(e){\n    //XXX　エラーが起きればID重複と判断しているが、サーバエラーと区別したい\n    yield put(signupFailure([SIGNUP_FAILURE_REASONS.ID_DUPLICATED]));\n  }\n}\n",
    "static": true,
    "longname": "src/saga/signup.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 318,
    "kind": "variable",
    "name": "BASE_API_URL",
    "memberof": "src/saga/signup.js",
    "static": true,
    "longname": "src/saga/signup.js~BASE_API_URL",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/signup.js",
    "importStyle": null,
    "description": "APIのベースURL",
    "lineNumber": 11,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "function",
    "name": "signupSaga",
    "memberof": "src/saga/signup.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/signup.js~signupSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/signup.js",
    "importStyle": "{signupSaga}",
    "description": "サインアップ要求を受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 17,
    "params": []
  },
  {
    "__docId__": 320,
    "kind": "function",
    "name": "signupTask",
    "memberof": "src/saga/signup.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/signup.js~signupTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/signup.js",
    "importStyle": "{signupTask}",
    "description": "サインアップ要求を処理するタスク",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "SIGNUP_REQUIREDアクション"
      }
    ]
  },
  {
    "__docId__": 321,
    "kind": "file",
    "name": "src/saga/suggestion.js",
    "content": "import {take,put,select,takeEvery,takeLatest,call} from 'redux-saga/effects'\nimport {delay} from 'redux-saga'\nimport {MY_DESTINATION_SAVE_COMPLETE} from '../action/mydestination'\nimport {suggestionChange} from '../action/suggestion'\nimport {LOGIN_SUCCESS} from '../action/login'\nimport {setToStorage,getFromStorage,existsKeyOnStorage} from '../module/localstorage'\nimport {DEFAULT_SUGGENSTIONS} from '../const/suggestion'\n\n/**\n* localStorageに行き先を保管する際のKey\n*/\nconst STORAGE_KEY_SUGGESTION = \"my_destination.suggestion.\";\n\n\n/**\n* ログインが成功した際にログインユーザーのサジェスチョンをロードするSaga\n*/\nexport function* loadSuggestionSaga(){\n  yield takeEvery(LOGIN_SUCCESS,loadSuggestionTask);\n}\n\n/**\n* ログインユーザーの行き先をロードするtask\n*/\nexport function* loadSuggestionTask(){\n  const userid = yield select(state => state.login.user.userid);\n  const saved = yield call(existsKeyOnStorage,STORAGE_KEY_SUGGESTION + userid);\n  if(saved){\n    const savedSuggestion = yield call(getFromStorage,STORAGE_KEY_SUGGESTION + userid);\n    yield put(suggestionChange(savedSuggestion));\n  }\n}\n\n/**\n* 行き先変更アクションを受け付けるSaga\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function* changeSuggestionSaga(){\n  yield takeEvery(MY_DESTINATION_SAVE_COMPLETE,changeSuggestionTask);\n}\n\n/**\n* 行き先変更アクションを受け付けた際のTask\n* @param {Object} action SUGGESTION_CHANGEアクション\n*/\nexport function* changeSuggestionTask(action){\n  // サジェスト用履歴をローカルストレージに保存する\n  if(action.payload.comment.length > 0){\n    const logonUser = yield select(state => state.login.user);\n    const saved = yield call(existsKeyOnStorage,STORAGE_KEY_SUGGESTION + logonUser.userid);\n    const savedHistory = saved ? yield call(getFromStorage,STORAGE_KEY_SUGGESTION + logonUser.userid) : DEFAULT_SUGGENSTIONS;\n    const histarr = unshiftArray(savedHistory,action.payload.comment);\n    yield call(setToStorage,STORAGE_KEY_SUGGESTION + logonUser.userid, histarr);\n    yield put(suggestionChange(histarr));\n  }\n\n  function isArrayExists(array, value) {\n    return array.indexOf(value) >= 0;\n  }\n  // 重複を排除しながらunshiftする関数\n  function unshiftArray(array, value) {\n    const result = array.concat();\n    // 存在しない場合、配列にpushする\n    if(! isArrayExists(array, value)) {\n      result.unshift(value);\n      if(result.length > 15){\n        result.pop();\n      }\n    }\n    return result;\n  }\n}\n",
    "static": true,
    "longname": "src/saga/suggestion.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 322,
    "kind": "variable",
    "name": "STORAGE_KEY_SUGGESTION",
    "memberof": "src/saga/suggestion.js",
    "static": true,
    "longname": "src/saga/suggestion.js~STORAGE_KEY_SUGGESTION",
    "access": null,
    "export": false,
    "importPath": "kyo-do.co-ui/src/saga/suggestion.js",
    "importStyle": null,
    "description": "localStorageに行き先を保管する際のKey",
    "lineNumber": 12,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "function",
    "name": "loadSuggestionSaga",
    "memberof": "src/saga/suggestion.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/suggestion.js~loadSuggestionSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/suggestion.js",
    "importStyle": "{loadSuggestionSaga}",
    "description": "ログインが成功した際にログインユーザーのサジェスチョンをロードするSaga",
    "lineNumber": 18,
    "params": []
  },
  {
    "__docId__": 324,
    "kind": "function",
    "name": "loadSuggestionTask",
    "memberof": "src/saga/suggestion.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/suggestion.js~loadSuggestionTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/suggestion.js",
    "importStyle": "{loadSuggestionTask}",
    "description": "ログインユーザーの行き先をロードするtask",
    "lineNumber": 25,
    "params": []
  },
  {
    "__docId__": 325,
    "kind": "function",
    "name": "changeSuggestionSaga",
    "memberof": "src/saga/suggestion.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/suggestion.js~changeSuggestionSaga",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/suggestion.js",
    "importStyle": "{changeSuggestionSaga}",
    "description": "行き先変更アクションを受け付けるSaga",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 38,
    "params": []
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "changeSuggestionTask",
    "memberof": "src/saga/suggestion.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "src/saga/suggestion.js~changeSuggestionTask",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/saga/suggestion.js",
    "importStyle": "{changeSuggestionTask}",
    "description": "行き先変更アクションを受け付けた際のTask",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "SUGGESTION_CHANGEアクション"
      }
    ]
  },
  {
    "__docId__": 327,
    "kind": "file",
    "name": "src/store/store.js",
    "content": "import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport logger from 'redux-logger'\nimport rootReducer from '../reducer/root'\nimport rootSaga from '../saga/root'\nimport {LOGIN_STATUS} from '../const/login'\nimport {DEFAULT_MY_DESTINATION} from '../const/mydestination';\nimport {DEFAULT_GROUP} from '../const/group';\nimport {DEFAULT_GROUPBORADS} from '../const/groupboards';\n\n\n/**\n* reduxのstoreのセットアップ。redux-saga対応。\n* @see http://qiita.com/kuy/items/716affc808ebb3e1e8ac\n*/\nexport function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    {\n      login:{status:LOGIN_STATUS.NOTYET, user:{}},\n      mydestination:DEFAULT_MY_DESTINATION,\n      board:{memberStatus:[]},\n      accountboard:{open:false, nextuser:{}},\n      group:DEFAULT_GROUP,\n      groupboards:DEFAULT_GROUPBORADS\n    },\n    applyMiddleware(\n      sagaMiddleware, logger()\n    )\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n",
    "static": true,
    "longname": "src/store/store.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 328,
    "kind": "function",
    "name": "configureStore",
    "memberof": "src/store/store.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/store/store.js~configureStore",
    "access": null,
    "export": true,
    "importPath": "kyo-do.co-ui/src/store/store.js",
    "importStyle": "{configureStore}",
    "description": "reduxのstoreのセットアップ。redux-saga対応。",
    "see": [
      "http://qiita.com/kuy/items/716affc808ebb3e1e8ac"
    ],
    "lineNumber": 16,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 331,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 332,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 333,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 334,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 335,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 336,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 337,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 338,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 339,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 340,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 341,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 342,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 343,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 344,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 345,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 346,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 347,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 348,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 349,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 350,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 351,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 352,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 353,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 354,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 355,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 356,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 357,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 358,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 359,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 360,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 361,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 362,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 363,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 364,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 365,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 366,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 367,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 368,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 369,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 370,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 371,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 372,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 373,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 374,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 375,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 376,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 378,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 379,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 380,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 381,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 382,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 383,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 384,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 385,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 386,
    "kind": "testFile",
    "name": "test/action/acountboard.test.js",
    "content": "import assert from 'power-assert';\nimport {ACCOUNT_INFO_MODAL_OPEN,ACCOUNT_INFO_MODAL_CLOSE,CHANGE_ACCOUNT_INFO,CHANGE_ACCOUNT_INFO_FIELD} from '../../src/action/accountboard';\nimport {openAccountInfoModal,closeAccountInfoModal,changeAccountInfo,changeAccountInfoField} from '../../src/action/accountboard';\n\n/**@test {openAccountInfoModal}*/\ndescribe(\"openAccountInfoModal action creator\",()=>{\n  it(\"creates ACCOUNT_INFO_MODAL_OPEN action with no argument\",()=>{\n    const result = openAccountInfoModal();\n\n    assert(result.type === ACCOUNT_INFO_MODAL_OPEN);\n  });\n});\n\n/**@test {closeAccountInfoModal}*/\ndescribe(\"closeAccountInfoModal action creator\",()=>{\n  it(\"creates ACCOUNT_INFO_MODAL_CLOSE action with no argument\",()=>{\n    const result = closeAccountInfoModal();\n\n    assert(result.type === ACCOUNT_INFO_MODAL_CLOSE);\n  });\n});\n\n/**@test {changeAccountInfo}*/\ndescribe(\"changeAccountInfo action creator\",()=>{\n  it(\"creates CHANGE_ACCOUNT_INFO action with name and pass\",()=>{\n    const dummyName = \"テスト\";\n    const dummyPass = \"1q2w3e4r\";\n\n    const result = changeAccountInfo(dummyName,dummyPass);\n\n    assert(result.type === CHANGE_ACCOUNT_INFO);\n    assert(result.payload.nextname === dummyName);\n    assert(result.payload.nextpass === dummyPass);\n  });\n});\n\n/**@test {changeAccountInfoField}*/\ndescribe(\"changeAccountInfoField action creator\",() =>{\n  it(\"creates CHANGE_ACCOUNT_INFO_FIELD action with name and pass\",()=>{\n    const dummyName = \"テスト\";\n    const dummyPass = \"1q2w3e4r\";\n\n    const result = changeAccountInfoField(dummyName,dummyPass);\n\n    assert(result.type === CHANGE_ACCOUNT_INFO_FIELD);\n    assert(result.payload.nextname === dummyName);\n    assert(result.payload.nextpass === dummyPass);\n  });\n});\n",
    "static": true,
    "longname": "test/action/acountboard.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "testDescribe",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/action/acountboard.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/acountboard.test.js~describe0",
    "access": null,
    "description": "openAccountInfoModal action creator",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{openAccountInfoModal}"
      }
    ],
    "testTargets": [
      "openAccountInfoModal"
    ]
  },
  {
    "__docId__": 388,
    "kind": "testIt",
    "name": "it1",
    "testId": 1,
    "memberof": "test/action/acountboard.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/acountboard.test.js~describe0.it1",
    "access": null,
    "description": "creates ACCOUNT_INFO_MODAL_OPEN action with no argument",
    "lineNumber": 7
  },
  {
    "__docId__": 389,
    "kind": "testDescribe",
    "name": "describe2",
    "testId": 2,
    "memberof": "test/action/acountboard.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/acountboard.test.js~describe2",
    "access": null,
    "description": "closeAccountInfoModal action creator",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{closeAccountInfoModal}"
      }
    ],
    "testTargets": [
      "closeAccountInfoModal"
    ]
  },
  {
    "__docId__": 390,
    "kind": "testIt",
    "name": "it3",
    "testId": 3,
    "memberof": "test/action/acountboard.test.js~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/acountboard.test.js~describe2.it3",
    "access": null,
    "description": "creates ACCOUNT_INFO_MODAL_CLOSE action with no argument",
    "lineNumber": 16
  },
  {
    "__docId__": 391,
    "kind": "testDescribe",
    "name": "describe4",
    "testId": 4,
    "memberof": "test/action/acountboard.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/acountboard.test.js~describe4",
    "access": null,
    "description": "changeAccountInfo action creator",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeAccountInfo}"
      }
    ],
    "testTargets": [
      "changeAccountInfo"
    ]
  },
  {
    "__docId__": 392,
    "kind": "testIt",
    "name": "it5",
    "testId": 5,
    "memberof": "test/action/acountboard.test.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/acountboard.test.js~describe4.it5",
    "access": null,
    "description": "creates CHANGE_ACCOUNT_INFO action with name and pass",
    "lineNumber": 25
  },
  {
    "__docId__": 393,
    "kind": "testDescribe",
    "name": "describe6",
    "testId": 6,
    "memberof": "test/action/acountboard.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/acountboard.test.js~describe6",
    "access": null,
    "description": "changeAccountInfoField action creator",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeAccountInfoField}"
      }
    ],
    "testTargets": [
      "changeAccountInfoField"
    ]
  },
  {
    "__docId__": 394,
    "kind": "testIt",
    "name": "it7",
    "testId": 7,
    "memberof": "test/action/acountboard.test.js~describe6",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/acountboard.test.js~describe6.it7",
    "access": null,
    "description": "creates CHANGE_ACCOUNT_INFO_FIELD action with name and pass",
    "lineNumber": 39
  },
  {
    "__docId__": 395,
    "kind": "testFile",
    "name": "test/action/board.test.js",
    "content": "import assert from \"power-assert\";\nimport {UPDATE_MEMBER_STATUS,MEMBER_STATUS_POLLING} from '../../src/action/board';\nimport {updateMemberStatus,memberStatusPolling} from '../../src/action/board';\n\n/**@test {updateMemberStatus}*/\ndescribe(\"updateMemberStatus action creator\",()=>{\n  it(\"creates UPDATE_MEMBER_STATUS action with all member status from API\",()=>{\n    const dummyMemberStatus = [\n      {userid:\"testA\",name:\"Aさん\",inBusiness:true,comment:\"自席\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testB\",name:\"Bさん\",inBusiness:false,comment:\"\",contact:\"090-YYY-YYYY\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testC\",name:\"Cさん\",inBusiness:true,comment:\"京橋\",contact:\"\",lastUpdate:\"2017/05/01 10:00:00\"}\n    ];\n\n    const result  = updateMemberStatus(dummyMemberStatus);\n\n    assert(result.type === UPDATE_MEMBER_STATUS);\n    assert.deepEqual(result.payload,dummyMemberStatus);\n  });\n});\n\n/**@test {memberStatusPolling}*/\ndescribe(\"memberStatusPolling action creator\",()=>{\n  it(\"creates MEMBER_STATUS_POLLING action creator with no arguments\",()=>{\n    const result = memberStatusPolling();\n\n    assert(result.type === MEMBER_STATUS_POLLING);\n  });\n});\n",
    "static": true,
    "longname": "test/action/board.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 396,
    "kind": "testDescribe",
    "name": "describe8",
    "testId": 8,
    "memberof": "test/action/board.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/board.test.js~describe8",
    "access": null,
    "description": "updateMemberStatus action creator",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{updateMemberStatus}"
      }
    ],
    "testTargets": [
      "updateMemberStatus"
    ]
  },
  {
    "__docId__": 397,
    "kind": "testIt",
    "name": "it9",
    "testId": 9,
    "memberof": "test/action/board.test.js~describe8",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/board.test.js~describe8.it9",
    "access": null,
    "description": "creates UPDATE_MEMBER_STATUS action with all member status from API",
    "lineNumber": 7
  },
  {
    "__docId__": 398,
    "kind": "testDescribe",
    "name": "describe10",
    "testId": 10,
    "memberof": "test/action/board.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/board.test.js~describe10",
    "access": null,
    "description": "memberStatusPolling action creator",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{memberStatusPolling}"
      }
    ],
    "testTargets": [
      "memberStatusPolling"
    ]
  },
  {
    "__docId__": 399,
    "kind": "testIt",
    "name": "it11",
    "testId": 11,
    "memberof": "test/action/board.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/board.test.js~describe10.it11",
    "access": null,
    "description": "creates MEMBER_STATUS_POLLING action creator with no arguments",
    "lineNumber": 23
  },
  {
    "__docId__": 400,
    "kind": "testFile",
    "name": "test/action/group.test.js",
    "content": "import assert from 'power-assert';\nimport {\n  GROUPS_LOADED,\n  GROUP_MEMBER_LOADED,\n  CREATE_GROUP_REQUIRED,\n  CREATE_GROUP_SUCCESS,\n  CREATE_GROUP_FAILURE,\n  ADD_MEMBER_TO_GROUP_REQUIRED,\n  ADD_MEMBER_TO_GROUP_SUCCESS,\n  ADD_MEMBER_TO_GROUP_FAILURE,\n  DELETE_MEMBER_FROM_GROUP_REQUIRED,\n  DELETE_MEMBER_FROM_GROUP_SUCCESS,\n  DELETE_MEMBER_FROM_GROUP_FAILURE,\n  SET_MEMBER_AS_GROUP_ADMIN_REQUIRED,\n  SET_MEMBER_AS_GROUP_ADMIN_SUCCESS,\n  SET_MEMBER_AS_GROUP_ADMIN_FAILURE,\n  UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED,\n  UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS,\n  UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE,\n  CHANGE_GROUP_NAME_REQUIRED,\n  CHANGE_GROUP_NAME_SUCCESS,\n  CHANGE_GROUP_NAME_FAILURE,\n  DELETE_GROUP_REQUIRED,\n  DELETE_GROUP_SUCCESS,\n  DELETE_GROUP_FAILURE\n} from '../../src/action/group';\n\nimport {\n  groupsLoaded,\n  groupMemberLoaded,\n  createGroupRequired,\n  createGroupSuccess,\n  createGroupFailure,\n  addMemberToGroupRequired,\n  addMemberToGroupSuccess,\n  addMemberToGroupFailure,\n  deleteMemberFromGroupRequired,\n  deleteMemberFromGroupSuccess,\n  deleteMemberFromGroupFailure,\n  setMemberAsGroupAdminRequired,\n  setMemberAsGroupAdminSuccess,\n  setMemberAsGroupAdminFailure,\n  unsetMemberAsGroupAdminRequired,\n  unsetMemberAsGroupAdminSuccess,\n  unsetMemberAsGroupAdminFailure,\n  changeGroupNameRequired,\n  changeGroupNameSuccess,\n  changeGroupNameFailure,\n  deleteGroupRequired,\n  deleteGroupSuccess,\n  deleteGroupFailure\n} from '../../src/action/group';\n\n/**@test {groupsLoaded} */\ndescribe(\"groupsLoaded action creator\",()=>{\n  it(\"creates GROUPS_LOADED action with groupinfo and logonUserId\",()=>{\n    const dummyAPIResult = [\n      {\n        \"id\": \"g0001\",\n        \"name\": \"groupname1\",\n        \"admin\": [\n          \"userid1\",\n          \"userid2\"\n        ]\n      },\n      {\n        \"id\": \"g0002\",\n        \"name\": \"groupname2\",\n        \"admin\": [\n          \"userid3\"\n        ]\n      }\n    ];\n\n    const dummyLogonUserId = \"userid1\";\n\n    const result = groupsLoaded(dummyAPIResult,dummyLogonUserId);\n\n    assert(result.type === GROUPS_LOADED);\n    assert.deepEqual(result.payload.groupinfo,dummyAPIResult);\n    assert(result.payload.logonUserId === dummyLogonUserId);\n  });\n});\n\n/**@test {groupMemberLoaded} */\ndescribe(\"groupMemberLoaded action creator\",()=>{\n  it(\"creates GROUP_MEMBER_LOADED action with groupWithMember data and logonUserId\",()=>{\n    const dummyGroupWithMember = {\n      \"id\": \"g0001\",\n      \"name\": \"groupname1\",\n      \"admin\": [\n        \"userid1\",\n        \"userid2\"\n      ],\n      \"members\":[\n        \"userid1\",\n        \"userid2\",\n        \"userid3\",\n        \"userid4\"\n      ]\n    };\n\n    const dummyLogonUserId = \"userid4\";\n\n    const result = groupMemberLoaded(dummyGroupWithMember,dummyLogonUserId);\n\n    assert(result.type === GROUP_MEMBER_LOADED);\n    assert.deepEqual(result.payload.groupWithMember, dummyGroupWithMember);\n    assert(result.payload.logonUserId === dummyLogonUserId);\n  });\n});\n\n/**@test {createGroupRequired} */\ndescribe(\"createGroupRequired action creator\",()=>{\n  it(\"creates CREATE_GROUP_REQUIRED action with new group name\",()=>{\n    const testGroupName = \"test group\";\n\n    const result = createGroupRequired(testGroupName);\n\n    assert(result.type === CREATE_GROUP_REQUIRED);\n    assert(result.payload.groupName === testGroupName);\n  });\n});\n\n/**@test {createGroupSuccess}*/\ndescribe(\"createGroupSuccess action creator\",()=>{\n  it(\"creates CREATE_GROUP_SUCCESS action with no arguments\",()=>{\n    const dummyGroupId = \"g0001\";\n    const result = createGroupSuccess(dummyGroupId);\n\n    assert(result.type === CREATE_GROUP_SUCCESS);\n    assert(result.payload.groupId === dummyGroupId);\n  });\n});\n\n/**@test {createGroupFailure}*/\ndescribe(\"createGroupFailure action creator\",()=>{\n  it(\"creates CREATE_GROUP_FAILURE action with no arguments\",()=>{\n    const result = createGroupFailure();\n\n    assert(result.type === CREATE_GROUP_FAILURE);\n  })\n});\n\n/**@test {addMemberToGroupRequired} */\ndescribe(\"addMemberToGroupRequired action creator\",()=>{\n  it(\"creates ADD_MEMBER_TO_GROUP_REQUIRED action with target group ID and target member ID\",()=>{\n    const targetGroupId = \"group_id_1\";\n    const targetMemberId = \"member1\";\n\n    const result = addMemberToGroupRequired(targetGroupId,targetMemberId);\n\n    assert(result.type === ADD_MEMBER_TO_GROUP_REQUIRED);\n    assert(result.payload.groupId === targetGroupId);\n    assert(result.payload.memberId === targetMemberId);\n  });\n});\n\n/**@test {addMemberToGroupSuccess} */\ndescribe(\"addMemberToGroupSuccess action creator\",()=>{\n  it(\"creates ADD_MEMBER_TO_GROUP_SUCCESS action with no arguments\",()=>{\n    const result = addMemberToGroupSuccess();\n\n    assert(result.type === ADD_MEMBER_TO_GROUP_SUCCESS);\n  });\n});\n\n/**@test {addMemberToGroupFailure}*/\ndescribe(\"addMemberToGroupFailure action creator\",()=>{\n  it(\"creates ADD_MEMBER_TO_GROUP_FAILURE action with no arguments\",()=>{\n    const result = addMemberToGroupFailure();\n\n    assert(result.type === ADD_MEMBER_TO_GROUP_FAILURE);\n  });\n});\n\n/**@test {deleteMemberFromGroupRequired} */\ndescribe(\"deleteMemberFromGroupRequired action creator\",()=>{\n  it(\"creates DELETE_MEMBER_FROM_GROUP_REQUIRED action with target group ID and target member ID\",()=>{\n    const targetGroupId = \"group_id_1\";\n    const targetMemberId = \"member1\";\n\n    const result = deleteMemberFromGroupRequired(targetGroupId,targetMemberId);\n\n    assert(result.type === DELETE_MEMBER_FROM_GROUP_REQUIRED);\n    assert(result.payload.groupId === targetGroupId);\n    assert(result.payload.memberId === targetMemberId);\n  });\n});\n\n/**@test {deleteMemberFromGroupSuccess} */\ndescribe(\"deleteMemberFromGroupSuccess action creator\",()=>{\n  it(\"creates DELETE_MEMBER_FROM_GROUP_SUCCESS action with no arguments\",()=>{\n    const result = deleteMemberFromGroupSuccess();\n\n    assert(result.type === DELETE_MEMBER_FROM_GROUP_SUCCESS);\n  });\n});\n\n/**@test {deleteMemberFromGroupFailure} */\ndescribe(\"deleteMemberFromGroupFailure action creator\",()=>{\n  it(\"creates DELETE_MEMBER_FROM_GROUP_FAILURE action with no arguments\",()=>{\n    const result = deleteMemberFromGroupFailure();\n\n    assert(result.type === DELETE_MEMBER_FROM_GROUP_FAILURE);\n  });\n});\n\n/**@test {setMemberAsGroupAdminRequired}*/\ndescribe(\"setMemberAsGroupAdminRequired action creator\",()=>{\n  it(\"creates SET_MEMBER_AS_GROUP_ADMIN_REQUIRED action with target group ID and target member ID\",()=>{\n    const targetGroupId = \"group_id_1\";\n    const targetMemberId = \"member1\";\n\n    const result = setMemberAsGroupAdminRequired(targetGroupId,targetMemberId);\n\n    assert(result.type === SET_MEMBER_AS_GROUP_ADMIN_REQUIRED);\n    assert(result.payload.groupId === targetGroupId);\n    assert(result.payload.memberId === targetMemberId);\n  });\n});\n\n/**@test {setMemberAsGroupAdminSuccess} */\ndescribe(\"setMemberAsGroupAdminSuccess action creator\",()=>{\n  it(\"creates SET_MEMBER_AS_GROUP_ADMIN_SUCCESS action with no arguments\",()=>{\n    const result = setMemberAsGroupAdminSuccess();\n\n    assert(result.type === SET_MEMBER_AS_GROUP_ADMIN_SUCCESS);\n  });\n});\n\n/**@test {setMemberAsGroupAdminFailure} */\ndescribe(\"setMemberAsGroupAdminFailure action creator\",()=>{\n  it(\"creates SET_MEMBER_AS_GROUP_ADMIN_FAILURE action with no arguments\",()=>{\n    const result = setMemberAsGroupAdminFailure();\n\n    assert(result.type === SET_MEMBER_AS_GROUP_ADMIN_FAILURE);\n  });\n});\n\n/**@test {unsetMemberAsGroupAdminRequired} */\ndescribe(\"unsetMemberAsGroupAdminRequired action creator\",()=>{\n  it(\"creates UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED action with target group ID and target member ID\",()=>{\n    const targetGroupId = \"group_id_1\";\n    const targetMemberId = \"member1\";\n\n    const result = unsetMemberAsGroupAdminRequired(targetGroupId,targetMemberId);\n\n    assert(result.type === UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED);\n    assert(result.payload.groupId === targetGroupId);\n    assert(result.payload.memberId === targetMemberId);\n  });\n});\n\n/**@test {unsetMemberAsGroupAdminSuccess} */\ndescribe(\"unsetMemberAsGroupAdminSuccess action creator\",()=>{\n  it(\"creates UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS action with no arguments\",()=>{\n    const result = unsetMemberAsGroupAdminSuccess();\n\n    assert(result.type === UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS);\n  })\n});\n\n/**@test [unsetMemberAsGroupAdminFailure] */\ndescribe(\"unsetMemberAsGroupAdminFailure action creator\",()=>{\n  it(\"creates UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE action creator\",()=>{\n    const result = unsetMemberAsGroupAdminFailure();\n\n    assert(result.type === UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE);\n  });\n});\n\n/**@test {changeGroupNameRequired} */\ndescribe(\"changeGroupNameRequired action creator\",()=>{\n  it(\"creates CHANGE_GROUP_NAME_REQUIRED action with targetGroupId and new group name\",()=>{\n    const targetGroupId = \"group_id_1\";\n    const newGroupName = \"new name\";\n\n    const result = changeGroupNameRequired(targetGroupId,newGroupName);\n\n    assert(result.type === CHANGE_GROUP_NAME_REQUIRED);\n    assert(result.payload.groupId === targetGroupId);\n    assert(result.payload.newName === newGroupName);\n  });\n});\n\n/**@test {changeGroupNameSuccess} */\ndescribe(\"changeGroupNameSuccess action creator\",()=>{\n  it(\"creates CHANGE_GROUP_NAME_SUCCESS action with no arguments\",()=>{\n    const result = changeGroupNameSuccess();\n\n    assert(result.type === CHANGE_GROUP_NAME_SUCCESS);\n  });\n});\n\n/**@test {changeGroupNameFailure} */\ndescribe(\"changeGroupNameFailure action creator\",()=>{\n  it(\"creates CHANGE_GROUP_NAME_FAILURE action with no arguments\",()=>{\n    const result = changeGroupNameFailure();\n\n    assert(result.type === CHANGE_GROUP_NAME_FAILURE);\n  });\n});\n\n/**@test  {deleteGroupRequired} */\ndescribe(\"deleteGroupRequired action creator\",()=>{\n  it(\"creates DELETE_GROUP_REQUIRED action with target group ID\",()=>{\n    const targetGroupId = \"group_id_1\";\n\n    const result = deleteGroupRequired(targetGroupId);\n\n    assert(result.type === DELETE_GROUP_REQUIRED);\n    assert(result.payload.groupId === targetGroupId);\n  });\n});\n\n/**@test {deleteGroupSuccess} */\ndescribe(\"deleteGroupSuccess action creator\",()=>{\n  it(\"creates DELETE_GROUP_SUCCESS action with no arguments\",()=>{\n    const result = deleteGroupSuccess();\n\n    assert(result.type === DELETE_GROUP_SUCCESS);\n  });\n});\n\n/**@test {deleteGroupFailure} */\ndescribe(\"deleteGroupFailure action creator\",()=>{\n  it(\"creates DELETE_GROUP_FAILURE action with no arguments\",()=>{\n    const result = deleteGroupFailure();\n\n    assert(result.type === DELETE_GROUP_FAILURE);\n  })\n});\n",
    "static": true,
    "longname": "test/action/group.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 401,
    "kind": "testDescribe",
    "name": "describe12",
    "testId": 12,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe12",
    "access": null,
    "description": "groupsLoaded action creator",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{groupsLoaded}"
      }
    ],
    "testTargets": [
      "groupsLoaded"
    ]
  },
  {
    "__docId__": 402,
    "kind": "testIt",
    "name": "it13",
    "testId": 13,
    "memberof": "test/action/group.test.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe12.it13",
    "access": null,
    "description": "creates GROUPS_LOADED action with groupinfo and logonUserId",
    "lineNumber": 56
  },
  {
    "__docId__": 403,
    "kind": "testDescribe",
    "name": "describe14",
    "testId": 14,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe14",
    "access": null,
    "description": "groupMemberLoaded action creator",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{groupMemberLoaded}"
      }
    ],
    "testTargets": [
      "groupMemberLoaded"
    ]
  },
  {
    "__docId__": 404,
    "kind": "testIt",
    "name": "it15",
    "testId": 15,
    "memberof": "test/action/group.test.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe14.it15",
    "access": null,
    "description": "creates GROUP_MEMBER_LOADED action with groupWithMember data and logonUserId",
    "lineNumber": 87
  },
  {
    "__docId__": 405,
    "kind": "testDescribe",
    "name": "describe16",
    "testId": 16,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe16",
    "access": null,
    "description": "createGroupRequired action creator",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{createGroupRequired}"
      }
    ],
    "testTargets": [
      "createGroupRequired"
    ]
  },
  {
    "__docId__": 406,
    "kind": "testIt",
    "name": "it17",
    "testId": 17,
    "memberof": "test/action/group.test.js~describe16",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe16.it17",
    "access": null,
    "description": "creates CREATE_GROUP_REQUIRED action with new group name",
    "lineNumber": 115
  },
  {
    "__docId__": 407,
    "kind": "testDescribe",
    "name": "describe18",
    "testId": 18,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe18",
    "access": null,
    "description": "createGroupSuccess action creator",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{createGroupSuccess}"
      }
    ],
    "testTargets": [
      "createGroupSuccess"
    ]
  },
  {
    "__docId__": 408,
    "kind": "testIt",
    "name": "it19",
    "testId": 19,
    "memberof": "test/action/group.test.js~describe18",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe18.it19",
    "access": null,
    "description": "creates CREATE_GROUP_SUCCESS action with no arguments",
    "lineNumber": 127
  },
  {
    "__docId__": 409,
    "kind": "testDescribe",
    "name": "describe20",
    "testId": 20,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe20",
    "access": null,
    "description": "createGroupFailure action creator",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{createGroupFailure}"
      }
    ],
    "testTargets": [
      "createGroupFailure"
    ]
  },
  {
    "__docId__": 410,
    "kind": "testIt",
    "name": "it21",
    "testId": 21,
    "memberof": "test/action/group.test.js~describe20",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe20.it21",
    "access": null,
    "description": "creates CREATE_GROUP_FAILURE action with no arguments",
    "lineNumber": 138
  },
  {
    "__docId__": 411,
    "kind": "testDescribe",
    "name": "describe22",
    "testId": 22,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe22",
    "access": null,
    "description": "addMemberToGroupRequired action creator",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{addMemberToGroupRequired}"
      }
    ],
    "testTargets": [
      "addMemberToGroupRequired"
    ]
  },
  {
    "__docId__": 412,
    "kind": "testIt",
    "name": "it23",
    "testId": 23,
    "memberof": "test/action/group.test.js~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe22.it23",
    "access": null,
    "description": "creates ADD_MEMBER_TO_GROUP_REQUIRED action with target group ID and target member ID",
    "lineNumber": 147
  },
  {
    "__docId__": 413,
    "kind": "testDescribe",
    "name": "describe24",
    "testId": 24,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe24",
    "access": null,
    "description": "addMemberToGroupSuccess action creator",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{addMemberToGroupSuccess}"
      }
    ],
    "testTargets": [
      "addMemberToGroupSuccess"
    ]
  },
  {
    "__docId__": 414,
    "kind": "testIt",
    "name": "it25",
    "testId": 25,
    "memberof": "test/action/group.test.js~describe24",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe24.it25",
    "access": null,
    "description": "creates ADD_MEMBER_TO_GROUP_SUCCESS action with no arguments",
    "lineNumber": 161
  },
  {
    "__docId__": 415,
    "kind": "testDescribe",
    "name": "describe26",
    "testId": 26,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe26",
    "access": null,
    "description": "addMemberToGroupFailure action creator",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{addMemberToGroupFailure}"
      }
    ],
    "testTargets": [
      "addMemberToGroupFailure"
    ]
  },
  {
    "__docId__": 416,
    "kind": "testIt",
    "name": "it27",
    "testId": 27,
    "memberof": "test/action/group.test.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe26.it27",
    "access": null,
    "description": "creates ADD_MEMBER_TO_GROUP_FAILURE action with no arguments",
    "lineNumber": 170
  },
  {
    "__docId__": 417,
    "kind": "testDescribe",
    "name": "describe28",
    "testId": 28,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe28",
    "access": null,
    "description": "deleteMemberFromGroupRequired action creator",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{deleteMemberFromGroupRequired}"
      }
    ],
    "testTargets": [
      "deleteMemberFromGroupRequired"
    ]
  },
  {
    "__docId__": 418,
    "kind": "testIt",
    "name": "it29",
    "testId": 29,
    "memberof": "test/action/group.test.js~describe28",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe28.it29",
    "access": null,
    "description": "creates DELETE_MEMBER_FROM_GROUP_REQUIRED action with target group ID and target member ID",
    "lineNumber": 179
  },
  {
    "__docId__": 419,
    "kind": "testDescribe",
    "name": "describe30",
    "testId": 30,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe30",
    "access": null,
    "description": "deleteMemberFromGroupSuccess action creator",
    "lineNumber": 192,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{deleteMemberFromGroupSuccess}"
      }
    ],
    "testTargets": [
      "deleteMemberFromGroupSuccess"
    ]
  },
  {
    "__docId__": 420,
    "kind": "testIt",
    "name": "it31",
    "testId": 31,
    "memberof": "test/action/group.test.js~describe30",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe30.it31",
    "access": null,
    "description": "creates DELETE_MEMBER_FROM_GROUP_SUCCESS action with no arguments",
    "lineNumber": 193
  },
  {
    "__docId__": 421,
    "kind": "testDescribe",
    "name": "describe32",
    "testId": 32,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe32",
    "access": null,
    "description": "deleteMemberFromGroupFailure action creator",
    "lineNumber": 201,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{deleteMemberFromGroupFailure}"
      }
    ],
    "testTargets": [
      "deleteMemberFromGroupFailure"
    ]
  },
  {
    "__docId__": 422,
    "kind": "testIt",
    "name": "it33",
    "testId": 33,
    "memberof": "test/action/group.test.js~describe32",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe32.it33",
    "access": null,
    "description": "creates DELETE_MEMBER_FROM_GROUP_FAILURE action with no arguments",
    "lineNumber": 202
  },
  {
    "__docId__": 423,
    "kind": "testDescribe",
    "name": "describe34",
    "testId": 34,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe34",
    "access": null,
    "description": "setMemberAsGroupAdminRequired action creator",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{setMemberAsGroupAdminRequired}"
      }
    ],
    "testTargets": [
      "setMemberAsGroupAdminRequired"
    ]
  },
  {
    "__docId__": 424,
    "kind": "testIt",
    "name": "it35",
    "testId": 35,
    "memberof": "test/action/group.test.js~describe34",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe34.it35",
    "access": null,
    "description": "creates SET_MEMBER_AS_GROUP_ADMIN_REQUIRED action with target group ID and target member ID",
    "lineNumber": 211
  },
  {
    "__docId__": 425,
    "kind": "testDescribe",
    "name": "describe36",
    "testId": 36,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe36",
    "access": null,
    "description": "setMemberAsGroupAdminSuccess action creator",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{setMemberAsGroupAdminSuccess}"
      }
    ],
    "testTargets": [
      "setMemberAsGroupAdminSuccess"
    ]
  },
  {
    "__docId__": 426,
    "kind": "testIt",
    "name": "it37",
    "testId": 37,
    "memberof": "test/action/group.test.js~describe36",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe36.it37",
    "access": null,
    "description": "creates SET_MEMBER_AS_GROUP_ADMIN_SUCCESS action with no arguments",
    "lineNumber": 225
  },
  {
    "__docId__": 427,
    "kind": "testDescribe",
    "name": "describe38",
    "testId": 38,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe38",
    "access": null,
    "description": "setMemberAsGroupAdminFailure action creator",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{setMemberAsGroupAdminFailure}"
      }
    ],
    "testTargets": [
      "setMemberAsGroupAdminFailure"
    ]
  },
  {
    "__docId__": 428,
    "kind": "testIt",
    "name": "it39",
    "testId": 39,
    "memberof": "test/action/group.test.js~describe38",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe38.it39",
    "access": null,
    "description": "creates SET_MEMBER_AS_GROUP_ADMIN_FAILURE action with no arguments",
    "lineNumber": 234
  },
  {
    "__docId__": 429,
    "kind": "testDescribe",
    "name": "describe40",
    "testId": 40,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe40",
    "access": null,
    "description": "unsetMemberAsGroupAdminRequired action creator",
    "lineNumber": 242,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{unsetMemberAsGroupAdminRequired}"
      }
    ],
    "testTargets": [
      "unsetMemberAsGroupAdminRequired"
    ]
  },
  {
    "__docId__": 430,
    "kind": "testIt",
    "name": "it41",
    "testId": 41,
    "memberof": "test/action/group.test.js~describe40",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe40.it41",
    "access": null,
    "description": "creates UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED action with target group ID and target member ID",
    "lineNumber": 243
  },
  {
    "__docId__": 431,
    "kind": "testDescribe",
    "name": "describe42",
    "testId": 42,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe42",
    "access": null,
    "description": "unsetMemberAsGroupAdminSuccess action creator",
    "lineNumber": 256,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{unsetMemberAsGroupAdminSuccess}"
      }
    ],
    "testTargets": [
      "unsetMemberAsGroupAdminSuccess"
    ]
  },
  {
    "__docId__": 432,
    "kind": "testIt",
    "name": "it43",
    "testId": 43,
    "memberof": "test/action/group.test.js~describe42",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe42.it43",
    "access": null,
    "description": "creates UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS action with no arguments",
    "lineNumber": 257
  },
  {
    "__docId__": 433,
    "kind": "testDescribe",
    "name": "describe44",
    "testId": 44,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe44",
    "access": null,
    "description": "unsetMemberAsGroupAdminFailure action creator",
    "lineNumber": 265,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "[unsetMemberAsGroupAdminFailure]"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 434,
    "kind": "testIt",
    "name": "it45",
    "testId": 45,
    "memberof": "test/action/group.test.js~describe44",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe44.it45",
    "access": null,
    "description": "creates UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE action creator",
    "lineNumber": 266
  },
  {
    "__docId__": 435,
    "kind": "testDescribe",
    "name": "describe46",
    "testId": 46,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe46",
    "access": null,
    "description": "changeGroupNameRequired action creator",
    "lineNumber": 274,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeGroupNameRequired}"
      }
    ],
    "testTargets": [
      "changeGroupNameRequired"
    ]
  },
  {
    "__docId__": 436,
    "kind": "testIt",
    "name": "it47",
    "testId": 47,
    "memberof": "test/action/group.test.js~describe46",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe46.it47",
    "access": null,
    "description": "creates CHANGE_GROUP_NAME_REQUIRED action with targetGroupId and new group name",
    "lineNumber": 275
  },
  {
    "__docId__": 437,
    "kind": "testDescribe",
    "name": "describe48",
    "testId": 48,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe48",
    "access": null,
    "description": "changeGroupNameSuccess action creator",
    "lineNumber": 288,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeGroupNameSuccess}"
      }
    ],
    "testTargets": [
      "changeGroupNameSuccess"
    ]
  },
  {
    "__docId__": 438,
    "kind": "testIt",
    "name": "it49",
    "testId": 49,
    "memberof": "test/action/group.test.js~describe48",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe48.it49",
    "access": null,
    "description": "creates CHANGE_GROUP_NAME_SUCCESS action with no arguments",
    "lineNumber": 289
  },
  {
    "__docId__": 439,
    "kind": "testDescribe",
    "name": "describe50",
    "testId": 50,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe50",
    "access": null,
    "description": "changeGroupNameFailure action creator",
    "lineNumber": 297,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeGroupNameFailure}"
      }
    ],
    "testTargets": [
      "changeGroupNameFailure"
    ]
  },
  {
    "__docId__": 440,
    "kind": "testIt",
    "name": "it51",
    "testId": 51,
    "memberof": "test/action/group.test.js~describe50",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe50.it51",
    "access": null,
    "description": "creates CHANGE_GROUP_NAME_FAILURE action with no arguments",
    "lineNumber": 298
  },
  {
    "__docId__": 441,
    "kind": "testDescribe",
    "name": "describe52",
    "testId": 52,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe52",
    "access": null,
    "description": "deleteGroupRequired action creator",
    "lineNumber": 306,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": " {deleteGroupRequired}"
      }
    ],
    "testTargets": [
      "deleteGroupRequired"
    ]
  },
  {
    "__docId__": 442,
    "kind": "testIt",
    "name": "it53",
    "testId": 53,
    "memberof": "test/action/group.test.js~describe52",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe52.it53",
    "access": null,
    "description": "creates DELETE_GROUP_REQUIRED action with target group ID",
    "lineNumber": 307
  },
  {
    "__docId__": 443,
    "kind": "testDescribe",
    "name": "describe54",
    "testId": 54,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe54",
    "access": null,
    "description": "deleteGroupSuccess action creator",
    "lineNumber": 318,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{deleteGroupSuccess}"
      }
    ],
    "testTargets": [
      "deleteGroupSuccess"
    ]
  },
  {
    "__docId__": 444,
    "kind": "testIt",
    "name": "it55",
    "testId": 55,
    "memberof": "test/action/group.test.js~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe54.it55",
    "access": null,
    "description": "creates DELETE_GROUP_SUCCESS action with no arguments",
    "lineNumber": 319
  },
  {
    "__docId__": 445,
    "kind": "testDescribe",
    "name": "describe56",
    "testId": 56,
    "memberof": "test/action/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/group.test.js~describe56",
    "access": null,
    "description": "deleteGroupFailure action creator",
    "lineNumber": 327,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{deleteGroupFailure}"
      }
    ],
    "testTargets": [
      "deleteGroupFailure"
    ]
  },
  {
    "__docId__": 446,
    "kind": "testIt",
    "name": "it57",
    "testId": 57,
    "memberof": "test/action/group.test.js~describe56",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/group.test.js~describe56.it57",
    "access": null,
    "description": "creates DELETE_GROUP_FAILURE action with no arguments",
    "lineNumber": 328
  },
  {
    "__docId__": 447,
    "kind": "testFile",
    "name": "test/action/groupboards.test.js",
    "content": "import assert from 'power-assert';\nimport {\n  OPEN_GROUP_CREATION_BOARD,\n  CLOSE_GROUP_CREATION_BOARD,\n  OPEN_GROUP_MANAGEMENT_BOARD,\n  CLOSE_GROUP_MANAGEMENT_BOARD\n} from '../../src/action/groupboards';\n\nimport {\n  openGroupCreationBoard,\n  closeGroupCreationBoard,\n  openGroupManagementBoard,\n  closeGroupManagementBoard\n} from '../../src/action/groupboards';\n\n/**@test {openGroupCreationBoard}*/\ndescribe(\"openGroupCreationBoard action creator\",()=>{\n  it(\"creates OPEN_GROUP_CREATION_BOARD action with no arguments\",()=>{\n    const result = openGroupCreationBoard();\n\n    assert(result.type === OPEN_GROUP_CREATION_BOARD);\n  });\n});\n/**@test {closeGroupCreationBoard} */\ndescribe(\"closeGroupCreationBoard action creator\",()=>{\n  it(\"creates CLOSE_GROUP_CREATION_BOARD with no arguments\",()=>{\n    const result = closeGroupCreationBoard();\n\n    assert(result.type === CLOSE_GROUP_CREATION_BOARD);\n  });\n});\n\n/**@test {openGroupManagementBoard} */\ndescribe(\"openGroupManagementBoard action creator\",()=>{\n  it(\"creates OPEN_GROUP_MANAGEMENT_BOARD action with target group object\",()=>{\n    const dummyGroupId = \"g0001\";\n\n    const result = openGroupManagementBoard(dummyGroupId);\n\n    assert(result.type === OPEN_GROUP_MANAGEMENT_BOARD);\n    assert(result.payload.groupId, dummyGroupId);\n  });\n});\n\n/**@test {closeGroupCreationBoard} */\ndescribe(\"closeGroupCreationBoard action creator\",()=>{\n  it(\"creates CLOSE_GROUP_MANAGEMENT_BOARD with no arguments\",()=>{\n    const result = closeGroupManagementBoard();\n\n    assert(result.type === CLOSE_GROUP_MANAGEMENT_BOARD);\n  });\n});\n",
    "static": true,
    "longname": "test/action/groupboards.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "testDescribe",
    "name": "describe58",
    "testId": 58,
    "memberof": "test/action/groupboards.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/groupboards.test.js~describe58",
    "access": null,
    "description": "openGroupCreationBoard action creator",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{openGroupCreationBoard}"
      }
    ],
    "testTargets": [
      "openGroupCreationBoard"
    ]
  },
  {
    "__docId__": 449,
    "kind": "testIt",
    "name": "it59",
    "testId": 59,
    "memberof": "test/action/groupboards.test.js~describe58",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/groupboards.test.js~describe58.it59",
    "access": null,
    "description": "creates OPEN_GROUP_CREATION_BOARD action with no arguments",
    "lineNumber": 18
  },
  {
    "__docId__": 450,
    "kind": "testDescribe",
    "name": "describe60",
    "testId": 60,
    "memberof": "test/action/groupboards.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/groupboards.test.js~describe60",
    "access": null,
    "description": "closeGroupCreationBoard action creator",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{closeGroupCreationBoard}"
      }
    ],
    "testTargets": [
      "closeGroupCreationBoard"
    ]
  },
  {
    "__docId__": 451,
    "kind": "testIt",
    "name": "it61",
    "testId": 61,
    "memberof": "test/action/groupboards.test.js~describe60",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/groupboards.test.js~describe60.it61",
    "access": null,
    "description": "creates CLOSE_GROUP_CREATION_BOARD with no arguments",
    "lineNumber": 26
  },
  {
    "__docId__": 452,
    "kind": "testDescribe",
    "name": "describe62",
    "testId": 62,
    "memberof": "test/action/groupboards.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/groupboards.test.js~describe62",
    "access": null,
    "description": "openGroupManagementBoard action creator",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{openGroupManagementBoard}"
      }
    ],
    "testTargets": [
      "openGroupManagementBoard"
    ]
  },
  {
    "__docId__": 453,
    "kind": "testIt",
    "name": "it63",
    "testId": 63,
    "memberof": "test/action/groupboards.test.js~describe62",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/groupboards.test.js~describe62.it63",
    "access": null,
    "description": "creates OPEN_GROUP_MANAGEMENT_BOARD action with target group object",
    "lineNumber": 35
  },
  {
    "__docId__": 454,
    "kind": "testDescribe",
    "name": "describe64",
    "testId": 64,
    "memberof": "test/action/groupboards.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/groupboards.test.js~describe64",
    "access": null,
    "description": "closeGroupCreationBoard action creator",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{closeGroupCreationBoard}"
      }
    ],
    "testTargets": [
      "closeGroupCreationBoard"
    ]
  },
  {
    "__docId__": 455,
    "kind": "testIt",
    "name": "it65",
    "testId": 65,
    "memberof": "test/action/groupboards.test.js~describe64",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/groupboards.test.js~describe64.it65",
    "access": null,
    "description": "creates CLOSE_GROUP_MANAGEMENT_BOARD with no arguments",
    "lineNumber": 47
  },
  {
    "__docId__": 456,
    "kind": "testFile",
    "name": "test/action/login.test.js",
    "content": "import assert from 'power-assert';\nimport {LOGIN_REQUESTED,LOGIN_SUCCESS,LOGIN_FAILURE,LOGOUT_REQUESTED} from \"../../src/action/login\";\nimport {loginRequested,loginSuccess,loginFailure,logoutRequested} from \"../../src/action/login\";\n\n/**@test {loginRequested}*/\ndescribe(\"loginRequested action creator\",()=>{\n  //ユーザーが入力したID,Passを使ってLOGIN_REQUESTEDアクションを生成する\n  it(\"creates LOGIN_REQUESTED action with id and password which user input\",()=>{\n    const testId = \"test_id\";\n    const testPass = \"test_pass\";\n\n    const result = loginRequested(testId,testPass);\n    assert(result.type === LOGIN_REQUESTED);\n    assert(result.payload.id === testId);\n    assert(result.payload.pass === testPass);\n  });\n});\n\n/**@test {loginSuccess}*/\ndescribe(\"loginSuccess action creator\",()=>{\n  //ログインしたユーザーの情報を使ってLOGIN_SUCCESSアクションを生成する\n  it(\"creates LOGIN_SUCCESS action with user data of logon user.\",()=>{\n    const userinfo = {\"name\":\"Mike\",\"userid\":\"mike\",\"token\":\"dummy\"};\n\n    const result = loginSuccess(userinfo);\n    assert(result.type === LOGIN_SUCCESS);\n    assert(result.payload.name === userinfo.name);\n    assert(result.payload.userid === userinfo.userid);\n    assert(result.payload.token === userinfo.token);\n  });\n});\n\n/**@test {loginFailure}*/\ndescribe(\"loginFailure action creator\",()=>{\n  //引数を取らずにLOGIN_FAILUREアクションを生成する\n  it(\"creates LOGIN_FAILURE action with no arguments\",()=>{\n    const result = loginFailure();\n    assert(result.type === LOGIN_FAILURE);\n  });\n});\n\n/**@test {logoutRequested}*/\ndescribe(\"logoutRequested action creator\",()=>{\n  //引数を取らずにLOGOUT_REQUESTEDアクションを生成する\n  it(\"creates LOGOUT_REQUESTED action with no arguments\",()=>{\n    const result = logoutRequested();\n    assert(result.type === LOGOUT_REQUESTED);\n  });\n});\n",
    "static": true,
    "longname": "test/action/login.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 457,
    "kind": "testDescribe",
    "name": "describe66",
    "testId": 66,
    "memberof": "test/action/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/login.test.js~describe66",
    "access": null,
    "description": "loginRequested action creator",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loginRequested}"
      }
    ],
    "testTargets": [
      "loginRequested"
    ]
  },
  {
    "__docId__": 458,
    "kind": "testIt",
    "name": "it67",
    "testId": 67,
    "memberof": "test/action/login.test.js~describe66",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/login.test.js~describe66.it67",
    "access": null,
    "description": "creates LOGIN_REQUESTED action with id and password which user input",
    "lineNumber": 8
  },
  {
    "__docId__": 459,
    "kind": "testDescribe",
    "name": "describe68",
    "testId": 68,
    "memberof": "test/action/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/login.test.js~describe68",
    "access": null,
    "description": "loginSuccess action creator",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loginSuccess}"
      }
    ],
    "testTargets": [
      "loginSuccess"
    ]
  },
  {
    "__docId__": 460,
    "kind": "testIt",
    "name": "it69",
    "testId": 69,
    "memberof": "test/action/login.test.js~describe68",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/login.test.js~describe68.it69",
    "access": null,
    "description": "creates LOGIN_SUCCESS action with user data of logon user.",
    "lineNumber": 22
  },
  {
    "__docId__": 461,
    "kind": "testDescribe",
    "name": "describe70",
    "testId": 70,
    "memberof": "test/action/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/login.test.js~describe70",
    "access": null,
    "description": "loginFailure action creator",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loginFailure}"
      }
    ],
    "testTargets": [
      "loginFailure"
    ]
  },
  {
    "__docId__": 462,
    "kind": "testIt",
    "name": "it71",
    "testId": 71,
    "memberof": "test/action/login.test.js~describe70",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/login.test.js~describe70.it71",
    "access": null,
    "description": "creates LOGIN_FAILURE action with no arguments",
    "lineNumber": 36
  },
  {
    "__docId__": 463,
    "kind": "testDescribe",
    "name": "describe72",
    "testId": 72,
    "memberof": "test/action/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/login.test.js~describe72",
    "access": null,
    "description": "logoutRequested action creator",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{logoutRequested}"
      }
    ],
    "testTargets": [
      "logoutRequested"
    ]
  },
  {
    "__docId__": 464,
    "kind": "testIt",
    "name": "it73",
    "testId": 73,
    "memberof": "test/action/login.test.js~describe72",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/login.test.js~describe72.it73",
    "access": null,
    "description": "creates LOGOUT_REQUESTED action with no arguments",
    "lineNumber": 45
  },
  {
    "__docId__": 465,
    "kind": "testFile",
    "name": "test/action/mydestination.test.js",
    "content": "import assert from 'power-assert';\nimport {MY_DESTINATION_CHANGE,MY_DESTINATION_SAVE_COMPLETE} from '../../src/action/mydestination';\nimport {myDestinationChange,myDestinationClear,myDestinationSaveComplete} from '../../src/action/mydestination';\nimport {DEFAULT_MY_DESTINATION} from '../../src/const/mydestination';\n\n/**@test {myDestinationChange}*/\ndescribe(\"myDestinationChange action creator\",()=>{\n  it(\"creates MY_DESTINATION_CHANGE action with inBusiness, comment and contact data which user input\",()=>{\n    const inputData = {\n      inBusiness : true,\n      comment : \"EAST 3F\",\n      contact : \"090-XXX-XXXX\"\n    };\n\n    const result = myDestinationChange(inputData);\n\n    assert(result.type === MY_DESTINATION_CHANGE);\n    assert.deepEqual(result.payload,inputData);\n  });\n});\n\n/**@test {myDestinationClear}*/\ndescribe(\"myDestinationClear action creator\",()=>{\n  it(\"creates MY_DESTINATION_CHANGE action with DEFAULT_MY_DESTINATION\",()=>{\n    const result = myDestinationClear();\n\n    assert(result.type === MY_DESTINATION_CHANGE);\n    assert.deepEqual(result.payload,DEFAULT_MY_DESTINATION);\n  });\n});\n\n/**@test {myDestinationSaveComplete}*/\ndescribe(\"myDestinationSaveComplete action creator\", ()=>{\n  it(\"creates MY_DESTINATION_SAVE_COMPLETE action with inBusiness, comment and contact data\",()=>{\n    const inputData = {\n      inBusiness : true,\n      comment : \"EAST 3F\",\n      contact : \"090-XXX-XXXX\"\n    };\n    const result = myDestinationSaveComplete(inputData);\n\n    assert(result.type === MY_DESTINATION_SAVE_COMPLETE);\n    assert.deepEqual(result.payload,inputData)\n  });\n});\n",
    "static": true,
    "longname": "test/action/mydestination.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 466,
    "kind": "testDescribe",
    "name": "describe74",
    "testId": 74,
    "memberof": "test/action/mydestination.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/mydestination.test.js~describe74",
    "access": null,
    "description": "myDestinationChange action creator",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{myDestinationChange}"
      }
    ],
    "testTargets": [
      "myDestinationChange"
    ]
  },
  {
    "__docId__": 467,
    "kind": "testIt",
    "name": "it75",
    "testId": 75,
    "memberof": "test/action/mydestination.test.js~describe74",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/mydestination.test.js~describe74.it75",
    "access": null,
    "description": "creates MY_DESTINATION_CHANGE action with inBusiness, comment and contact data which user input",
    "lineNumber": 8
  },
  {
    "__docId__": 468,
    "kind": "testDescribe",
    "name": "describe76",
    "testId": 76,
    "memberof": "test/action/mydestination.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/mydestination.test.js~describe76",
    "access": null,
    "description": "myDestinationClear action creator",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{myDestinationClear}"
      }
    ],
    "testTargets": [
      "myDestinationClear"
    ]
  },
  {
    "__docId__": 469,
    "kind": "testIt",
    "name": "it77",
    "testId": 77,
    "memberof": "test/action/mydestination.test.js~describe76",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/mydestination.test.js~describe76.it77",
    "access": null,
    "description": "creates MY_DESTINATION_CHANGE action with DEFAULT_MY_DESTINATION",
    "lineNumber": 24
  },
  {
    "__docId__": 470,
    "kind": "testDescribe",
    "name": "describe78",
    "testId": 78,
    "memberof": "test/action/mydestination.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/mydestination.test.js~describe78",
    "access": null,
    "description": "myDestinationSaveComplete action creator",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{myDestinationSaveComplete}"
      }
    ],
    "testTargets": [
      "myDestinationSaveComplete"
    ]
  },
  {
    "__docId__": 471,
    "kind": "testIt",
    "name": "it79",
    "testId": 79,
    "memberof": "test/action/mydestination.test.js~describe78",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/mydestination.test.js~describe78.it79",
    "access": null,
    "description": "creates MY_DESTINATION_SAVE_COMPLETE action with inBusiness, comment and contact data",
    "lineNumber": 34
  },
  {
    "__docId__": 472,
    "kind": "testFile",
    "name": "test/action/signup.test.js",
    "content": "import assert from 'power-assert';\nimport {SIGNUP_REQUIRED,SIGNUP_SUCCESS,SIGNUP_FAILURE} from '../../src/action/signup';\nimport {signupRequired,signupSucceess,signupFailure} from '../../src/action/signup';\nimport {SIGNUP_FAILURE_REASONS} from '../../src/const/signup';\n\n/**@test {signupRequired}*/\ndescribe(\"signupRequired action creator\",()=>{\n  it(\"creates SIGNUP_REQUIRED action with form data which user input\",()=>{\n    const dummyFormData = {\n      id:\"test\",\n      password:\"pass\",\n      name:\"テスト\"\n    };\n\n    const result = signupRequired(dummyFormData);\n    assert(result.type == SIGNUP_REQUIRED);\n    assert.deepEqual(result.payload,dummyFormData);\n  });\n});\n/**@test {signupSucceess}*/\ndescribe(\"signupSucceess action creator\",()=>{\n  it(\"creates SIGNUP_SUCCESS action with no arguments\",()=>{\n    const result = signupSucceess();\n\n    assert(result.type == SIGNUP_SUCCESS);\n  });\n});\n/**@test {signupFailure}*/\ndescribe(\"signupFailure action creator\",()=>{\n  it(\"creates SIGNUP_FAILURE action with array of SIGNUP_FAILURE_REASONS\",()=>{\n    const dummyErrorReasons = [\n      SIGNUP_FAILURE_REASONS.EMPTY_ID,\n      SIGNUP_FAILURE_REASONS.EMPTY_PASSWORD,\n      SIGNUP_FAILURE_REASONS.EMPTY_NAME\n    ];\n\n    const result = signupFailure(dummyErrorReasons);\n\n    assert(result.type == SIGNUP_FAILURE);\n    assert.deepEqual(result.payload, dummyErrorReasons);\n  });\n});\n",
    "static": true,
    "longname": "test/action/signup.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 473,
    "kind": "testDescribe",
    "name": "describe80",
    "testId": 80,
    "memberof": "test/action/signup.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/signup.test.js~describe80",
    "access": null,
    "description": "signupRequired action creator",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{signupRequired}"
      }
    ],
    "testTargets": [
      "signupRequired"
    ]
  },
  {
    "__docId__": 474,
    "kind": "testIt",
    "name": "it81",
    "testId": 81,
    "memberof": "test/action/signup.test.js~describe80",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/signup.test.js~describe80.it81",
    "access": null,
    "description": "creates SIGNUP_REQUIRED action with form data which user input",
    "lineNumber": 8
  },
  {
    "__docId__": 475,
    "kind": "testDescribe",
    "name": "describe82",
    "testId": 82,
    "memberof": "test/action/signup.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/signup.test.js~describe82",
    "access": null,
    "description": "signupSucceess action creator",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{signupSucceess}"
      }
    ],
    "testTargets": [
      "signupSucceess"
    ]
  },
  {
    "__docId__": 476,
    "kind": "testIt",
    "name": "it83",
    "testId": 83,
    "memberof": "test/action/signup.test.js~describe82",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/signup.test.js~describe82.it83",
    "access": null,
    "description": "creates SIGNUP_SUCCESS action with no arguments",
    "lineNumber": 22
  },
  {
    "__docId__": 477,
    "kind": "testDescribe",
    "name": "describe84",
    "testId": 84,
    "memberof": "test/action/signup.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/signup.test.js~describe84",
    "access": null,
    "description": "signupFailure action creator",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{signupFailure}"
      }
    ],
    "testTargets": [
      "signupFailure"
    ]
  },
  {
    "__docId__": 478,
    "kind": "testIt",
    "name": "it85",
    "testId": 85,
    "memberof": "test/action/signup.test.js~describe84",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/signup.test.js~describe84.it85",
    "access": null,
    "description": "creates SIGNUP_FAILURE action with array of SIGNUP_FAILURE_REASONS",
    "lineNumber": 30
  },
  {
    "__docId__": 479,
    "kind": "testFile",
    "name": "test/action/suggestion.test.js",
    "content": "import assert from 'power-assert';\nimport {SUGGESTION_CHANGE,SUGGESTION_CLEAR} from '../../src/action/suggestion';\nimport {suggestionChange,suggestionClear} from '../../src/action/suggestion';\n\n/**@test {suggestionChange}*/\ndescribe(\"suggestionChange action creator\",()=>{\n  it(\"creates SUGGESTION_CHANGE action with array of suggestion string\",()=>{\n    const suggestion = [\"東銀座\",\"EAST 8F\", \"EAST 3F\", \"宝町\", \"NRI 13F\", \"NRI 12F\"];\n    const result = suggestionChange(suggestion);\n\n    assert(result.type === SUGGESTION_CHANGE);\n    assert.deepEqual(result.payload, suggestion);\n  });\n});\n\n/**@test {suggestionClear}*/\ndescribe(\"suggestionClear action creator\",()=>{\n  it(\"creates SUGGESTION_CLEAR action with no arguments\",()=>{\n    const result = suggestionClear();\n\n    assert(result.type === SUGGESTION_CLEAR);\n  });\n});\n",
    "static": true,
    "longname": "test/action/suggestion.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 480,
    "kind": "testDescribe",
    "name": "describe86",
    "testId": 86,
    "memberof": "test/action/suggestion.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/suggestion.test.js~describe86",
    "access": null,
    "description": "suggestionChange action creator",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{suggestionChange}"
      }
    ],
    "testTargets": [
      "suggestionChange"
    ]
  },
  {
    "__docId__": 481,
    "kind": "testIt",
    "name": "it87",
    "testId": 87,
    "memberof": "test/action/suggestion.test.js~describe86",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/suggestion.test.js~describe86.it87",
    "access": null,
    "description": "creates SUGGESTION_CHANGE action with array of suggestion string",
    "lineNumber": 7
  },
  {
    "__docId__": 482,
    "kind": "testDescribe",
    "name": "describe88",
    "testId": 88,
    "memberof": "test/action/suggestion.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/action/suggestion.test.js~describe88",
    "access": null,
    "description": "suggestionClear action creator",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{suggestionClear}"
      }
    ],
    "testTargets": [
      "suggestionClear"
    ]
  },
  {
    "__docId__": 483,
    "kind": "testIt",
    "name": "it89",
    "testId": 89,
    "memberof": "test/action/suggestion.test.js~describe88",
    "testDepth": 1,
    "static": true,
    "longname": "test/action/suggestion.test.js~describe88.it89",
    "access": null,
    "description": "creates SUGGESTION_CLEAR action with no arguments",
    "lineNumber": 18
  },
  {
    "__docId__": 484,
    "kind": "testFile",
    "name": "test/component/accountboard.test.js",
    "content": "import assert from 'power-assert';\nimport AccountBoard from '../../src/component/accountboard';\nimport {closeAccountInfoModal,changeAccountInfo,changeAccountInfoField} from '../../src/action/accountboard';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {mountWithMUI} from './testutil';\nimport sinon from 'sinon';\nimport TestUtils from 'react-addons-test-utils';\n\n/**@test {AccountBoard}*/\ndescribe(\"<AccountBoard />\",()=>{\n  it(\"renders name and pass textboxes and submit and cancel button if 'open' of accountboard state is true\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      accountboard : {\n        open:true,\n        nextuser:{\n          nextname:\"\",\n          nextpass:\"\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<AccountBoard {...props} />);\n\n    assert(wrapper.ref(\"name\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"pass\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"submit\").find(\"button\").length === 1);\n    assert(wrapper.ref(\"cancel\").find(\"button\").length === 1);\n  });\n\n  it(\"renders no inputs if 'open' of accountboard state is false\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      accountboard : {\n        open:false,\n        nextuser:{\n          nextname:\"\",\n          nextpass:\"\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<AccountBoard {...props} />);\n\n    assert(wrapper.ref(\"name\").find(\"input\").length === 0);\n    assert(wrapper.ref(\"pass\").find(\"input\").length === 0);\n    assert(wrapper.ref(\"submit\").find(\"button\").length === 0);\n    assert(wrapper.ref(\"cancel\").find(\"button\").length === 0);\n  });\n\n  it(\"renders values which are passed as accountboard state\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      accountboard : {\n        open:true,\n        nextuser:{\n          nextname:\"test\",\n          nextpass:\"1q2w3e4r\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<AccountBoard {...props} />);\n\n    assert(wrapper.ref(\"name\").find(\"input\").get(0).value === props.accountboard.nextuser.nextname);\n    assert(wrapper.ref(\"pass\").find(\"input\").get(0).value === props.accountboard.nextuser.nextpass);\n  });\n\n  it(\"dispatches ACCOUNT_INFO_MODAL_CLOSE action when cancel button is clicked\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      accountboard : {\n        open:true,\n        nextuser:{\n          nextname:\"\",\n          nextpass:\"\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<AccountBoard {...props} />);\n\n    const element = wrapper.ref(\"cancel\").find(\"button\");\n    const node  = ReactDOM.findDOMNode(element.node)\n    TestUtils.Simulate.touchTap(node);\n\n    assert(props.dispatch.called);\n    assert.deepEqual(props.dispatch.getCall(0).args[0],closeAccountInfoModal());\n  });\n\n  it(\"dispatches CHANGE_ACCOUNT_INFO_FIELD action with current newname and newpass when value of pass textbox is changed\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      accountboard : {\n        open:true,\n        nextuser:{\n          nextname:\"test\",\n          nextpass:\"\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<AccountBoard {...props} />);\n\n    wrapper.ref(\"pass\").find(\"input\").simulate(\"change\",{target:{value:\"1q2w3e4r\"}});\n\n    assert(props.dispatch.called);\n    assert(props.dispatch.getCall(0).args[0], changeAccountInfoField(\"test\",\"1q2w3e4r\"));\n  });\n\n  it(\"dispatches CHANGE_ACCOUNT_INFO_FIELD action with current newname and newpass when value of pass textbox is changed\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      accountboard : {\n        open:true,\n        nextuser:{\n          nextname:\"test\",\n          nextpass:\"1q2w3e4r\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<AccountBoard {...props} />);\n\n    wrapper.ref(\"name\").find(\"input\").simulate(\"change\",{target:{value:\"test2\"}});\n\n    assert(props.dispatch.called);\n    assert(props.dispatch.getCall(0).args[0], changeAccountInfoField(\"test2\",\"1q2w3e4r\"));\n  });\n\n  it(\"dispatches CHANGE_ACCOUNT_INFO aciton with current newname and newpass when submit button is clicked\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      accountboard : {\n        open:true,\n        nextuser:{\n          nextname:\"test\",\n          nextpass:\"1q2w3e4r\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<AccountBoard {...props} />);\n\n    const element = wrapper.ref(\"submit\").find(\"button\");\n    const node  = ReactDOM.findDOMNode(element.node)\n    TestUtils.Simulate.touchTap(node);\n\n    assert(props.dispatch.called);\n    assert(props.dispatch.getCall(0).args[0], changeAccountInfo(\"test\",\"1q2w3e4r\"));\n  });\n});\n",
    "static": true,
    "longname": "test/component/accountboard.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 485,
    "kind": "testDescribe",
    "name": "describe90",
    "testId": 90,
    "memberof": "test/component/accountboard.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/component/accountboard.test.js~describe90",
    "access": null,
    "description": "<AccountBoard />",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AccountBoard}"
      }
    ],
    "testTargets": [
      "AccountBoard"
    ]
  },
  {
    "__docId__": 486,
    "kind": "testIt",
    "name": "it91",
    "testId": 91,
    "memberof": "test/component/accountboard.test.js~describe90",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/accountboard.test.js~describe90.it91",
    "access": null,
    "description": "renders name and pass textboxes and submit and cancel button if 'open' of accountboard state is true",
    "lineNumber": 12
  },
  {
    "__docId__": 487,
    "kind": "testIt",
    "name": "it92",
    "testId": 92,
    "memberof": "test/component/accountboard.test.js~describe90",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/accountboard.test.js~describe90.it92",
    "access": null,
    "description": "renders no inputs if 'open' of accountboard state is false",
    "lineNumber": 32
  },
  {
    "__docId__": 488,
    "kind": "testIt",
    "name": "it93",
    "testId": 93,
    "memberof": "test/component/accountboard.test.js~describe90",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/accountboard.test.js~describe90.it93",
    "access": null,
    "description": "renders values which are passed as accountboard state",
    "lineNumber": 52
  },
  {
    "__docId__": 489,
    "kind": "testIt",
    "name": "it94",
    "testId": 94,
    "memberof": "test/component/accountboard.test.js~describe90",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/accountboard.test.js~describe90.it94",
    "access": null,
    "description": "dispatches ACCOUNT_INFO_MODAL_CLOSE action when cancel button is clicked",
    "lineNumber": 70
  },
  {
    "__docId__": 490,
    "kind": "testIt",
    "name": "it95",
    "testId": 95,
    "memberof": "test/component/accountboard.test.js~describe90",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/accountboard.test.js~describe90.it95",
    "access": null,
    "description": "dispatches CHANGE_ACCOUNT_INFO_FIELD action with current newname and newpass when value of pass textbox is changed",
    "lineNumber": 92
  },
  {
    "__docId__": 491,
    "kind": "testIt",
    "name": "it96",
    "testId": 96,
    "memberof": "test/component/accountboard.test.js~describe90",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/accountboard.test.js~describe90.it96",
    "access": null,
    "description": "dispatches CHANGE_ACCOUNT_INFO_FIELD action with current newname and newpass when value of pass textbox is changed",
    "lineNumber": 112
  },
  {
    "__docId__": 492,
    "kind": "testIt",
    "name": "it97",
    "testId": 97,
    "memberof": "test/component/accountboard.test.js~describe90",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/accountboard.test.js~describe90.it97",
    "access": null,
    "description": "dispatches CHANGE_ACCOUNT_INFO aciton with current newname and newpass when submit button is clicked",
    "lineNumber": 132
  },
  {
    "__docId__": 493,
    "kind": "testFile",
    "name": "test/component/board.test.js",
    "content": "import assert from \"power-assert\";\nimport Board from \"../../src/component/board\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {mountWithMUI} from './testutil';\n\n/**@test {Board}*/\ndescribe(\"<Board />\",()=>{\n  it(\"renders memberfilter textbox and <MemberRow /> as meny as number of mamberStatus prop\",()=>{\n    const dummyMemberStatus = [\n      {userid:\"testA\",name:\"Aさん\",inBusiness:false,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testB\",name:\"Bさん\",inBusiness:true,comment:\"在宅勤務\",contact:\"090-YYY-YYYY\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testC\",name:\"Cさん\",inBusiness:true,comment:\"京橋\",contact:\"\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testD\",name:\"Dさん\",inBusiness:true,comment:\"自席\",contact:\"090-ZZZZ-ZZZZ\",lastUpdate:\"2017/05/01 10:00:00\"}\n    ];\n\n    const props = {\n      memberStatus:dummyMemberStatus\n    };\n\n    const wrapper = mountWithMUI(<Board {...props} />);\n\n    assert(wrapper.ref(\"memberfilter\").find(\"input\").length === 1);\n    assert(wrapper.find(\"MemberRow\").length === dummyMemberStatus.length);\n  });\n\n  it(\"filters narrows down <MemberRow /> by name which is input at memberfilter textbox\",()=>{\n    const dummyMemberStatus = [\n      {userid:\"testA\",name:\"山田\",inBusiness:false,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testB\",name:\"田中\",inBusiness:true,comment:\"在宅勤務\",contact:\"090-YYY-YYYY\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testC\",name:\"中村\",inBusiness:true,comment:\"京橋\",contact:\"\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testD\",name:\"村田\",inBusiness:true,comment:\"自席\",contact:\"090-ZZZZ-ZZZZ\",lastUpdate:\"2017/05/01 10:00:00\"}\n    ];\n\n    const props = {\n      memberStatus:dummyMemberStatus\n    };\n\n    const wrapper = mountWithMUI(<Board {...props} />);\n\n    wrapper.ref(\"memberfilter\").find(\"input\").simulate(\"change\",{target:{value:\"田\"}});\n    assert(wrapper.find(\"MemberRow\").length === 3);\n    wrapper.ref(\"memberfilter\").find(\"input\").simulate(\"change\",{target:{value:\"中\"}});\n    assert(wrapper.find(\"MemberRow\").length === 2);\n    wrapper.ref(\"memberfilter\").find(\"input\").simulate(\"change\",{target:{value:\"田中\"}});\n    assert(wrapper.find(\"MemberRow\").length === 1);\n    wrapper.ref(\"memberfilter\").find(\"input\").simulate(\"change\",{target:{value:\"鈴木\"}});\n    assert(wrapper.find(\"MemberRow\").length === 0);\n    wrapper.ref(\"memberfilter\").find(\"input\").simulate(\"change\",{target:{value:\"\"}});\n    assert(wrapper.find(\"MemberRow\").length === 4);\n  });\n});\n",
    "static": true,
    "longname": "test/component/board.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 494,
    "kind": "testDescribe",
    "name": "describe98",
    "testId": 98,
    "memberof": "test/component/board.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/component/board.test.js~describe98",
    "access": null,
    "description": "<Board />",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Board}"
      }
    ],
    "testTargets": [
      "Board"
    ]
  },
  {
    "__docId__": 495,
    "kind": "testIt",
    "name": "it99",
    "testId": 99,
    "memberof": "test/component/board.test.js~describe98",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/board.test.js~describe98.it99",
    "access": null,
    "description": "renders memberfilter textbox and <MemberRow /> as meny as number of mamberStatus prop",
    "lineNumber": 9
  },
  {
    "__docId__": 496,
    "kind": "testIt",
    "name": "it100",
    "testId": 100,
    "memberof": "test/component/board.test.js~describe98",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/board.test.js~describe98.it100",
    "access": null,
    "description": "filters narrows down <MemberRow /> by name which is input at memberfilter textbox",
    "lineNumber": 27
  },
  {
    "__docId__": 497,
    "kind": "testFile",
    "name": "test/component/loginform.test.js",
    "content": "import assert from 'power-assert';\nimport LoginForm from '../../src/component/loginform';\nimport {LOGIN_STATUS} from '../../src/const/login';\nimport sinon from 'sinon';\nimport {mount,shallow} from 'enzyme';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {loginRequested} from '../../src/action/login';\nimport {mountWithMUI} from './testutil';\n\n/**@test {LoginForm}*/\ndescribe(\"<LoginForm />\",()=>{\n  //\"userid\",\"password\"テキストボックスとログインボタンを描画する\n  it(\"renders 'userid' textbox, 'password' textbox and one login button\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      login : {status: LOGIN_STATUS.NOTYET}\n    };\n\n    const wrapper = mountWithMUI(<LoginForm {...props} />);\n\n    assert(wrapper.ref(\"userid\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"password\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"loginbutton\").find(\"button\").length === 1);\n\n  });\n  //login statusがLOGIN_STATUS.FAILUREだった場合は、ログイン失敗メッセージを描画する\n  it(\"renders login failure message if login status is LOGIN_STATUS.FAILURE\", ()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      login : {status: LOGIN_STATUS.FAILURE}\n    };\n\n    const wrapper = shallow(<LoginForm {...props} />);\n\n    const loginFailureMessage = \"IDもしくはパスワードが正しくありません\";\n\n    assert(wrapper.text().indexOf(loginFailureMessage) >= 0);\n  });\n\n  //login statusがLOGIN_STATUS.FAILURE以外の場合はログイン失敗メッセージを表示しない\n  it(\"doesn't render login failure message if login status is not LOGIN_STATUS.FAILURE\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      login : {status: LOGIN_STATUS.NOTYET}\n    };\n\n    const wrapper = shallow(<LoginForm {...props} />);\n\n    const loginFailureMessage = \"IDもしくはパスワードが正しくありません\";\n\n    assert(wrapper.text().indexOf(loginFailureMessage) < 0);\n  });\n\n  //useridやpasswordが空の場合は、ログインボタンをクリックしても何のActionもdispatchしない\n  it(\"doesn't dispatch any actions when button is clicked if two textboxes are empty\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      login : {status: LOGIN_STATUS.NOTYET}\n    };\n\n    const wrapper = mountWithMUI(<LoginForm {...props} />);\n    wrapper.ref(\"loginbutton\").find(\"button\").simulate(\"click\");\n    assert(!props.dispatch.called);\n  });\n\n  //useridやpasswordに文字が入力されている場合は、LOGIN_REQUESTEDアクションをdispatchする\n  it(\"dispatches LOGIN_REQUESTED ation when button is clicked if two textboxes are not empty\",()=>{\n    const props = {\n      dispatch : sinon.spy(),\n      login : {status: LOGIN_STATUS.NOTYET}\n    };\n\n    const dummyInputs = {\n      id:\"test\",\n      pass:\"pass\"\n    };\n\n    const wrapper = mountWithMUI(<LoginForm {...props} />);\n\n    wrapper.ref(\"userid\").find(\"input\").simulate(\"change\",{target:{value:dummyInputs.id}});\n    wrapper.ref(\"password\").find(\"input\").simulate(\"change\",{target:{value:dummyInputs.pass}});\n\n\n    wrapper.ref(\"loginbutton\").find(\"button\").simulate(\"click\");\n\n    assert(props.dispatch.called);\n    assert.deepEqual(props.dispatch.getCall(0).args[0],loginRequested(dummyInputs.id,dummyInputs.pass));\n  });\n});\n",
    "static": true,
    "longname": "test/component/loginform.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 498,
    "kind": "testDescribe",
    "name": "describe101",
    "testId": 101,
    "memberof": "test/component/loginform.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/component/loginform.test.js~describe101",
    "access": null,
    "description": "<LoginForm />",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{LoginForm}"
      }
    ],
    "testTargets": [
      "LoginForm"
    ]
  },
  {
    "__docId__": 499,
    "kind": "testIt",
    "name": "it102",
    "testId": 102,
    "memberof": "test/component/loginform.test.js~describe101",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/loginform.test.js~describe101.it102",
    "access": null,
    "description": "renders 'userid' textbox, 'password' textbox and one login button",
    "lineNumber": 14
  },
  {
    "__docId__": 500,
    "kind": "testIt",
    "name": "it103",
    "testId": 103,
    "memberof": "test/component/loginform.test.js~describe101",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/loginform.test.js~describe101.it103",
    "access": null,
    "description": "renders login failure message if login status is LOGIN_STATUS.FAILURE",
    "lineNumber": 28
  },
  {
    "__docId__": 501,
    "kind": "testIt",
    "name": "it104",
    "testId": 104,
    "memberof": "test/component/loginform.test.js~describe101",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/loginform.test.js~describe101.it104",
    "access": null,
    "description": "doesn't render login failure message if login status is not LOGIN_STATUS.FAILURE",
    "lineNumber": 42
  },
  {
    "__docId__": 502,
    "kind": "testIt",
    "name": "it105",
    "testId": 105,
    "memberof": "test/component/loginform.test.js~describe101",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/loginform.test.js~describe101.it105",
    "access": null,
    "description": "doesn't dispatch any actions when button is clicked if two textboxes are empty",
    "lineNumber": 56
  },
  {
    "__docId__": 503,
    "kind": "testIt",
    "name": "it106",
    "testId": 106,
    "memberof": "test/component/loginform.test.js~describe101",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/loginform.test.js~describe101.it106",
    "access": null,
    "description": "dispatches LOGIN_REQUESTED ation when button is clicked if two textboxes are not empty",
    "lineNumber": 68
  },
  {
    "__docId__": 504,
    "kind": "testFile",
    "name": "test/component/memberrow.test.js",
    "content": "import assert from \"power-assert\";\nimport MemberRow from \"../../src/component/memberrow\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {mountWithMUI} from './testutil';\n\n/**@test {MemberRow}*/\ndescribe(\"<MemberRow />\",()=>{\n  it(\"renders name, comment and contact text of member prop\",()=>{\n    const dummyMember = {userid:\"testA\",name:\"山田\",inBusiness:false,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"};\n\n    const props = {\n      member : dummyMember\n    };\n\n    const wrapper = mountWithMUI(<MemberRow {...props} />);\n\n    assert(wrapper.text().indexOf(dummyMember.name) >= 0);\n    assert(wrapper.text().indexOf(dummyMember.comment) >= 0);\n    assert(wrapper.text().indexOf(dummyMember.contact) >= 0);\n  });\n\n  it(\"renders '退' text if inBusiness is false\",()=>{\n    const dummyMember = {userid:\"testA\",name:\"山田\",inBusiness:false,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"};\n\n    const props = {\n      member : dummyMember\n    };\n\n    const wrapper = mountWithMUI(<MemberRow {...props} />);\n\n    assert(wrapper.text().indexOf(\"退\") >= 0);\n  });\n\n  it(\"renders '出' text if inBusiness is true\",()=>{\n    const dummyMember = {userid:\"testA\",name:\"山田\",inBusiness:true,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"};\n\n    const props = {\n      member : dummyMember\n    };\n\n    const wrapper = mountWithMUI(<MemberRow {...props} />);\n\n    assert(wrapper.text().indexOf(\"出\") >= 0);\n  });\n});\n",
    "static": true,
    "longname": "test/component/memberrow.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 505,
    "kind": "testDescribe",
    "name": "describe107",
    "testId": 107,
    "memberof": "test/component/memberrow.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/component/memberrow.test.js~describe107",
    "access": null,
    "description": "<MemberRow />",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{MemberRow}"
      }
    ],
    "testTargets": [
      "MemberRow"
    ]
  },
  {
    "__docId__": 506,
    "kind": "testIt",
    "name": "it108",
    "testId": 108,
    "memberof": "test/component/memberrow.test.js~describe107",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/memberrow.test.js~describe107.it108",
    "access": null,
    "description": "renders name, comment and contact text of member prop",
    "lineNumber": 9
  },
  {
    "__docId__": 507,
    "kind": "testIt",
    "name": "it109",
    "testId": 109,
    "memberof": "test/component/memberrow.test.js~describe107",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/memberrow.test.js~describe107.it109",
    "access": null,
    "description": "renders '退' text if inBusiness is false",
    "lineNumber": 23
  },
  {
    "__docId__": 508,
    "kind": "testIt",
    "name": "it110",
    "testId": 110,
    "memberof": "test/component/memberrow.test.js~describe107",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/memberrow.test.js~describe107.it110",
    "access": null,
    "description": "renders '出' text if inBusiness is true",
    "lineNumber": 35
  },
  {
    "__docId__": 509,
    "kind": "testFile",
    "name": "test/component/mydestination.test.js",
    "content": "import assert from 'power-assert';\nimport MyDestination from '../../src/component/mydestination';\nimport {myDestinationChange,myDestinationClear} from '../../src/action/mydestination';\nimport {shallow} from 'enzyme';\nimport sinon from 'sinon';\nimport {mountWithMUI} from \"./testutil\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {DEFAULT_MY_DESTINATION} from '../../src/const/mydestination';\nimport {LOGIN_STATUS} from '../../src/const/login';\n\n/**@test {MyDestination}*/\ndescribe(\"<MyDestination />\",()=>{\n  it(\"renders in_business toggle, comment and contact textboxes and clear button\",()=>{\n    const props = {\n      dispatch:sinon.spy(),\n      mydestination:DEFAULT_MY_DESTINATION,\n      login:{\n        status:LOGIN_STATUS.SUCCESS,\n        user:{\n          id:\"test\",\n          name:\"テスト\",\n          token:\"dummy\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<MyDestination {...props} />);\n\n    assert(wrapper.ref(\"in_business\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"comment\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"clear_button\").find(\"button\").length === 1);\n    assert(wrapper.ref(\"contact\").find(\"input\").length === 1);\n  });\n\n  it(\"dispatches MY_DESTINATION_CHANGE action if in_business is toggled\",()=>{\n    const props = {\n      dispatch:sinon.spy(),\n      mydestination:DEFAULT_MY_DESTINATION,\n      login:{\n        status:LOGIN_STATUS.SUCCESS,\n        user:{\n          id:\"test\",\n          name:\"テスト\",\n          token:\"dummy\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<MyDestination {...props} />);\n\n    wrapper.ref(\"in_business\").find(\"input\").simulate(\"change\",{target:{checked:true}});\n\n    assert(props.dispatch.called);\n    assert(props.dispatch.getCall(0).args[0],myDestinationChange({\n      inBusiness:!DEFAULT_MY_DESTINATION.inBusiness,\n      comment:DEFAULT_MY_DESTINATION.comment,\n      contact:DEFAULT_MY_DESTINATION.contact\n    }));\n  });\n\n  it(\"dispatches MY_DESTINATION_CHANGE action if comment is changed\",()=>{\n    const props = {\n      dispatch:sinon.spy(),\n      mydestination:DEFAULT_MY_DESTINATION,\n      login:{\n        status:LOGIN_STATUS.SUCCESS,\n        user:{\n          id:\"test\",\n          name:\"テスト\",\n          token:\"dummy\"\n        }\n      }\n    };\n\n    const nextComment = \"EAST3F\";\n\n    const wrapper = mountWithMUI(<MyDestination {...props} />);\n\n    wrapper.ref(\"comment\").find(\"input\").simulate(\"change\",{target:{value:nextComment}});\n    wrapper.ref(\"comment\").find(\"input\").simulate(\"blur\");\n\n    assert(props.dispatch.called);\n    assert(props.dispatch.getCall(0).args[0],myDestinationChange({\n      inBusiness:DEFAULT_MY_DESTINATION.inBusiness,\n      comment:nextComment,\n      contact:DEFAULT_MY_DESTINATION.contact\n    }));\n  });\n\n  it(\"dispatches MY_DESTINATION_CHANGE action if contact is changed\",()=>{\n    const props = {\n      dispatch:sinon.spy(),\n      mydestination:DEFAULT_MY_DESTINATION,\n      login:{\n        status:LOGIN_STATUS.SUCCESS,\n        user:{\n          id:\"test\",\n          name:\"テスト\",\n          token:\"dummy\"\n        }\n      }\n    };\n\n    const nextContact = \"090-XXXX-XXXX\";\n\n    const wrapper = mountWithMUI(<MyDestination {...props} />);\n\n    wrapper.ref(\"contact\").find(\"input\").simulate(\"change\",{target:{value:nextContact}});\n\n    assert(props.dispatch.called);\n    assert(props.dispatch.getCall(0).args[0],myDestinationChange({\n      inBusiness:DEFAULT_MY_DESTINATION.inBusiness,\n      comment:DEFAULT_MY_DESTINATION.comment,\n      contact:nextContact\n    }));\n  });\n\n  it(\"renders values which is passed as mydestination state\",()=>{\n    const myDestinationState = {\n      inBusiness:true,\n      comment:\"EAST3F\",\n      contact:\"090-XXX-XXXX\",\n      suggestion:DEFAULT_MY_DESTINATION.suggestion\n    };\n\n    const props = {\n      dispatch:sinon.spy(),\n      mydestination:myDestinationState,\n      login:{\n        status:LOGIN_STATUS.SUCCESS,\n        user:{\n          id:\"test\",\n          name:\"テスト\",\n          token:\"dummy\"\n        }\n      }\n    };\n\n    const wrapper = mountWithMUI(<MyDestination {...props} />);\n\n    assert(wrapper.ref(\"in_business\").find(\"input\").get(0).checked);\n    assert(wrapper.ref(\"comment\").find(\"input\").get(0).value === myDestinationState.comment);\n    assert(wrapper.ref(\"contact\").find(\"input\").get(0).value === myDestinationState.contact);\n  });\n});\n",
    "static": true,
    "longname": "test/component/mydestination.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 510,
    "kind": "testDescribe",
    "name": "describe111",
    "testId": 111,
    "memberof": "test/component/mydestination.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/component/mydestination.test.js~describe111",
    "access": null,
    "description": "<MyDestination />",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{MyDestination}"
      }
    ],
    "testTargets": [
      "MyDestination"
    ]
  },
  {
    "__docId__": 511,
    "kind": "testIt",
    "name": "it112",
    "testId": 112,
    "memberof": "test/component/mydestination.test.js~describe111",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/mydestination.test.js~describe111.it112",
    "access": null,
    "description": "renders in_business toggle, comment and contact textboxes and clear button",
    "lineNumber": 14
  },
  {
    "__docId__": 512,
    "kind": "testIt",
    "name": "it113",
    "testId": 113,
    "memberof": "test/component/mydestination.test.js~describe111",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/mydestination.test.js~describe111.it113",
    "access": null,
    "description": "dispatches MY_DESTINATION_CHANGE action if in_business is toggled",
    "lineNumber": 36
  },
  {
    "__docId__": 513,
    "kind": "testIt",
    "name": "it114",
    "testId": 114,
    "memberof": "test/component/mydestination.test.js~describe111",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/mydestination.test.js~describe111.it114",
    "access": null,
    "description": "dispatches MY_DESTINATION_CHANGE action if comment is changed",
    "lineNumber": 62
  },
  {
    "__docId__": 514,
    "kind": "testIt",
    "name": "it115",
    "testId": 115,
    "memberof": "test/component/mydestination.test.js~describe111",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/mydestination.test.js~describe111.it115",
    "access": null,
    "description": "dispatches MY_DESTINATION_CHANGE action if contact is changed",
    "lineNumber": 91
  },
  {
    "__docId__": 515,
    "kind": "testIt",
    "name": "it116",
    "testId": 116,
    "memberof": "test/component/mydestination.test.js~describe111",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/mydestination.test.js~describe111.it116",
    "access": null,
    "description": "renders values which is passed as mydestination state",
    "lineNumber": 119
  },
  {
    "__docId__": 516,
    "kind": "testFile",
    "name": "test/component/signupform.test.js",
    "content": "import assert from 'power-assert';\nimport SignUpForm from '../../src/component/signupform';\nimport {signupFailure,signupRequired} from '../../src/action/signup';\nimport {SIGNUP_FAILURE_REASONS, SIGNUP_VALIDATION_ERROR_MESSAGES} from '../../src/const/signup';\nimport sinon from 'sinon';\nimport {shallow} from 'enzyme';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {mountWithMUI} from './testutil';\n\nconst validationConditions = [\n  {\n    expect: [SIGNUP_FAILURE_REASONS.INVALID_CONFIRM],\n    form : {\n      id:\"test_id\",\n      pass:\"1q2w3e4r\",\n      pass_confirm:\"1q2w3e4\",\n      name:\"単体テスト\"\n    }\n  },\n  {\n    expect: [SIGNUP_FAILURE_REASONS.EMPTY_ID],\n    form : {\n      id:\"\",\n      pass:\"1q2w3e4r\",\n      pass_confirm:\"1q2w3e4r\",\n      name:\"単体テスト\"\n    }\n  },\n  {\n    expect: [SIGNUP_FAILURE_REASONS.EMPTY_PASSWORD],\n    form : {\n      id:\"test_id\",\n      pass:\"\",\n      pass_confirm:\"\",\n      name:\"単体テスト\"\n    }\n  },\n  {\n    expect: [SIGNUP_FAILURE_REASONS.EMPTY_NAME],\n    form : {\n      id:\"test_id\",\n      pass:\"1q2w3e4r\",\n      pass_confirm:\"1q2w3e4r\",\n      name:\"\"\n    }\n  },\n  {\n    expect: [SIGNUP_FAILURE_REASONS.POLICY_PASSWORD],\n    form : {\n      id:\"test_id\",\n      pass:\"1q2w3e4\",\n      pass_confirm:\"1q2w3e4\",\n      name:\"単体テスト\"\n    }\n  },\n  {\n    expect: [SIGNUP_FAILURE_REASONS.POLICY_PASSWORD],\n    form : {\n      id:\"test_id\",\n      pass:\"aaaaaaaa\",\n      pass_confirm:\"aaaaaaaa\",\n      name:\"単体テスト\"\n    }\n  },\n  {\n    expect: [SIGNUP_FAILURE_REASONS.POLICY_PASSWORD],\n    form : {\n      id:\"test_id\",\n      pass:\"11111111\",\n      pass_confirm:\"11111111\",\n      name:\"単体テスト\"\n    }\n  },\n  {\n    expect: [SIGNUP_FAILURE_REASONS.EMPTY_ID,SIGNUP_FAILURE_REASONS.EMPTY_PASSWORD,SIGNUP_FAILURE_REASONS.EMPTY_NAME],\n    form : {\n      id:\"\",\n      pass:\"\",\n      pass_confirm:\"\",\n      name:\"\"\n    }\n  },\n];\n\n/**@test {SignUpForm}*/\ndescribe(\"<SignUpForm />\",()=>{\n  //id,pass,pass_confirm,nameというテキストボックスとsign upボタンを描画する\n  it(\"renders id,pass,pass_confirm,name textboxes and sign up button\",()=>{\n    const props = {\n      dispatch:sinon.spy(),\n      signup:{\n        failure_reason:[]\n      }\n    };\n\n    const wrapper = mountWithMUI(<SignUpForm {...props} />);\n\n    assert(wrapper.ref(\"id\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"pass\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"pass_confirm\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"name\").find(\"input\").length === 1);\n    assert(wrapper.ref(\"signup\").find(\"button\").length === 1);\n  });\n  //failure_reasonがなければバリデーションエラーメッセージを何も描画しない\n  it(\"doesn't render any validation error messages if failure_reason is empty array.\",()=>{\n    const props = {\n      dispatch:sinon.spy(),\n      signup:{\n        failure_reason:[]\n      }\n    };\n\n    const wrapper = shallow(<SignUpForm {...props} />);\n\n    SIGNUP_VALIDATION_ERROR_MESSAGES.forEach(m => {\n      assert(wrapper.text().indexOf(m.msg) < 0);\n    });\n  });\n  //failure_reasonに応じたバリデーションエラーメッセージを描画する\n  it(\"renders each validation error messages of failure_reason\",()=>{\n    SIGNUP_VALIDATION_ERROR_MESSAGES.forEach(m =>{\n      const props = {\n        dispatch:sinon.spy(),\n        signup:{\n          failure_reason:[m.reason]\n        }\n      };\n\n      const wrapper = shallow(<SignUpForm {...props} />);\n\n      assert(wrapper.text().indexOf(m.msg) >= 0);\n    });\n  });\n  //failure_reasonが複数あれば、複数のバリデーションエラーメッセージを描画する\n  it(\"renders multipul validation error messages if failure_reason has multipul reasons\",()=>{\n    const messages = SIGNUP_VALIDATION_ERROR_MESSAGES.filter(m => m.reason == (SIGNUP_FAILURE_REASONS.EMPTY_ID || SIGNUP_FAILURE_REASONS.EMPTY_PASSWORD));\n    const props = {\n      dispatch:sinon.spy(),\n      signup:{\n        failure_reason:messages.map(m=>m.reason)\n      }\n    };\n\n    const wrapper = shallow(<SignUpForm {...props} />);\n\n    messages.forEach(m => {\n      assert(wrapper.text().indexOf(m.msg) >= 0);\n    });\n  });\n  //すべての画面サイドバリデーションが通った場合、SIGNUP_REQUIREDアクションをdispatchする\n  it(\"dispatches SIGNUP_REQUIRED action if all display side validations are passed\",()=>{\n    const formInput = {\n      id:\"test_id\",\n      pass:\"1q2w3e4r\",\n      pass_confirm:\"1q2w3e4r\",\n      name:\"単体テスト\"\n    };\n\n    const props = {\n      dispatch:sinon.spy(),\n      signup:{\n        failure_reason:[]\n      }\n    };\n\n    const wrapper = mountWithMUI(<SignUpForm {...props} />);\n\n    Object.keys(formInput).forEach(k =>{\n      wrapper.ref(k).find(\"input\").simulate(\"change\",{target:{value:formInput[k]}});\n    });\n\n    wrapper.ref(\"signup\").find(\"button\").simulate(\"click\");\n\n    assert(props.dispatch.called);\n    assert.deepEqual(props.dispatch.getCall(0).args[0],signupRequired({id:formInput.id,password:formInput.pass,name:formInput.name}));\n  });\n\n  //画面バリデーションが１つでも通らない場合はSIGNUP_FAILUREアクションをdispatchする\n  it(\"dispatches SIGNUP_FAILURE action if some display validations is not passed\",()=>{\n    const formInput = {\n      id:\"test_id\",\n      pass:\"1q2w3e4r\",\n      pass_confirm:\"1q2w3e4r\",\n      name:\"\"\n    };\n\n    const props = {\n      dispatch:sinon.spy(),\n      signup:{\n        failure_reason:[]\n      }\n    };\n\n    const wrapper = mountWithMUI(<SignUpForm {...props} />);\n\n    Object.keys(formInput).forEach(k =>{\n      wrapper.ref(k).find(\"input\").simulate(\"change\",{target:{value:formInput[k]}});\n    });\n\n    wrapper.ref(\"signup\").find(\"button\").simulate(\"click\");\n\n    assert(props.dispatch.called);\n    assert.deepEqual(props.dispatch.getCall(0).args[0],signupFailure([SIGNUP_FAILURE_REASONS.EMPTY_NAME]));\n  });\n\n  //画面サイドバリデーションが失敗した理由に応じてSIGNUP_FAILUREの引数に渡すSIGNUP_FAILURE_REASONSを決める\n  it(\"dispatches SIGNUP_FAILURE action with each SIGNUP_FAILURE_REASONS of reasons why display side validation is not passed\",()=>{\n    validationConditions.forEach(cond =>{\n      const props = {\n        dispatch:sinon.spy(),\n        signup:{\n          failure_reason:[]\n        }\n      };\n\n      const wrapper = mountWithMUI(<SignUpForm {...props} />);\n\n      Object.keys(cond.form).forEach(k =>{\n        wrapper.ref(k).find(\"input\").simulate(\"change\",{target:{value:cond.form[k]}});\n      });\n\n      wrapper.ref(\"signup\").find(\"button\").simulate(\"click\");\n\n      assert(props.dispatch.called);\n      assert.deepEqual(props.dispatch.getCall(0).args[0],signupFailure(cond.expect));\n    });\n  });\n});\n",
    "static": true,
    "longname": "test/component/signupform.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 517,
    "kind": "testDescribe",
    "name": "describe117",
    "testId": 117,
    "memberof": "test/component/signupform.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/component/signupform.test.js~describe117",
    "access": null,
    "description": "<SignUpForm />",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{SignUpForm}"
      }
    ],
    "testTargets": [
      "SignUpForm"
    ]
  },
  {
    "__docId__": 518,
    "kind": "testIt",
    "name": "it118",
    "testId": 118,
    "memberof": "test/component/signupform.test.js~describe117",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/signupform.test.js~describe117.it118",
    "access": null,
    "description": "renders id,pass,pass_confirm,name textboxes and sign up button",
    "lineNumber": 89
  },
  {
    "__docId__": 519,
    "kind": "testIt",
    "name": "it119",
    "testId": 119,
    "memberof": "test/component/signupform.test.js~describe117",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/signupform.test.js~describe117.it119",
    "access": null,
    "description": "doesn't render any validation error messages if failure_reason is empty array.",
    "lineNumber": 106
  },
  {
    "__docId__": 520,
    "kind": "testIt",
    "name": "it120",
    "testId": 120,
    "memberof": "test/component/signupform.test.js~describe117",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/signupform.test.js~describe117.it120",
    "access": null,
    "description": "renders each validation error messages of failure_reason",
    "lineNumber": 121
  },
  {
    "__docId__": 521,
    "kind": "testIt",
    "name": "it121",
    "testId": 121,
    "memberof": "test/component/signupform.test.js~describe117",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/signupform.test.js~describe117.it121",
    "access": null,
    "description": "renders multipul validation error messages if failure_reason has multipul reasons",
    "lineNumber": 136
  },
  {
    "__docId__": 522,
    "kind": "testIt",
    "name": "it122",
    "testId": 122,
    "memberof": "test/component/signupform.test.js~describe117",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/signupform.test.js~describe117.it122",
    "access": null,
    "description": "dispatches SIGNUP_REQUIRED action if all display side validations are passed",
    "lineNumber": 152
  },
  {
    "__docId__": 523,
    "kind": "testIt",
    "name": "it123",
    "testId": 123,
    "memberof": "test/component/signupform.test.js~describe117",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/signupform.test.js~describe117.it123",
    "access": null,
    "description": "dispatches SIGNUP_FAILURE action if some display validations is not passed",
    "lineNumber": 180
  },
  {
    "__docId__": 524,
    "kind": "testIt",
    "name": "it124",
    "testId": 124,
    "memberof": "test/component/signupform.test.js~describe117",
    "testDepth": 1,
    "static": true,
    "longname": "test/component/signupform.test.js~describe117.it124",
    "access": null,
    "description": "dispatches SIGNUP_FAILURE action with each SIGNUP_FAILURE_REASONS of reasons why display side validation is not passed",
    "lineNumber": 208
  },
  {
    "__docId__": 525,
    "kind": "testFile",
    "name": "test/reducer/accountboard.test.js",
    "content": "import assert from 'power-assert';\nimport accountboard from '../../src/reducer/accountboard';\nimport {ACCOUNT_INFO_MODAL_OPEN,ACCOUNT_INFO_MODAL_CLOSE,CHANGE_ACCOUNT_INFO,CHANGE_ACCOUNT_INFO_FIELD} from '../../src/action/accountboard';\n\ndescribe(\"accountboard reducer\",()=>{\n  it(\"turns open of accountboard state into true and clears nextuser if ACCOUNT_INFO_MODAL_OPEN action is passed\",()=>{\n    const initialState = {\n      open : false,\n      nextuser : {\n        nextname:\"test\",\n        nextpass:\"test\"\n      }\n    };\n\n    const dummyAction = {\n      type:ACCOUNT_INFO_MODAL_OPEN,\n    };\n\n    const result = accountboard(initialState,dummyAction);\n\n    assert(result.open === true);\n    assert.deepEqual(result.nextuser, {});\n  });\n\n  it(\"turns open of accountboard state into false and clears nextuser if ACCOUNT_INFO_MODAL_CLOSE action is passed\",()=>{\n    const initialState = {\n      open : true,\n      nextuser : {\n        nextname:\"test\",\n        nextpass:\"test\"\n      }\n    };\n\n    const dummyAction = {\n      type:ACCOUNT_INFO_MODAL_CLOSE,\n    };\n\n    const result = accountboard(initialState,dummyAction);\n\n    assert(result.open === false);\n    assert.deepEqual(result.nextuser, {});\n  });\n\n  it(\"turns open of accountboard state into false and clears nextuser if CHANGE_ACCOUNT_INFO action is passed\",()=>{\n    const initialState = {\n      open : true,\n      nextuser : {\n        nextname:\"test\",\n        nextpass:\"test\"\n      }\n    };\n\n    const dummyAction = {\n      type:CHANGE_ACCOUNT_INFO,\n      payload:{\n        nextname:\"test\",\n        nextpass:\"test\"\n      }\n    };\n\n    const result = accountboard(initialState,dummyAction);\n\n    assert(result.open === false);\n    assert.deepEqual(result.nextuser, {});\n  });\n\n  it(\"changes nextuser of accountboard state and turns open to true\",()=>{\n    const initialState = {\n      open : false,\n      nextuser : {\n        nextname:\"test\",\n        nextpass:\"test\"\n      }\n    };\n\n    const dummyAction = {\n      type:CHANGE_ACCOUNT_INFO_FIELD,\n      payload:{\n        nextname:\"test2\",\n        nextpass:\"test2\"\n      }\n    };\n\n    const result = accountboard(initialState,dummyAction);\n\n    assert(result.nextuser.nextname === dummyAction.payload.nextname);\n    assert(result.nextuser.nextpass === dummyAction.payload.nextpass);\n    assert(result.open === true);\n  });\n\n  it(\"does nothing if any other action is passed\",()=>{\n    const initialState = {\n      open : false,\n      nextuser : {\n        nextname:\"test\",\n        nextpass:\"test\"\n      }\n    };\n\n    const dummyAction = {\n      type:\"DUMMY_ACTION_NAME\",\n      payload:{\n        nextname:\"test2\",\n        nextpass:\"test2\"\n      }\n    };\n\n    const result = accountboard(initialState,dummyAction);\n\n    assert(result.nextuser.nextname === initialState.nextuser.nextname);\n    assert(result.nextuser.nextpass === initialState.nextuser.nextpass);\n    assert(result.open === initialState.open);\n  });\n});\n",
    "static": true,
    "longname": "test/reducer/accountboard.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 526,
    "kind": "testDescribe",
    "name": "describe125",
    "testId": 125,
    "memberof": "test/reducer/accountboard.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/reducer/accountboard.test.js~describe125",
    "access": null,
    "description": "accountboard reducer",
    "lineNumber": 5
  },
  {
    "__docId__": 527,
    "kind": "testIt",
    "name": "it126",
    "testId": 126,
    "memberof": "test/reducer/accountboard.test.js~describe125",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/accountboard.test.js~describe125.it126",
    "access": null,
    "description": "turns open of accountboard state into true and clears nextuser if ACCOUNT_INFO_MODAL_OPEN action is passed",
    "lineNumber": 6
  },
  {
    "__docId__": 528,
    "kind": "testIt",
    "name": "it127",
    "testId": 127,
    "memberof": "test/reducer/accountboard.test.js~describe125",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/accountboard.test.js~describe125.it127",
    "access": null,
    "description": "turns open of accountboard state into false and clears nextuser if ACCOUNT_INFO_MODAL_CLOSE action is passed",
    "lineNumber": 25
  },
  {
    "__docId__": 529,
    "kind": "testIt",
    "name": "it128",
    "testId": 128,
    "memberof": "test/reducer/accountboard.test.js~describe125",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/accountboard.test.js~describe125.it128",
    "access": null,
    "description": "turns open of accountboard state into false and clears nextuser if CHANGE_ACCOUNT_INFO action is passed",
    "lineNumber": 44
  },
  {
    "__docId__": 530,
    "kind": "testIt",
    "name": "it129",
    "testId": 129,
    "memberof": "test/reducer/accountboard.test.js~describe125",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/accountboard.test.js~describe125.it129",
    "access": null,
    "description": "changes nextuser of accountboard state and turns open to true",
    "lineNumber": 67
  },
  {
    "__docId__": 531,
    "kind": "testIt",
    "name": "it130",
    "testId": 130,
    "memberof": "test/reducer/accountboard.test.js~describe125",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/accountboard.test.js~describe125.it130",
    "access": null,
    "description": "does nothing if any other action is passed",
    "lineNumber": 91
  },
  {
    "__docId__": 532,
    "kind": "testFile",
    "name": "test/reducer/board.test.js",
    "content": "import assert from 'power-assert';\nimport board from '../../src/reducer/board';\nimport {UPDATE_MEMBER_STATUS} from '../../src/action/board';\n\n/**@test {board}*/\ndescribe(\"board reducer\",()=>{\n  it(\"changes memberStatus of board state into payload of the action if UPDATE_MEMBER_STATUS action is passed\",()=>{\n    const initialState = {\n      memberStatus:[\n        {userid:\"testA\",name:\"Aさん\",inBusiness:true,comment:\"自席\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 09:00:00\"},\n        {userid:\"testB\",name:\"Bさん\",inBusiness:false,comment:\"\",contact:\"090-YYY-YYYY\",lastUpdate:\"2017/05/01 09:00:00\"},\n        {userid:\"testC\",name:\"Cさん\",inBusiness:true,comment:\"京橋\",contact:\"\",lastUpdate:\"2017/05/01 09:00:00\"}\n      ]\n    };\n\n    const dummyAction = {\n      type:UPDATE_MEMBER_STATUS,\n      payload:[\n        {userid:\"testA\",name:\"Aさん\",inBusiness:false,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"},\n        {userid:\"testB\",name:\"Bさん\",inBusiness:true,comment:\"在宅勤務\",contact:\"090-YYY-YYYY\",lastUpdate:\"2017/05/01 10:00:00\"},\n        {userid:\"testC\",name:\"Cさん\",inBusiness:true,comment:\"京橋\",contact:\"\",lastUpdate:\"2017/05/01 10:00:00\"},\n        {userid:\"testD\",name:\"Dさん\",inBusiness:true,comment:\"自席\",contact:\"090-ZZZZ-ZZZZ\",lastUpdate:\"2017/05/01 10:00:00\"}\n      ]\n    };\n\n    const result = board(initialState,dummyAction);\n\n    assert.deepEqual(result.memberStatus,dummyAction.payload);\n  });\n\n  it(\"does nothing if any other action is passed\",()=>{\n    const initialState = {\n      memberStatus:[\n        {userid:\"testA\",name:\"Aさん\",inBusiness:true,comment:\"自席\",contact:\"090-XXX-XXXX\"},\n        {userid:\"testB\",name:\"Bさん\",inBusiness:false,comment:\"\",contact:\"090-YYY-YYYY\"},\n        {userid:\"testC\",name:\"Cさん\",inBusiness:true,comment:\"京橋\",contact:\"\"}\n      ]\n    };\n\n    const dummyAction = {\n      type:\"DUMMY_ACTION_NAME\",\n    };\n\n    const result = board(initialState,dummyAction);\n\n    assert.deepEqual(result,initialState);\n  });\n});\n",
    "static": true,
    "longname": "test/reducer/board.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 533,
    "kind": "testDescribe",
    "name": "describe131",
    "testId": 131,
    "memberof": "test/reducer/board.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/reducer/board.test.js~describe131",
    "access": null,
    "description": "board reducer",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{board}"
      }
    ],
    "testTargets": [
      "board"
    ]
  },
  {
    "__docId__": 534,
    "kind": "testIt",
    "name": "it132",
    "testId": 132,
    "memberof": "test/reducer/board.test.js~describe131",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/board.test.js~describe131.it132",
    "access": null,
    "description": "changes memberStatus of board state into payload of the action if UPDATE_MEMBER_STATUS action is passed",
    "lineNumber": 7
  },
  {
    "__docId__": 535,
    "kind": "testIt",
    "name": "it133",
    "testId": 133,
    "memberof": "test/reducer/board.test.js~describe131",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/board.test.js~describe131.it133",
    "access": null,
    "description": "does nothing if any other action is passed",
    "lineNumber": 31
  },
  {
    "__docId__": 536,
    "kind": "testFile",
    "name": "test/reducer/group.test.js",
    "content": "import assert from 'power-assert';\nimport group from '../../src/reducer/group';\nimport {GROUPS_LOADED,GROUP_MEMBER_LOADED} from '../../src/action/group';\nimport {groupsLoaded,groupMemberLoaded} from '../../src/action/group';\nimport {getGroupById} from '../../src/module/group';\n\n/**@test {group} */\ndescribe(\"group reducer\",()=>{\n  it(\"marges group information if GROUPS_LOADED action is passed\",()=>{\n    const dummyCurrentState = {\n      allGroups:[\n        {\n          \"id\": \"g0001\",\n          \"name\": \"groupname1\",\n          \"admin\": [\n            \"userid1\",\n            \"userid2\"\n          ]\n        },\n        {\n          \"id\": \"g0002\",\n          \"name\": \"groupname2\",\n          \"admin\": [\n            \"userid3\"\n          ]\n        }\n      ],\n      userGroups:[]\n    };\n\n    const dummyGroupInfo = [\n      {\n        \"id\": \"g0001\",\n        \"name\": \"groupname1\",\n        \"admin\": [\n          \"userid1\",\n          \"userid2\"\n        ]\n      },\n      {\n        \"id\": \"g0002\",\n        \"name\": \"groupname2 updated\",\n        \"admin\": [\n          \"userid3\",\n          \"userid4\"\n        ]\n      },\n      {\n        \"id\": \"g0003\",\n        \"name\": \"groupname3\",\n        \"admin\": [\n          \"userid1\",\n          \"userid3\"\n        ]\n      }\n    ];\n\n    const dummyLogonUserId = \"userid3\";\n\n    const dummyAction = groupsLoaded(dummyGroupInfo,dummyLogonUserId);\n\n    const result = group(dummyCurrentState,dummyAction);\n\n    assert(result.allGroups.length === 3);\n    assert(getGroupById(result.allGroups, \"g0002\").name === \"groupname2 updated\");\n    assert(getGroupById(result.allGroups, \"g0002\").admin.indexOf(\"userid4\") >= 0);\n    assert(getGroupById(result.allGroups, \"g0003\").name === \"groupname3\");\n    assert(getGroupById(result.allGroups, \"g0003\").admin.indexOf(\"userid1\") >= 0);\n    assert(getGroupById(result.allGroups, \"g0003\").admin.indexOf(\"userid3\") >= 0);\n  });\n\n  it(\"doesn't update members of current group if GROUPS_LOADED action is passed\",()=>{\n    const dummyCurrentState = {\n      allGroups:[\n        {\n          \"id\": \"g0001\",\n          \"name\": \"groupname1\",\n          \"admin\": [\n            \"userid1\",\n            \"userid2\"\n          ],\n          \"members\": [\n            \"userid1\",\n            \"userid2\",\n            \"userid5\"\n          ]\n        },\n        {\n          \"id\": \"g0002\",\n          \"name\": \"groupname2\",\n          \"admin\": [\n            \"userid3\"\n          ]\n        }\n      ],\n      userGroups:[]\n    };\n\n    const dummyGroupInfo = [\n      {\n        \"id\": \"g0001\",\n        \"name\": \"groupname1\",\n        \"admin\": [\n          \"userid1\",\n          \"userid2\"\n        ]\n      },\n      {\n        \"id\": \"g0002\",\n        \"name\": \"groupname2 updated\",\n        \"admin\": [\n          \"userid3\",\n          \"userid4\"\n        ]\n      },\n      {\n        \"id\": \"g0003\",\n        \"name\": \"groupname3\",\n        \"admin\": [\n          \"userid1\",\n          \"userid3\"\n        ]\n      }\n    ];\n\n    const dummyLogonUserId = \"userid3\";\n\n    const dummyAction = groupsLoaded(dummyGroupInfo,dummyLogonUserId);\n\n    const result = group(dummyCurrentState,dummyAction);\n\n    assert(result.allGroups.length === 3);\n    assert(getGroupById(result.allGroups,\"g0001\").members);\n    assert(getGroupById(result.allGroups,\"g0001\").members.length);\n    assert(getGroupById(result.allGroups,\"g0001\").members.indexOf(\"userid1\") >= 0);\n    assert(getGroupById(result.allGroups,\"g0001\").members.indexOf(\"userid2\") >= 0);\n    assert(getGroupById(result.allGroups,\"g0001\").members.indexOf(\"userid5\") >= 0);\n  });\n\n  it(\"deletes groups which aren't in new array if GROUPS_LOADED is passed\",()=>{\n    const dummyCurrentState = {\n      allGroups:[\n        {\n          \"id\": \"g0001\",\n          \"name\": \"groupname1\",\n          \"admin\": [\n            \"userid1\",\n            \"userid2\"\n          ]\n        },\n        {\n          \"id\": \"g0002\",\n          \"name\": \"groupname2\",\n          \"admin\": [\n            \"userid3\"\n          ]\n        }\n      ],\n      userGroups:[]\n    };\n\n    const dummyGroupInfo = [\n      {\n        \"id\": \"g0002\",\n        \"name\": \"groupname2 updated\",\n        \"admin\": [\n          \"userid3\",\n          \"userid4\"\n        ]\n      },\n      {\n        \"id\": \"g0003\",\n        \"name\": \"groupname3\",\n        \"admin\": [\n          \"userid1\",\n          \"userid3\"\n        ]\n      }\n    ];\n\n    const dummyLogonUserId = \"userid3\";\n\n    const dummyAction = groupsLoaded(dummyGroupInfo,dummyLogonUserId);\n\n    const result = group(dummyCurrentState,dummyAction);\n\n    assert(result.allGroups.length === 2);\n    assert(!getGroupById(result.allGroups,\"g0001\"));\n  });\n\n  it(\"copies groups which logonUserId is in admin or members of it, to userGroups array if GROUPS_LOADED action is passed\",()=>{\n    const dummyCurrentState = {\n      allGroups:[\n        {\n          \"id\": \"g0001\",\n          \"name\": \"groupname1\",\n          \"admin\": [\n            \"userid1\",\n            \"userid2\"\n          ]\n        },\n        {\n          \"id\": \"g0002\",\n          \"name\": \"groupname2\",\n          \"admin\": [\n            \"userid3\"\n          ]\n        }\n      ],\n      userGroups:[]\n    };\n\n    const dummyGroupInfo = [\n      {\n        \"id\": \"g0001\",\n        \"name\": \"groupname1\",\n        \"admin\": [\n          \"userid1\",\n          \"userid2\"\n        ]\n      },\n      {\n        \"id\": \"g0002\",\n        \"name\": \"groupname2 updated\",\n        \"admin\": [\n          \"userid3\",\n          \"userid4\"\n        ]\n      },\n      {\n        \"id\": \"g0003\",\n        \"name\": \"groupname3\",\n        \"admin\": [\n          \"userid1\",\n          \"userid3\"\n        ]\n      }\n    ];\n\n    const dummyLogonUserId = \"userid3\";\n\n    const dummyAction = groupsLoaded(dummyGroupInfo,dummyLogonUserId);\n\n    const result = group(dummyCurrentState,dummyAction);\n\n    assert(result.usersGroups.length === 2);\n    assert.deepEqual(\n      result.usersGroups,\n      [\n        {\n          \"id\": \"g0002\",\n          \"name\": \"groupname2 updated\",\n          \"admin\": [\n            \"userid3\",\n            \"userid4\"\n          ]\n        },\n        {\n          \"id\": \"g0003\",\n          \"name\": \"groupname3\",\n          \"admin\": [\n            \"userid1\",\n            \"userid3\"\n          ]\n        }\n      ]\n    );\n  });\n\n  it(\"fetches members of group if GROUP_MEMBER_LOADED action is passed\",()=>{\n    const dummyCurrentState = {\n      allGroups:[\n        {\n          \"id\": \"g0001\",\n          \"name\": \"groupname1\",\n          \"admin\": [\n            \"userid1\",\n            \"userid2\"\n          ]\n        },\n        {\n          \"id\": \"g0002\",\n          \"name\": \"groupname2\",\n          \"admin\": [\n            \"userid3\"\n          ]\n        }\n      ],\n      userGroups:[]\n    };\n\n    const dummyGroupWithMember = {\n      \"id\": \"g0001\",\n      \"name\": \"groupname1\",\n      \"admin\": [\n        \"userid1\",\n        \"userid2\"\n      ],\n      \"members\":[\n        \"userid1\",\n        \"userid2\",\n        \"userid3\"\n      ]\n    };\n\n    const dummyLogonUserId = \"userid3\";\n\n    const dummyAction = groupMemberLoaded(dummyGroupWithMember,dummyLogonUserId);\n\n    const result = group(dummyCurrentState,dummyAction);\n\n    assert(result.allGroups.length === 2);\n    assert(getGroupById(result.allGroups,\"g0001\").members);\n    assert(getGroupById(result.allGroups,\"g0001\").members.length === 3);\n    assert(getGroupById(result.allGroups,\"g0001\").members.indexOf(\"userid1\") >= 0);\n    assert(getGroupById(result.allGroups,\"g0001\").members.indexOf(\"userid2\") >= 0);\n    assert(getGroupById(result.allGroups,\"g0001\").members.indexOf(\"userid3\") >= 0);\n  });\n\n  it(\"copies groups which logonUserId is in admin or members of it, to userGroups array if GROUP_MEMBER_LOADED action is passed\",()=>{\n    const dummyCurrentState = {\n      allGroups:[\n        {\n          \"id\": \"g0001\",\n          \"name\": \"groupname1\",\n          \"admin\": [\n            \"userid1\",\n            \"userid2\"\n          ]\n        },\n        {\n          \"id\": \"g0002\",\n          \"name\": \"groupname2\",\n          \"admin\": [\n            \"userid3\"\n          ]\n        }\n      ],\n      userGroups:[]\n    };\n\n    const dummyGroupWithMember = {\n      \"id\": \"g0001\",\n      \"name\": \"groupname1\",\n      \"admin\": [\n        \"userid1\",\n        \"userid2\"\n      ],\n      \"members\":[\n        \"userid1\",\n        \"userid2\",\n        \"userid3\"\n      ]\n    };\n\n    const dummyLogonUserId = \"userid3\";\n\n    const dummyAction = groupMemberLoaded(dummyGroupWithMember,dummyLogonUserId);\n\n    const result = group(dummyCurrentState,dummyAction);\n\n    assert(result.usersGroups.length === 2);\n    assert(getGroupById(result.usersGroups,\"g0001\"));\n    assert(getGroupById(result.usersGroups,\"g0002\"));\n  });\n\n  it(\"does nothing if any other action is passed\",()=>{\n    const dummyCurrentState = {\n      allGroups:[\n        {\n          \"id\": \"g0001\",\n          \"name\": \"groupname1\",\n          \"admin\": [\n            \"userid1\",\n            \"userid2\"\n          ]\n        },\n        {\n          \"id\": \"g0002\",\n          \"name\": \"groupname2\",\n          \"admin\": [\n            \"userid3\"\n          ]\n        }\n      ],\n      userGroups:[]\n    };\n\n    const dummyAction = {type:\"DUMMY_ACTION_NAME\"};\n\n    const result = group(dummyCurrentState,dummyAction);\n\n    assert.deepEqual(result, dummyCurrentState);\n  })\n});\n",
    "static": true,
    "longname": "test/reducer/group.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 537,
    "kind": "testDescribe",
    "name": "describe134",
    "testId": 134,
    "memberof": "test/reducer/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/reducer/group.test.js~describe134",
    "access": null,
    "description": "group reducer",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{group}"
      }
    ],
    "testTargets": [
      "group"
    ]
  },
  {
    "__docId__": 538,
    "kind": "testIt",
    "name": "it135",
    "testId": 135,
    "memberof": "test/reducer/group.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/group.test.js~describe134.it135",
    "access": null,
    "description": "marges group information if GROUPS_LOADED action is passed",
    "lineNumber": 9
  },
  {
    "__docId__": 539,
    "kind": "testIt",
    "name": "it136",
    "testId": 136,
    "memberof": "test/reducer/group.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/group.test.js~describe134.it136",
    "access": null,
    "description": "doesn't update members of current group if GROUPS_LOADED action is passed",
    "lineNumber": 72
  },
  {
    "__docId__": 540,
    "kind": "testIt",
    "name": "it137",
    "testId": 137,
    "memberof": "test/reducer/group.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/group.test.js~describe134.it137",
    "access": null,
    "description": "deletes groups which aren't in new array if GROUPS_LOADED is passed",
    "lineNumber": 140
  },
  {
    "__docId__": 541,
    "kind": "testIt",
    "name": "it138",
    "testId": 138,
    "memberof": "test/reducer/group.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/group.test.js~describe134.it138",
    "access": null,
    "description": "copies groups which logonUserId is in admin or members of it, to userGroups array if GROUPS_LOADED action is passed",
    "lineNumber": 191
  },
  {
    "__docId__": 542,
    "kind": "testIt",
    "name": "it139",
    "testId": 139,
    "memberof": "test/reducer/group.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/group.test.js~describe134.it139",
    "access": null,
    "description": "fetches members of group if GROUP_MEMBER_LOADED action is passed",
    "lineNumber": 270
  },
  {
    "__docId__": 543,
    "kind": "testIt",
    "name": "it140",
    "testId": 140,
    "memberof": "test/reducer/group.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/group.test.js~describe134.it140",
    "access": null,
    "description": "copies groups which logonUserId is in admin or members of it, to userGroups array if GROUP_MEMBER_LOADED action is passed",
    "lineNumber": 320
  },
  {
    "__docId__": 544,
    "kind": "testIt",
    "name": "it141",
    "testId": 141,
    "memberof": "test/reducer/group.test.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/group.test.js~describe134.it141",
    "access": null,
    "description": "does nothing if any other action is passed",
    "lineNumber": 367
  },
  {
    "__docId__": 545,
    "kind": "testFile",
    "name": "test/reducer/groupboards.test.js",
    "content": "import assert from 'power-assert';\nimport groupboards from '../../src/reducer/groupboards';\nimport {\n  openGroupCreationBoard,\n  closeGroupCreationBoard,\n  openGroupManagementBoard,\n  closeGroupManagementBoard\n} from '../../src/action/groupboards';\nimport {\n  createGroupSuccess\n} from '../../src/action/group';\n\n/** @test {groupboards} */\ndescribe(\"groupboards reducer\",()=>{\n  it(\"sets creationBoard.isOpen state to true when OPEN_GROUP_CREATION_BOARD action is passed\",()=>{\n    const action = openGroupCreationBoard();\n\n    const dummyCurrentState = {\n      creationBoard:{\n        isOpen:false\n      },\n      managementBoard:{\n        isOpen:false,\n        groupId:\"\"\n      }\n    };\n\n    const result = groupboards(dummyCurrentState,action);\n\n    assert(result.creationBoard.isOpen === true);\n    assert.deepEqual(result.managementBoard, dummyCurrentState.managementBoard);\n  });\n\n  it(\"sets creationBoard.isOpen state to false when CLOSE_GROUP_CREATION_BOARD action is passed\",()=>{\n    const action = closeGroupCreationBoard();\n\n    const dummyCurrentState = {\n      creationBoard:{\n        isOpen:true\n      },\n      managementBoard:{\n        isOpen:false,\n        groupId:\"\"\n      }\n    };\n\n    const result = groupboards(dummyCurrentState,action);\n\n    assert(result.creationBoard.isOpen === false);\n    assert.deepEqual(result.managementBoard, dummyCurrentState.managementBoard);\n  });\n\n  it(\"sets managementBoard.isOpen state to true and managementBoard.group to action's payload if OPEN_GROUP_MANAGEMENT_BOARD action is passed\",()=>{\n    const dummyGroupId = \"g0001\";\n\n    const action = openGroupManagementBoard(dummyGroupId);\n\n    const dummyCurrentState = {\n      creationBoard:{\n        isOpen:false\n      },\n      managementBoard:{\n        isOpen:false,\n        groupId:\"\"\n      }\n    };\n\n    const result = groupboards(dummyCurrentState,action);\n\n    assert(result.managementBoard.isOpen === true);\n    assert(result.managementBoard.groupId === dummyGroupId);\n    assert.deepEqual(result.creationBoard, dummyCurrentState.creationBoard);\n  });\n\n  it(\"sets managementBoard.isOpen state to false and managementBoard.group state to empty if CLOSE_GROUP_MANAGEMENT_BOARD action is passed\",()=>{\n    const action = closeGroupManagementBoard();\n\n    const dummyCurrentState = {\n      creationBoard:{\n        isOpen:false\n      },\n      managementBoard:{\n        isOpen:true,\n        groupId:\"g0001\"\n      }\n    };\n\n    const result = groupboards(dummyCurrentState,action);\n\n    assert(result.managementBoard.isOpen === false);\n    assert(result.managementBoard.groupId===\"\");\n    assert.deepEqual(result.creationBoard,dummyCurrentState.creationBoard);\n  });\n\n  it(\"sets creationBoard.isOpen state to false and managementBoard.isOpen state to true and managementBoard.group to action's payload if CREATE_GROUP_SUCCESS action is passed\",()=>{\n    const dummyGroupId = \"g0001\";\n    const dummyAction = createGroupSuccess(dummyGroupId);\n    const dummyCurrentState = {\n      creationBoard:{\n        isOpen:true\n      },\n      managementBoard:{\n        isOpen:false,\n        groupId:\"\"\n      }\n    };\n\n    const result = groupboards(dummyCurrentState,dummyAction);\n\n    assert(result.creationBoard.isOpen === false);\n    assert(result.managementBoard.isOpen === true);\n    assert(result.managementBoard.groupId === dummyGroupId);\n  });\n\n  it(\"does nothing if any other action is passed\",()=>{\n    const action = {type:\"DUMMY_ACTION_NAME\"};\n\n    const dummyCurrentState = {\n      creationBoard:{\n        isOpen:false\n      },\n      managementBoard:{\n        isOpen:true,\n        groupId:\"\"\n      }\n    };\n\n    const result = groupboards(dummyCurrentState,action);\n\n    assert.deepEqual(result, dummyCurrentState);\n  });\n});\n",
    "static": true,
    "longname": "test/reducer/groupboards.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 546,
    "kind": "testDescribe",
    "name": "describe142",
    "testId": 142,
    "memberof": "test/reducer/groupboards.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/reducer/groupboards.test.js~describe142",
    "access": null,
    "description": "groupboards reducer",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{groupboards}"
      }
    ],
    "testTargets": [
      "groupboards"
    ]
  },
  {
    "__docId__": 547,
    "kind": "testIt",
    "name": "it143",
    "testId": 143,
    "memberof": "test/reducer/groupboards.test.js~describe142",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/groupboards.test.js~describe142.it143",
    "access": null,
    "description": "sets creationBoard.isOpen state to true when OPEN_GROUP_CREATION_BOARD action is passed",
    "lineNumber": 15
  },
  {
    "__docId__": 548,
    "kind": "testIt",
    "name": "it144",
    "testId": 144,
    "memberof": "test/reducer/groupboards.test.js~describe142",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/groupboards.test.js~describe142.it144",
    "access": null,
    "description": "sets creationBoard.isOpen state to false when CLOSE_GROUP_CREATION_BOARD action is passed",
    "lineNumber": 34
  },
  {
    "__docId__": 549,
    "kind": "testIt",
    "name": "it145",
    "testId": 145,
    "memberof": "test/reducer/groupboards.test.js~describe142",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/groupboards.test.js~describe142.it145",
    "access": null,
    "description": "sets managementBoard.isOpen state to true and managementBoard.group to action's payload if OPEN_GROUP_MANAGEMENT_BOARD action is passed",
    "lineNumber": 53
  },
  {
    "__docId__": 550,
    "kind": "testIt",
    "name": "it146",
    "testId": 146,
    "memberof": "test/reducer/groupboards.test.js~describe142",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/groupboards.test.js~describe142.it146",
    "access": null,
    "description": "sets managementBoard.isOpen state to false and managementBoard.group state to empty if CLOSE_GROUP_MANAGEMENT_BOARD action is passed",
    "lineNumber": 75
  },
  {
    "__docId__": 551,
    "kind": "testIt",
    "name": "it147",
    "testId": 147,
    "memberof": "test/reducer/groupboards.test.js~describe142",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/groupboards.test.js~describe142.it147",
    "access": null,
    "description": "sets creationBoard.isOpen state to false and managementBoard.isOpen state to true and managementBoard.group to action's payload if CREATE_GROUP_SUCCESS action is passed",
    "lineNumber": 95
  },
  {
    "__docId__": 552,
    "kind": "testIt",
    "name": "it148",
    "testId": 148,
    "memberof": "test/reducer/groupboards.test.js~describe142",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/groupboards.test.js~describe142.it148",
    "access": null,
    "description": "does nothing if any other action is passed",
    "lineNumber": 115
  },
  {
    "__docId__": 553,
    "kind": "testFile",
    "name": "test/reducer/login.test.js",
    "content": "import assert from 'power-assert';\nimport {LOGIN_REQUESTED,LOGIN_SUCCESS,LOGIN_FAILURE,LOGOUT_REQUESTED} from \"../../src/action/login\";\nimport {LOGIN_STATUS} from \"../../src/const/login\"\nimport login from \"../../src/reducer/login\"\n\nconst dummyUserData = {userid:\"mike\",name:\"Mike\",token:\"dummy\"};\n/**@test {login}*/\ndescribe(\"login reducer\",()=>{\n  //LOGIN_SUCCESSアクションが渡された場合、'status'をLOGIN_STATUS.SUCCESSに変更し、'user'をactionのpayloadに変更する\n  it(\"changes 'status' state to LOGIN_STATUS.SUCCESS and changes 'user' state to payload of action if LOGIN_SUCCESS action is passed\",()=>{\n    const action = {\n      type:LOGIN_SUCCESS,\n      payload:dummyUserData\n    };\n\n    const initialState = {status:LOGIN_STATUS.NOTYET,user:{}};\n\n    const result = login(initialState,action);\n    assert(result.status === LOGIN_STATUS.SUCCESS);\n    assert(result.user === action.payload);\n  });\n  //LOGIN_FAILUREアクションが渡された場合、'status'をLOGIN_STATUS.FAILUREに変更し、'user'は空オブジェクトとなる\n  it(\"changes 'status' state to LOGIN_STATUS.FAILURE and changes 'user' state to empty object if LOGIN_FAILURE action is passed\",()=>{\n    const action = {type:LOGIN_FAILURE};\n\n    const initialState = {status:LOGIN_STATUS.NOTYET,user:{}};\n\n    const result = login(initialState,action);\n    assert(result.status === LOGIN_STATUS.FAILURE);\n    assert(Object.keys(result.user).length === 0);\n  });\n  //LOGOUT_REQUESTEDアクションが渡された場合、'status'をLOGIN_STATUS.NOTYETに変更し、'user'は空オブジェクトとなる\n  it(\"changes 'status' state to LOGIN_STATUS.NOTYET and changes 'user' state to empty object if LOGOUT_REQUESTED action is passed\",()=>{\n    const action = {type:LOGOUT_REQUESTED};\n\n    const initialState = {status:LOGIN_STATUS.SUCCESS,user:dummyUserData};\n\n    const result = login(initialState,action);\n    assert(result.status === LOGIN_STATUS.NOTYET);\n    assert(Object.keys(result.user).length === 0);\n  });\n  //LOGIN_REQUESTEDアクションが渡された場合、'status'をLOGIN_STATUS.NOTYETに変更し、'user'は空オブジェクトとなる\n  it(\"changes 'status' state to LOGIN_STATUS.NOTYET and changes 'user' state to empty object if LOGIN_REQUESTED action is passed\",()=>{\n    const action = {type:LOGIN_REQUESTED};\n\n    const initialState = {status:LOGIN_STATUS.FAILURE,user:{}};\n\n    const result = login(initialState,action);\n    assert(result.status === LOGIN_STATUS.NOTYET);\n    assert(Object.keys(result.user).length === 0);\n  });\n  //その他のアクションが渡された場合はstateを変更しない\n  it(\"doesn't change any state if any other action is passed\",()=>{\n    const action = {type:\"OTHER_ACTION\"};\n\n    const initialState = {status:LOGIN_STATUS.SUCCESS,user:dummyUserData};\n\n    const result = login(initialState,action);\n    assert(result.status === initialState.status);\n    assert(result.user === initialState.user);\n  });\n});\n",
    "static": true,
    "longname": "test/reducer/login.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 554,
    "kind": "testDescribe",
    "name": "describe149",
    "testId": 149,
    "memberof": "test/reducer/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/reducer/login.test.js~describe149",
    "access": null,
    "description": "login reducer",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{login}"
      }
    ],
    "testTargets": [
      "login"
    ]
  },
  {
    "__docId__": 555,
    "kind": "testIt",
    "name": "it150",
    "testId": 150,
    "memberof": "test/reducer/login.test.js~describe149",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/login.test.js~describe149.it150",
    "access": null,
    "description": "changes 'status' state to LOGIN_STATUS.SUCCESS and changes 'user' state to payload of action if LOGIN_SUCCESS action is passed",
    "lineNumber": 10
  },
  {
    "__docId__": 556,
    "kind": "testIt",
    "name": "it151",
    "testId": 151,
    "memberof": "test/reducer/login.test.js~describe149",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/login.test.js~describe149.it151",
    "access": null,
    "description": "changes 'status' state to LOGIN_STATUS.FAILURE and changes 'user' state to empty object if LOGIN_FAILURE action is passed",
    "lineNumber": 23
  },
  {
    "__docId__": 557,
    "kind": "testIt",
    "name": "it152",
    "testId": 152,
    "memberof": "test/reducer/login.test.js~describe149",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/login.test.js~describe149.it152",
    "access": null,
    "description": "changes 'status' state to LOGIN_STATUS.NOTYET and changes 'user' state to empty object if LOGOUT_REQUESTED action is passed",
    "lineNumber": 33
  },
  {
    "__docId__": 558,
    "kind": "testIt",
    "name": "it153",
    "testId": 153,
    "memberof": "test/reducer/login.test.js~describe149",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/login.test.js~describe149.it153",
    "access": null,
    "description": "changes 'status' state to LOGIN_STATUS.NOTYET and changes 'user' state to empty object if LOGIN_REQUESTED action is passed",
    "lineNumber": 43
  },
  {
    "__docId__": 559,
    "kind": "testIt",
    "name": "it154",
    "testId": 154,
    "memberof": "test/reducer/login.test.js~describe149",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/login.test.js~describe149.it154",
    "access": null,
    "description": "doesn't change any state if any other action is passed",
    "lineNumber": 53
  },
  {
    "__docId__": 560,
    "kind": "testFile",
    "name": "test/reducer/mydestination.test.js",
    "content": "import assert from 'power-assert';\nimport {MY_DESTINATION_CHANGE} from '../../src/action/mydestination';\nimport mydestination from '../../src/reducer/mydestination';\nimport {SUGGESTION_CHANGE,SUGGESTION_CLEAR} from '../../src/action/suggestion';\nimport {DEFAULT_SUGGENSTIONS} from '../../src/const/suggestion';\n\n/**@test {mydestination}*/\ndescribe(\"mydestination reducer\",()=>{\n  it(\"changes mydestination state into payload of the action if MY_DESTINATION_CHANGE action is passed\",()=>{\n    const initialState = {\n      inBusiness:true,\n      comment:\"EAST 8F\",\n      contact:\"\",\n      suggestion:DEFAULT_SUGGENSTIONS\n    };\n\n    const dummyAction = {\n      type:MY_DESTINATION_CHANGE,\n      payload:{\n        inBusiness:false,\n        comment:\"\",\n        contact:\"0X0-XXXX-XXXX\"\n      }\n    };\n\n    const result = mydestination(initialState,dummyAction);\n\n    assert(result.inBusiness === dummyAction.payload.inBusiness);\n    assert(result.comment === dummyAction.payload.comment);\n    assert(result.contact === dummyAction.payload.contact);\n    assert.deepEqual(result.suggestion,initialState.suggestion);\n  });\n\n  it(\"changes suggestion of mydestination state into payload of the action if SUGGESTION_CHANGE action is passed\",()=>{\n    const initialState = {\n      inBusiness:true,\n      comment:\"EAST 8F\",\n      contact:\"\",\n      suggestion:DEFAULT_SUGGENSTIONS\n    };\n\n    const dummyAction = {\n      type:SUGGESTION_CHANGE,\n      payload:[\"東銀座\",\"EAST 8F\", \"EAST 3F\", \"宝町\", \"NRI 13F\", \"NRI 12F\"]\n    };\n\n    const result = mydestination(initialState,dummyAction);\n\n    assert(result.inBusiness === initialState.inBusiness);\n    assert(result.comment === initialState.comment);\n    assert(result.contact === initialState.contact);\n    assert.deepEqual(result.suggestion,dummyAction.payload);\n  });\n\n  it(\"changes suggestion of mydestination state into DEFAULT_SUGGENSTIONS if SUGGESTION_CLEAR is passed\",()=>{\n    const initialState = {\n      inBusiness:true,\n      comment:\"EAST 8F\",\n      contact:\"\",\n      suggestion:[\"東銀座\",\"EAST 8F\", \"EAST 3F\", \"宝町\", \"NRI 13F\", \"NRI 12F\"]\n    };\n\n    const dummyAction = {\n      type:SUGGESTION_CLEAR\n    };\n\n    const result = mydestination(initialState,dummyAction);\n\n    assert(result.inBusiness === initialState.inBusiness);\n    assert(result.comment === initialState.comment);\n    assert(result.contact === initialState.contact);\n    assert.deepEqual(result.suggestion,DEFAULT_SUGGENSTIONS);\n  });\n\n  it(\"doesn't make any changes if another action is passed\",()=>{\n    const initialState = {\n      inBusiness:true,\n      comment:\"EAST 8F\",\n      contact:\"\",\n      suggestion:DEFAULT_SUGGENSTIONS\n    };\n\n    const dummyAction = {\n      type:\"DUMMY_ACTION_NAME\",\n      payload:{\n        inBusiness:true,\n        comment:\"\",\n        contact:\"0X0-XXXX-XXXX\"\n      }\n    };\n\n    const result = mydestination(initialState,dummyAction);\n\n    assert.deepEqual(result, initialState);\n  });\n});\n",
    "static": true,
    "longname": "test/reducer/mydestination.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 561,
    "kind": "testDescribe",
    "name": "describe155",
    "testId": 155,
    "memberof": "test/reducer/mydestination.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/reducer/mydestination.test.js~describe155",
    "access": null,
    "description": "mydestination reducer",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{mydestination}"
      }
    ],
    "testTargets": [
      "mydestination"
    ]
  },
  {
    "__docId__": 562,
    "kind": "testIt",
    "name": "it156",
    "testId": 156,
    "memberof": "test/reducer/mydestination.test.js~describe155",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/mydestination.test.js~describe155.it156",
    "access": null,
    "description": "changes mydestination state into payload of the action if MY_DESTINATION_CHANGE action is passed",
    "lineNumber": 9
  },
  {
    "__docId__": 563,
    "kind": "testIt",
    "name": "it157",
    "testId": 157,
    "memberof": "test/reducer/mydestination.test.js~describe155",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/mydestination.test.js~describe155.it157",
    "access": null,
    "description": "changes suggestion of mydestination state into payload of the action if SUGGESTION_CHANGE action is passed",
    "lineNumber": 34
  },
  {
    "__docId__": 564,
    "kind": "testIt",
    "name": "it158",
    "testId": 158,
    "memberof": "test/reducer/mydestination.test.js~describe155",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/mydestination.test.js~describe155.it158",
    "access": null,
    "description": "changes suggestion of mydestination state into DEFAULT_SUGGENSTIONS if SUGGESTION_CLEAR is passed",
    "lineNumber": 55
  },
  {
    "__docId__": 565,
    "kind": "testIt",
    "name": "it159",
    "testId": 159,
    "memberof": "test/reducer/mydestination.test.js~describe155",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/mydestination.test.js~describe155.it159",
    "access": null,
    "description": "doesn't make any changes if another action is passed",
    "lineNumber": 75
  },
  {
    "__docId__": 566,
    "kind": "testFile",
    "name": "test/reducer/signup.test.js",
    "content": "import assert from 'power-assert';\nimport {SIGNUP_SUCCESS,SIGNUP_FAILURE} from '../../src/action/signup';\nimport {SIGNUP_FAILURE_REASONS} from '../../src/const/signup';\nimport signup from '../../src/reducer/signup';\n\n/**@test {signup} */\ndescribe(\"signup reducer\",()=>{\n  it(\"changes failure_reason state to empty array if SIGNUP_SUCCESS action is passed\",()=>{\n    const action = {type:SIGNUP_SUCCESS};\n    const dummyInitialState = {failure_reason:[\n      SIGNUP_FAILURE_REASONS.INVALID_CONFIRM,\n      SIGNUP_FAILURE_REASONS.POLICY_PASSWORD,\n      SIGNUP_FAILURE_REASONS.EMPTY_NAME\n    ]};\n\n    const result = signup(dummyInitialState,action);\n    assert(result.failure_reason.length == 0);\n  });\n  it(\"changes failure_reason state to payload of the action if SIGNUP_FAILURE action is passed\",()=>{\n    const action = {\n      type:SIGNUP_FAILURE,\n      payload:[\n        SIGNUP_FAILURE_REASONS.INVALID_CONFIRM,\n        SIGNUP_FAILURE_REASONS.POLICY_PASSWORD,\n        SIGNUP_FAILURE_REASONS.EMPTY_NAME\n      ]\n    };\n\n    const dummyInitialState = {failure_reason:[]};\n\n    const result = signup(dummyInitialState,action);\n    assert.deepEqual(result.failure_reason, action.payload);\n  });\n});\n",
    "static": true,
    "longname": "test/reducer/signup.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 567,
    "kind": "testDescribe",
    "name": "describe160",
    "testId": 160,
    "memberof": "test/reducer/signup.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/reducer/signup.test.js~describe160",
    "access": null,
    "description": "signup reducer",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{signup}"
      }
    ],
    "testTargets": [
      "signup"
    ]
  },
  {
    "__docId__": 568,
    "kind": "testIt",
    "name": "it161",
    "testId": 161,
    "memberof": "test/reducer/signup.test.js~describe160",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/signup.test.js~describe160.it161",
    "access": null,
    "description": "changes failure_reason state to empty array if SIGNUP_SUCCESS action is passed",
    "lineNumber": 8
  },
  {
    "__docId__": 569,
    "kind": "testIt",
    "name": "it162",
    "testId": 162,
    "memberof": "test/reducer/signup.test.js~describe160",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducer/signup.test.js~describe160.it162",
    "access": null,
    "description": "changes failure_reason state to payload of the action if SIGNUP_FAILURE action is passed",
    "lineNumber": 19
  },
  {
    "__docId__": 570,
    "kind": "testFile",
    "name": "test/saga/accountboard.test.js",
    "content": "import assert from 'power-assert';\nimport {changeAccountInfoSaga,changeAccountInfoTask} from '../../src/saga/accountboard';\nimport {loginSuccess} from '../../src/action/login';\nimport {take,put,select,takeEvery,takeLatest,call} from 'redux-saga/effects';\nimport {CHANGE_ACCOUNT_INFO} from '../../src/action/accountboard';\nimport {getApiBaseURL} from  '../../src/module/environment';\nimport axios from \"axios\";\n\nconst BASE_API_URL = getApiBaseURL();\n\n/**@test {changeAccountInfoSaga}*/\ndescribe(\"changeAccountInfoSaga\",()=>{\n  it(\"takes every CHANGE_ACCOUNT_INFO action and pass it to changeAccountInfoTask\",()=>{\n    const gen = changeAccountInfoSaga();\n    const ret = gen.next();\n\n    assert(!ret.done);\n    assert.deepEqual(ret.value,takeEvery(CHANGE_ACCOUNT_INFO,changeAccountInfoTask));\n  });\n});\n\n/**@test {changeAccountInfoTask}*/\ndescribe(\"changeAccountInfoTask\",()=>{\n  it(\"sends changes in payload of CHANGE_ACCOUNT_INFO and puts LOGIN_SUCCESS action again\",()=>{\n    const dummyAction = {\n      type:CHANGE_ACCOUNT_INFO,\n      payload:{\n        nextname:\"テスト\",\n        nextpass:\"1q2w3e4r\"\n      }\n    };\n\n    const dummyUserId = \"test\";\n    const dummyToken = \"dummy_token\";\n\n    const dummyAPIResponse = {\n      data:{\n        userid:\"test\",\n        name:\"テスト\"\n      }\n    }\n\n    const gen = changeAccountInfoTask(dummyAction);\n    let ret = gen.next();\n\n    //gen calls const token = yield select(state => state.login.user.token);\n    ret = gen.next(dummyToken); //dummyTokenがstateに格納されているものとする\n\n    assert(ret.value, call(axios, {\n      method:\"PUT\",\n      url:BASE_API_URL + \"user\",\n      headers:{\"Authorization\":\"Bearer \" + dummyAction},\n      data: {\n        name:dummyAction.payload.nextname,\n        newPassword:dummyAction.payload.nextpass\n      }\n    }));\n\n    ret = gen.next(dummyAPIResponse); //dummyAPIResultが返ってきたものとする\n\n    //gen calls yield select(state => state.login.user.userid);\n    ret = gen.next(dummyUserId); //dummyUserIdがstateに格納されているものとする\n\n    assert.deepEqual(ret.value, put(loginSuccess({\n      userid:dummyUserId,\n      name:dummyAction.payload.nextname,\n      token:dummyToken})));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n})\n",
    "static": true,
    "longname": "test/saga/accountboard.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 571,
    "kind": "testDescribe",
    "name": "describe163",
    "testId": 163,
    "memberof": "test/saga/accountboard.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/accountboard.test.js~describe163",
    "access": null,
    "description": "changeAccountInfoSaga",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeAccountInfoSaga}"
      }
    ],
    "testTargets": [
      "changeAccountInfoSaga"
    ]
  },
  {
    "__docId__": 572,
    "kind": "testIt",
    "name": "it164",
    "testId": 164,
    "memberof": "test/saga/accountboard.test.js~describe163",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/accountboard.test.js~describe163.it164",
    "access": null,
    "description": "takes every CHANGE_ACCOUNT_INFO action and pass it to changeAccountInfoTask",
    "lineNumber": 13
  },
  {
    "__docId__": 573,
    "kind": "testDescribe",
    "name": "describe165",
    "testId": 165,
    "memberof": "test/saga/accountboard.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/accountboard.test.js~describe165",
    "access": null,
    "description": "changeAccountInfoTask",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeAccountInfoTask}"
      }
    ],
    "testTargets": [
      "changeAccountInfoTask"
    ]
  },
  {
    "__docId__": 574,
    "kind": "testIt",
    "name": "it166",
    "testId": 166,
    "memberof": "test/saga/accountboard.test.js~describe165",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/accountboard.test.js~describe165.it166",
    "access": null,
    "description": "sends changes in payload of CHANGE_ACCOUNT_INFO and puts LOGIN_SUCCESS action again",
    "lineNumber": 24
  },
  {
    "__docId__": 575,
    "kind": "testFile",
    "name": "test/saga/board.test.js",
    "content": "import assert from \"power-assert\";\nimport {loadMemberStatusSaga,loadMemberStatusTask,watchMemberStatusSaga} from '../../src/saga/board';\nimport {updateMemberStatus,memberStatusPolling,MEMBER_STATUS_POLLING} from '../../src/action/board';\nimport {LOGIN_SUCCESS} from '../../src/action/login';\nimport {LOGIN_STATUS} from '../../src/const/login';\nimport {MY_DESTINATION_SAVE_COMPLETE} from '../../src/action/mydestination';\nimport {take,put,select,takeEvery,call} from 'redux-saga/effects';\nimport {getApiBaseURL} from  '../../src/module/environment';\nimport axios from \"axios\";\n\nconst BASE_API_URL = getApiBaseURL();\n\n/**@test {loadMemberStatusSaga}*/\ndescribe(\"loadMemberStatusSaga\",()=>{\n  it(\"takes every LOGIN_SUCCESS,MY_DESTINATION_SAVE_COMPLETE and MEMBER_STATUS_POLLING and pass it to loadMemberStatusTask\",()=>{\n    const gen = loadMemberStatusSaga();\n    let ret = gen.next();\n\n    assert(ret.value, takeEvery(LOGIN_SUCCESS,loadMemberStatusTask));\n    ret = gen.next();\n    assert(ret.value, takeEvery(MY_DESTINATION_SAVE_COMPLETE,loadMemberStatusTask));\n    ret = gen.next();\n    assert(ret.value, takeEvery(MEMBER_STATUS_POLLING,loadMemberStatusTask));\n    ret = gen.next();\n    assert(ret.done);\n  });\n});\n\n/**@test {loadMemberStatusTask}*/\ndescribe(\"loadMemberStatusTask\",()=>{\n  it(\"gets all member status from server via API and puts UPDATE_MEMBER_STATUS action with the result\",()=>{\n    const dummyAPIResult = [\n      {userid:\"testA\",name:\"Aさん\",inBusiness:false,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testB\",name:\"Bさん\",inBusiness:true,comment:\"在宅勤務\",contact:\"090-YYY-YYYY\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testC\",name:\"Cさん\",inBusiness:true,comment:\"京橋\",contact:\"\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testD\",name:\"Dさん\",inBusiness:true,comment:\"自席\",contact:\"090-ZZZZ-ZZZZ\",lastUpdate:\"2017/05/01 10:00:00\"}\n    ];\n\n    const dummyToken = \"dummytoken\";\n\n    const dummyLogonUserId = \"testC\";\n\n    const gen = loadMemberStatusTask();\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.user.token);\n    ret = gen.next(dummyToken);//dummyTokenがstate上に保管されているものとする\n    //gen calls yield select(state=> state.login.user.userid);\n    ret = gen.next(dummyLogonUserId); //dummyLogonUserId(\"testC\")がstate上に保管されているものとする\n\n    assert.deepEqual(ret.value, call(axios,{\n      method:\"GET\",\n      url:BASE_API_URL + \"status/all\",\n      headers: { \"Authorization\": \"Bearer \" + dummyToken}\n    }));\n\n    ret = gen.next({data:dummyAPIResult}); //dummyAPIResultがAPIから返ってきたものとする\n\n    //ログインユーザーであるtestCのデータを先頭にしてUPDATE_MEMBER_STATUSをputする\n    const expectedPayload = [\n      {userid:\"testC\",name:\"Cさん\",inBusiness:true,comment:\"京橋\",contact:\"\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testA\",name:\"Aさん\",inBusiness:false,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testB\",name:\"Bさん\",inBusiness:true,comment:\"在宅勤務\",contact:\"090-YYY-YYYY\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testD\",name:\"Dさん\",inBusiness:true,comment:\"自席\",contact:\"090-ZZZZ-ZZZZ\",lastUpdate:\"2017/05/01 10:00:00\"}\n    ];\n\n    assert.deepEqual(ret.value, put(updateMemberStatus(expectedPayload)));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n});\n\n/**@test {watchMemberStatusSaga}*/\ndescribe(\"watchMemberStatusSaga\",()=>{\n  it(\"creates generator which never ends\",()=>{\n    const gen = watchMemberStatusSaga();\n    let ret = gen.next();\n\n    for(let i = 0;i < 100; i++){\n      //gen calls yield select(state => state.login.status)\n      ret = gen.next(LOGIN_STATUS.SUCCESS);\n      //gem calls yield put(memberStatusPolling())\n      ret = gen.next();\n      //gen calls yield call(delay,STATUS_POLLING_DURATION_MS)\n      //gen.next()ではdelayが発生してテストに時間がかかってしまうため、trueを注入する\n      ret = gen.next(true);\n\n      assert(!ret.done);\n    }\n  });\n\n  it(\"puts MEMBER_STATUS_POLLING action if user has been logged in\",()=>{\n    const gen = watchMemberStatusSaga();\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.status)\n    ret = gen.next(LOGIN_STATUS.SUCCESS);\n\n    assert.deepEqual(ret.value, put(memberStatusPolling()));\n    ret = gen.next();\n\n    //gen calls yield call(delay,STATUS_POLLING_DURATION_MS)\n    //gen.next()ではdelayが発生してテストに時間がかかってしまうため、trueを注入する\n    ret = gen.next(true);\n\n    assert(!ret.done);\n  });\n\n  it(\"doesn't put any action if user hasn't been logged in\",()=>{\n    const gen = watchMemberStatusSaga();\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.status)\n    ret = gen.next(LOGIN_STATUS.NOTYET);\n\n    assert.notDeepEqual(ret.value, put(memberStatusPolling()));\n\n    //gen calls yield call(delay,STATUS_POLLING_DURATION_MS)\n    //gen.next()ではdelayが発生してテストに時間がかかってしまうため、trueを注入する\n    ret = gen.next(true);\n\n    assert(!ret.done);\n  });\n});\n",
    "static": true,
    "longname": "test/saga/board.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 576,
    "kind": "testDescribe",
    "name": "describe167",
    "testId": 167,
    "memberof": "test/saga/board.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/board.test.js~describe167",
    "access": null,
    "description": "loadMemberStatusSaga",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loadMemberStatusSaga}"
      }
    ],
    "testTargets": [
      "loadMemberStatusSaga"
    ]
  },
  {
    "__docId__": 577,
    "kind": "testIt",
    "name": "it168",
    "testId": 168,
    "memberof": "test/saga/board.test.js~describe167",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/board.test.js~describe167.it168",
    "access": null,
    "description": "takes every LOGIN_SUCCESS,MY_DESTINATION_SAVE_COMPLETE and MEMBER_STATUS_POLLING and pass it to loadMemberStatusTask",
    "lineNumber": 15
  },
  {
    "__docId__": 578,
    "kind": "testDescribe",
    "name": "describe169",
    "testId": 169,
    "memberof": "test/saga/board.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/board.test.js~describe169",
    "access": null,
    "description": "loadMemberStatusTask",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loadMemberStatusTask}"
      }
    ],
    "testTargets": [
      "loadMemberStatusTask"
    ]
  },
  {
    "__docId__": 579,
    "kind": "testIt",
    "name": "it170",
    "testId": 170,
    "memberof": "test/saga/board.test.js~describe169",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/board.test.js~describe169.it170",
    "access": null,
    "description": "gets all member status from server via API and puts UPDATE_MEMBER_STATUS action with the result",
    "lineNumber": 31
  },
  {
    "__docId__": 580,
    "kind": "testDescribe",
    "name": "describe171",
    "testId": 171,
    "memberof": "test/saga/board.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/board.test.js~describe171",
    "access": null,
    "description": "watchMemberStatusSaga",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{watchMemberStatusSaga}"
      }
    ],
    "testTargets": [
      "watchMemberStatusSaga"
    ]
  },
  {
    "__docId__": 581,
    "kind": "testIt",
    "name": "it172",
    "testId": 172,
    "memberof": "test/saga/board.test.js~describe171",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/board.test.js~describe171.it172",
    "access": null,
    "description": "creates generator which never ends",
    "lineNumber": 76
  },
  {
    "__docId__": 582,
    "kind": "testIt",
    "name": "it173",
    "testId": 173,
    "memberof": "test/saga/board.test.js~describe171",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/board.test.js~describe171.it173",
    "access": null,
    "description": "puts MEMBER_STATUS_POLLING action if user has been logged in",
    "lineNumber": 93
  },
  {
    "__docId__": 583,
    "kind": "testIt",
    "name": "it174",
    "testId": 174,
    "memberof": "test/saga/board.test.js~describe171",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/board.test.js~describe171.it174",
    "access": null,
    "description": "doesn't put any action if user hasn't been logged in",
    "lineNumber": 110
  },
  {
    "__docId__": 584,
    "kind": "testFile",
    "name": "test/saga/group.test.js",
    "content": "import assert from \"power-assert\";\nimport {\n  groupSaga,\n  loadUserGroupsSaga,\n  loadUserGroupsTask,\n  fetchMemberTask,\n  createGroupSaga,\n  createGroupTask,\n  addMemberToGroupSaga,\n  addMemberToGroupTask,\n  deleteMemberFromGroupSaga,\n  deleteMemberFromGroupTask,\n  setMemberAsGroupAdminSaga,\n  setMemberAsGroupAdminTask,\n  unsetMemberAsGroupAdminSaga,\n  unsetMemberAsGroupAdminTask,\n  changeGroupNameSaga,\n  changeGroupNameTask,\n  deleteGroupSaga,\n  deleteGroupTask\n} from '../../src/saga/group';\nimport {\n  groupsLoaded,\n  groupMemberLoaded,\n  createGroupRequired,\n  createGroupSuccess,\n  createGroupFailure,\n  addMemberToGroupRequired,\n  addMemberToGroupSuccess,\n  addMemberToGroupFailure,\n  deleteMemberFromGroupRequired,\n  deleteMemberFromGroupSuccess,\n  deleteMemberFromGroupFailure,\n  setMemberAsGroupAdminRequired,\n  setMemberAsGroupAdminSuccess,\n  setMemberAsGroupAdminFailure,\n  unsetMemberAsGroupAdminRequired,\n  unsetMemberAsGroupAdminSuccess,\n  unsetMemberAsGroupAdminFailure,\n  changeGroupNameRequired,\n  changeGroupNameSuccess,\n  changeGroupNameFailure,\n  deleteGroupRequired,\n  deleteGroupSuccess,\n  deleteGroupFailure\n} from '../../src/action/group';\nimport {UPDATE_MEMBER_STATUS} from '../../src/action/board';\nimport {\n  CREATE_GROUP_REQUIRED,\n  CREATE_GROUP_SUCCESS,\n  ADD_MEMBER_TO_GROUP_REQUIRED,\n  ADD_MEMBER_TO_GROUP_SUCCESS,\n  DELETE_MEMBER_FROM_GROUP_REQUIRED,\n  DELETE_MEMBER_FROM_GROUP_SUCCESS,\n  SET_MEMBER_AS_GROUP_ADMIN_REQUIRED,\n  SET_MEMBER_AS_GROUP_ADMIN_SUCCESS,\n  UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED,\n  UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS,\n  CHANGE_GROUP_NAME_REQUIRED,\n  CHANGE_GROUP_NAME_SUCCESS,\n  DELETE_GROUP_REQUIRED,\n  DELETE_GROUP_SUCCESS\n} from '../../src/action/group';\nimport {take,put,select,takeEvery,call,fork} from 'redux-saga/effects';\nimport {getApiBaseURL} from  '../../src/module/environment';\nimport axios from \"axios\";\n\nconst BASE_API_URL = getApiBaseURL();\n\n/**@test {groupSaga}*/\ndescribe(\"groupSaga\",()=>{\n  it(\"forks every group related sagas\",()=>{\n    const gen = groupSaga();\n\n    let ret = gen.next();\n    assert.deepEqual(ret.value,fork(loadUserGroupsSaga));\n    ret = gen.next();\n    assert.deepEqual(ret.value,fork(createGroupSaga));\n    ret = gen.next();\n    assert.deepEqual(ret.value,fork(addMemberToGroupSaga));\n    ret = gen.next();\n    assert.deepEqual(ret.value,fork(deleteMemberFromGroupSaga));\n    ret = gen.next();\n    assert.deepEqual(ret.value,fork(setMemberAsGroupAdminSaga));\n    ret = gen.next();\n    assert.deepEqual(ret.value,fork(unsetMemberAsGroupAdminSaga));\n    ret = gen.next();\n    assert.deepEqual(ret.value,fork(changeGroupNameSaga));\n    ret = gen.next();\n    assert.deepEqual(ret.value,fork(deleteGroupSaga));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {loadUserGroupsSaga} */\ndescribe(\"loadUserGroupsSaga\",()=>{\n  it(\"takes every UPDATE_MEMBER_STATUS action and XXX_SUCCESS actions and pass it to loadUserGroupsTask\",()=>{\n    const gen = loadUserGroupsSaga();\n\n    let ret = gen.next();\n    assert.deepEqual(ret.value, takeEvery(UPDATE_MEMBER_STATUS,loadUserGroupsTask));\n    ret = gen.next();\n    assert.deepEqual(ret.value, takeEvery(CREATE_GROUP_SUCCESS,loadUserGroupsTask));\n    ret = gen.next();\n    assert.deepEqual(ret.value, takeEvery(ADD_MEMBER_TO_GROUP_SUCCESS,loadUserGroupsTask));\n    ret = gen.next();\n    assert.deepEqual(ret.value, takeEvery(DELETE_MEMBER_FROM_GROUP_SUCCESS,loadUserGroupsTask));\n    ret = gen.next();\n    assert.deepEqual(ret.value, takeEvery(SET_MEMBER_AS_GROUP_ADMIN_SUCCESS,loadUserGroupsTask));\n    ret = gen.next();\n    assert.deepEqual(ret.value, takeEvery(UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS,loadUserGroupsTask));\n    ret = gen.next();\n    assert.deepEqual(ret.value, takeEvery(CHANGE_GROUP_NAME_SUCCESS,loadUserGroupsTask));\n    ret = gen.next();\n    assert.deepEqual(ret.value, takeEvery(DELETE_GROUP_SUCCESS,loadUserGroupsTask));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {loadUserGroupsTask} */\ndescribe(\"loadUserGroupsTask\",()=>{\n  it(\"puts GROUPS_LOADED action with API Result and calls fetchMemberTask for each groups\",()=>{\n    const dummyToken = \"dummyToken\";\n    const dummyLogonUserId = \"userid1\";\n    const dummyAPIResult = {\n      data:[\n        {\n          \"id\": \"g0001\",\n          \"name\": \"groupname1\",\n          \"admin\": [\n            \"userid1\",\n            \"userid2\"\n          ]\n        },\n        {\n          \"id\": \"g0002\",\n          \"name\": \"groupname2\",\n          \"admin\": [\n            \"userid3\"\n          ]\n        }\n      ]\n    };\n\n    const gen = loadUserGroupsTask();\n\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n\n    ret = gen.next(dummyLogonUserId);\n    assert.deepEqual(ret.value,call(axios,{\n      method:\"GET\",\n      url:BASE_API_URL + \"group\",\n      headers: { \"Authorization\": \"Bearer \" + dummyToken}\n    }));\n\n    ret = gen.next(dummyAPIResult);\n    assert.deepEqual(ret.value, put(groupsLoaded(dummyAPIResult.data)));\n\n    ret = gen.next();\n    assert.deepEqual(ret.value, dummyAPIResult.data.map(group => call(fetchMemberTask,group,dummyToken,dummyLogonUserId)));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n});\n\n/**@test {fetchMemberTask} */\ndescribe(\"fetchMemberTask\",()=>{\n  it(\"puts GROUP_MEMBER_LOADED action with API Result\",()=>{\n    const dummyToken = \"dummyToken\";\n    const dummyLogonUserId = \"userid1\";\n    const dummyGroup = {\n      \"id\": \"g0001\",\n      \"name\": \"groupname1\",\n      \"admin\": [\n        \"userid1\",\n        \"userid2\"\n      ]\n    };\n    const dummyAPIResult = {\n      data:{\n        \"members\": [\n          \"userid1\",\n          \"userid2\"\n        ]\n      }\n    };\n    const dummyMemberStatus = [\n      {userid:\"userid1\",name:\"Aさん\",inBusiness:false,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"userid2\",name:\"Bさん\",inBusiness:true,comment:\"在宅勤務\",contact:\"090-YYY-YYYY\",lastUpdate:\"2017/05/01 10:00:00\"}\n    ];\n\n    const gen = fetchMemberTask(dummyGroup,dummyToken,dummyLogonUserId);\n\n    let ret = gen.next();\n    assert.deepEqual(ret.value,call(axios,{\n      method:\"GET\",\n      url:BASE_API_URL + \"group/\" + dummyGroup.id + \"/member\",\n      headers: { \"Authorization\": \"Bearer \" + dummyToken}\n    }));\n\n    ret = gen.next(dummyAPIResult);\n\n    ret = gen.next(dummyMemberStatus);\n    assert.deepEqual(ret.value, put(groupMemberLoaded(Object.assign({},dummyGroup,{member:dummyMemberStatus}),dummyLogonUserId)))\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n});\n\n/**@test {createGroupSaga} */\ndescribe(\"createGroupSaga\",()=>{\n  it(\"takes every CREATE_GROUP_REQUIRED action and pass it to createGroupTask\",()=>{\n    const gen = createGroupSaga();\n    let ret = gen.next();\n\n    assert.deepEqual(ret.value, takeEvery(CREATE_GROUP_REQUIRED,createGroupTask));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n});\n\n/**@test {createGroupTask} */\ndescribe(\"createGroupTask\",()=>{\n  it(\"puts CREATE_GROUP_SUCCESS action if server side api returns success\",()=>{\n    const dummyGroupName = \"test group name\";\n    const dummyAction = createGroupRequired(dummyGroupName);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = createGroupTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    assert.deepEqual(ret.value,call(\n      axios.post,\n      BASE_API_URL + \"group\",\n      {\"groupname\": dummyGroupName},\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.next({\n      data:{\n        \"message\": \"ok\",\n        \"groupId\": \"g0001\"\n      }\n    });\n\n    assert.deepEqual(ret.value,put(createGroupSuccess(\"g0001\")));\n\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n\n  it(\"puts CREATE_GROUP_FAILURE action if server side api returns failure\",()=>{\n    const dummyGroupName = \"test group name\";\n    const dummyAction = createGroupRequired(dummyGroupName);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = createGroupTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    assert.deepEqual(ret.value,call(\n      axios.post,\n      BASE_API_URL + \"group\",\n      {\"groupname\": dummyGroupName},\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.throw(new Error(JSON.stringify({\n      \"message\": \"user post is faild\"\n    })));\n\n    assert.deepEqual(ret.value,put(createGroupFailure()));\n\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {addMemberToGroupSaga}*/\ndescribe(\"addMemberToGroupSaga\",()=>{\n  it(\"takes every ADD_MEMBER_TO_GROUP_REQUIRED action and pass it to addMemberToGroupTask\",()=>{\n    const gen = addMemberToGroupSaga();\n    let ret = gen.next();\n\n    assert.deepEqual(ret.value, takeEvery(ADD_MEMBER_TO_GROUP_REQUIRED,addMemberToGroupTask));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n});\n\n/**\n* グループ編集に関するテストの共用テストデータ\n*/\nconst DUMMY_CURRENT_GROUPS = [\n  {\n    \"id\": \"g0001\",\n    \"name\": \"groupname1\",\n    \"admin\": [\n      \"testA\",\n      \"testB\"\n    ],\n    \"member\":[\n      {userid:\"testA\",name:\"Aさん\",inBusiness:false,comment:\"\",contact:\"090-XXX-XXXX\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testB\",name:\"Bさん\",inBusiness:true,comment:\"在宅勤務\",contact:\"090-YYY-YYYY\",lastUpdate:\"2017/05/01 10:00:00\"}\n    ]\n  },\n  {\n    \"id\": \"g0002\",\n    \"name\": \"groupname2\",\n    \"admin\": [\n      \"testC\"\n    ],\n    \"member\":[\n      {userid:\"testC\",name:\"Cさん\",inBusiness:true,comment:\"京橋\",contact:\"\",lastUpdate:\"2017/05/01 10:00:00\"},\n      {userid:\"testD\",name:\"Dさん\",inBusiness:true,comment:\"自席\",contact:\"090-ZZZZ-ZZZZ\",lastUpdate:\"2017/05/01 10:00:00\"}\n    ]\n  }\n];\n\n/**@test {addMemberToGroupTask}*/\ndescribe(\"addMemberToGroupTask\",()=>{\n  it(\"puts ADD_MEMBER_TO_GROUP_SUCCESS action if server side api returns success\",()=>{\n    const dummyTargetGroupId = \"g0001\";\n    const dummyTargetMemberId = \"testC\";\n    const dummyAction = addMemberToGroupRequired(dummyTargetGroupId,dummyTargetMemberId);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = addMemberToGroupTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId + \"/member\",\n      {\"member\": [\n        \"testA\",\n        \"testB\",\n        dummyTargetMemberId\n      ]},\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.next(JSON.stringify(\n      {\n        \"message\": \"ok\"\n      }\n    ));\n\n    assert.deepEqual(ret.value,put(addMemberToGroupSuccess()));\n  });\n\n  it(\"puts ADD_MEMBER_TO_GROUP_FAILURE action if server side api returns failure\",()=>{\n    const dummyTargetGroupId = \"g0001\";\n    const dummyTargetMemberId = \"testC\";\n    const dummyAction = addMemberToGroupRequired(dummyTargetGroupId,dummyTargetMemberId);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = addMemberToGroupTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId + \"/member\",\n      {\"member\": [\n        \"testA\",\n        \"testB\",\n        dummyTargetMemberId\n      ]},\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.throw(new Error(JSON.stringify(\n      {\n        \"message\": \"invalid token\"\n      }\n    )));\n\n    assert.deepEqual(ret.value,put(addMemberToGroupFailure()));\n  });\n});\n\n/**@test {deleteMemberFromGroupSaga}*/\ndescribe(\"deleteMemberFromGroupSaga\",()=>{\n  it(\"takes every DELETE_MEMBER_FROM_GROUP_REQUIRED action and pass it to deleteMemberFromGroupTask\",()=>{\n    const gen = deleteMemberFromGroupSaga();\n    let ret = gen.next();\n\n    assert.deepEqual(ret.value,takeEvery(DELETE_MEMBER_FROM_GROUP_REQUIRED,deleteMemberFromGroupTask));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {deleteMemberFromGroupTask}*/\ndescribe(\"deleteMemberFromGroupTask\",()=>{\n  it(\"puts DELETE_MEMBER_FROM_GROUP_SUCCESS action if server side api returns success\",()=>{\n    const dummyTargetGroupId = \"g0002\";\n    const dummyTargetMemberId = \"testD\";\n    const dummyAction = deleteMemberFromGroupRequired(dummyTargetGroupId,dummyTargetMemberId);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = deleteMemberFromGroupTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId + \"/member\",\n      {\"member\": [\"testC\"]},\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.next(JSON.stringify(\n      {\n        \"message\":\"ok\"\n      }\n    ));\n\n    assert.deepEqual(ret.value,put(deleteMemberFromGroupSuccess()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n  it(\"puts DELETE_MEMBER_FROM_GROUP_FAILURE action if server side api returns failure\",()=>{\n    const dummyTargetGroupId = \"g0002\";\n    const dummyTargetMemberId = \"testD\";\n    const dummyAction = deleteMemberFromGroupRequired(dummyTargetGroupId,dummyTargetMemberId);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = deleteMemberFromGroupTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId + \"/member\",\n      {\"member\": [\"testC\"]},\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.throw(new Error(JSON.stringify(\n      {\n        \"message\":\"invalid token\"\n      }\n    )));\n\n    assert.deepEqual(ret.value,put(deleteMemberFromGroupFailure()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {setMemberAsGroupAdminSaga}*/\ndescribe(\"setMemberAsGroupAdminSaga\",()=>{\n  it(\"takes every SET_MEMBER_AS_GROUP_ADMIN_REQUIRED action and pass it to setMemberAsGroupAdminTask\",()=>{\n    const gen = setMemberAsGroupAdminSaga();\n    let ret = gen.next();\n\n    assert.deepEqual(ret.value, takeEvery(SET_MEMBER_AS_GROUP_ADMIN_REQUIRED,setMemberAsGroupAdminTask));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {setMemberAsGroupAdminTask}*/\ndescribe(\"setMemberAsGroupAdminTask\",()=>{\n  it(\"puts SET_MEMBER_AS_GROUP_ADMIN_SUCCESS action if server side api returns success\",()=>{\n    const dummyTargetGroupId = \"g0002\";\n    const dummyTargetMemberId = \"testD\";\n    const dummyAction = setMemberAsGroupAdminRequired(dummyTargetGroupId,dummyTargetMemberId);\n\n    const dummyToken = \"dummyToken\";\n\n    const gen = setMemberAsGroupAdminTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId,\n      {\n        \"groupname\": \"groupname2\",\n        \"admin\" : [\"testC\",dummyTargetMemberId]\n      },\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.next(JSON.stringify(\n      {\"message\":\"ok\"}\n    ));\n\n    assert.deepEqual(ret.value, put(setMemberAsGroupAdminSuccess()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n  it(\"puts SET_MEMBER_AS_GROUP_ADMIN_FAILURE action if server side api returns failure\",()=>{\n    const dummyTargetGroupId = \"g0002\";\n    const dummyTargetMemberId = \"testD\";\n    const dummyAction = setMemberAsGroupAdminRequired(dummyTargetGroupId,dummyTargetMemberId);\n\n    const dummyToken = \"dummyToken\";\n\n    const gen = setMemberAsGroupAdminTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId,\n      {\n        \"groupname\": \"groupname2\",\n        \"admin\" : [\"testC\",dummyTargetMemberId]\n      },\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.throw(new Error(JSON.stringify(\n      {\"message\":\"invalid token\"}\n    )));\n\n    assert.deepEqual(ret.value, put(setMemberAsGroupAdminFailure()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {unsetMemberAsGroupAdminSaga}*/\ndescribe(\"unsetMemberAsGroupAdminSaga\",()=>{\n  it(\"takes every UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED action and pass it to unsetMemberAsGroupAdminTask\",()=>{\n    const gen = unsetMemberAsGroupAdminSaga();\n    let ret = gen.next();\n\n    assert.deepEqual(ret.value, takeEvery(UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED,unsetMemberAsGroupAdminTask));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {unsetMemberAsGroupAdminTask}*/\ndescribe(\"unsetMemberAsGroupAdminTask\",()=>{\n  it(\"puts UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS action if server side api returns success\",()=>{\n    const dummyTargetGroupId = \"g0001\";\n    const dummyTargetMemberId = \"testA\";\n    const dummyAction = unsetMemberAsGroupAdminRequired(dummyTargetGroupId,dummyTargetMemberId);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = unsetMemberAsGroupAdminTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId,\n      {\n        \"groupname\": \"groupname1\",\n        \"admin\" : [\"testB\"]\n      },\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.next(JSON.stringify(\n      {\"message\":\"ok\"}\n    ));\n\n    assert(ret.value, put(unsetMemberAsGroupAdminSuccess()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n  it(\"puts UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE action if server side api returns failure\",()=>{\n    const dummyTargetGroupId = \"g0001\";\n    const dummyTargetMemberId = \"testA\";\n    const dummyAction = unsetMemberAsGroupAdminRequired(dummyTargetGroupId,dummyTargetMemberId);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = unsetMemberAsGroupAdminTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId,\n      {\n        \"groupname\": \"groupname1\",\n        \"admin\" : [\"testB\"]\n      },\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.throw(new Error(JSON.stringify(\n      {\"message\":\"invalid token\"}\n    )));\n\n    assert(ret.value, put(unsetMemberAsGroupAdminFailure()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {changeGroupNameSaga}*/\ndescribe(\"changeGroupNameSaga\",()=>{\n  it(\"takes every CHANGE_GROUP_NAME_REQUIRED action and pass it to changeGroupNameTask\",()=>{\n    const gen = changeGroupNameSaga();\n    let ret = gen.next();\n\n    assert(ret.value, takeEvery(CHANGE_GROUP_NAME_REQUIRED, changeGroupNameTask));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {changeGroupNameTask}*/\ndescribe(\"changeGroupNameTask\",()=>{\n  it(\"puts CHANGE_GROUP_NAME_SUCCESS action if server side api returns success\",()=>{\n    const dummyTargetGroupId = \"g0001\";\n    const dummyNewGroupName = \"groupname1 updated\";\n    const dummyAction = changeGroupNameRequired(dummyTargetGroupId,dummyNewGroupName);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = changeGroupNameTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId,\n      {\n        \"groupname\": dummyNewGroupName,\n        \"admin\" : [\"testA\",\"testB\"]\n      },\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.next(JSON.stringify(\n      {\"message\":\"ok\"}\n    ));\n\n    assert.deepEqual(ret.value, put(changeGroupNameSuccess()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n  it(\"puts CHANGE_GROUP_NAME_FAILURE action if server side api returns failure\",()=>{\n    const dummyTargetGroupId = \"g0001\";\n    const dummyNewGroupName = \"groupname1 updated\";\n    const dummyAction = changeGroupNameRequired(dummyTargetGroupId,dummyNewGroupName);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = changeGroupNameTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n    ret = gen.next(DUMMY_CURRENT_GROUPS);\n\n    assert.deepEqual(ret.value,call(\n      axios.put,\n      BASE_API_URL + \"group/\" + dummyTargetGroupId,\n      {\n        \"groupname\": dummyNewGroupName,\n        \"admin\" : [\"testA\",\"testB\"]\n      },\n      {headers:{\"Authorization\":\"Bearer \" + dummyToken}}\n    ));\n\n    ret = gen.throw(new Error(JSON.stringify(\n      {\"message\":\"invalid token\"}\n    )));\n\n    assert.deepEqual(ret.value, put(changeGroupNameFailure()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {deleteGroupSaga}*/\ndescribe(\"deleteGroupSaga\",()=>{\n  it(\"takes every DELETE_GROUP_REQUIRED action and pass it to deleteGroupTask\",()=>{\n    const gen = deleteGroupSaga();\n    let ret = gen.next();\n\n    assert.deepEqual(ret.value, takeEvery(DELETE_GROUP_REQUIRED,deleteGroupTask));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {deleteGroupTask}*/\ndescribe(\"deleteGroupTask\",()=>{\n  it(\"puts DELETE_GROUP_SUCCESS action if server side api returns success\",()=>{\n    const dummyTargetGroupId = \"g0001\";\n    const dummyAction = deleteGroupRequired(dummyTargetGroupId);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = deleteGroupTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n\n    assert.deepEqual(ret.value,call(axios,{\n      method:\"DELETE\",\n      url:BASE_API_URL + \"group/\" + dummyTargetGroupId,\n      headers: { \"Authorization\": \"Bearer \" + dummyToken}\n    }));\n\n    ret = gen.next(JSON.stringify(\n      {\"message\":\"ok\"}\n    ));\n\n    assert.deepEqual(ret.value,put(deleteGroupSuccess()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n  it(\"puts DELETE_GROUP_FAILURE action if server side api returns failure\",()=>{\n    const dummyTargetGroupId = \"g0001\";\n    const dummyAction = deleteGroupRequired(dummyTargetGroupId);\n\n    const dummyToken = \"dummytoken\";\n\n    const gen = deleteGroupTask(dummyAction);\n    let ret = gen.next();\n\n    ret = gen.next(dummyToken);\n\n    assert.deepEqual(ret.value,call(axios,{\n      method:\"DELETE\",\n      url:BASE_API_URL + \"group/\" + dummyTargetGroupId,\n      headers: { \"Authorization\": \"Bearer \" + dummyToken}\n    }));\n\n    ret = gen.throw(new Error(JSON.stringify(\n      {\"message\":\"ok\"}\n    )));\n\n    assert.deepEqual(ret.value,put(deleteGroupFailure()));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n",
    "static": true,
    "longname": "test/saga/group.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 585,
    "kind": "testDescribe",
    "name": "describe175",
    "testId": 175,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe175",
    "access": null,
    "description": "groupSaga",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{groupSaga}"
      }
    ],
    "testTargets": [
      "groupSaga"
    ]
  },
  {
    "__docId__": 586,
    "kind": "testIt",
    "name": "it176",
    "testId": 176,
    "memberof": "test/saga/group.test.js~describe175",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe175.it176",
    "access": null,
    "description": "forks every group related sagas",
    "lineNumber": 72
  },
  {
    "__docId__": 587,
    "kind": "testDescribe",
    "name": "describe177",
    "testId": 177,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe177",
    "access": null,
    "description": "loadUserGroupsSaga",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loadUserGroupsSaga}"
      }
    ],
    "testTargets": [
      "loadUserGroupsSaga"
    ]
  },
  {
    "__docId__": 588,
    "kind": "testIt",
    "name": "it178",
    "testId": 178,
    "memberof": "test/saga/group.test.js~describe177",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe177.it178",
    "access": null,
    "description": "takes every UPDATE_MEMBER_STATUS action and XXX_SUCCESS actions and pass it to loadUserGroupsTask",
    "lineNumber": 99
  },
  {
    "__docId__": 589,
    "kind": "testDescribe",
    "name": "describe179",
    "testId": 179,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe179",
    "access": null,
    "description": "loadUserGroupsTask",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loadUserGroupsTask}"
      }
    ],
    "testTargets": [
      "loadUserGroupsTask"
    ]
  },
  {
    "__docId__": 590,
    "kind": "testIt",
    "name": "it180",
    "testId": 180,
    "memberof": "test/saga/group.test.js~describe179",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe179.it180",
    "access": null,
    "description": "puts GROUPS_LOADED action with API Result and calls fetchMemberTask for each groups",
    "lineNumber": 126
  },
  {
    "__docId__": 591,
    "kind": "testDescribe",
    "name": "describe181",
    "testId": 181,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe181",
    "access": null,
    "description": "fetchMemberTask",
    "lineNumber": 174,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{fetchMemberTask}"
      }
    ],
    "testTargets": [
      "fetchMemberTask"
    ]
  },
  {
    "__docId__": 592,
    "kind": "testIt",
    "name": "it182",
    "testId": 182,
    "memberof": "test/saga/group.test.js~describe181",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe181.it182",
    "access": null,
    "description": "puts GROUP_MEMBER_LOADED action with API Result",
    "lineNumber": 175
  },
  {
    "__docId__": 593,
    "kind": "testDescribe",
    "name": "describe183",
    "testId": 183,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe183",
    "access": null,
    "description": "createGroupSaga",
    "lineNumber": 219,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{createGroupSaga}"
      }
    ],
    "testTargets": [
      "createGroupSaga"
    ]
  },
  {
    "__docId__": 594,
    "kind": "testIt",
    "name": "it184",
    "testId": 184,
    "memberof": "test/saga/group.test.js~describe183",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe183.it184",
    "access": null,
    "description": "takes every CREATE_GROUP_REQUIRED action and pass it to createGroupTask",
    "lineNumber": 220
  },
  {
    "__docId__": 595,
    "kind": "testDescribe",
    "name": "describe185",
    "testId": 185,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe185",
    "access": null,
    "description": "createGroupTask",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{createGroupTask}"
      }
    ],
    "testTargets": [
      "createGroupTask"
    ]
  },
  {
    "__docId__": 596,
    "kind": "testIt",
    "name": "it186",
    "testId": 186,
    "memberof": "test/saga/group.test.js~describe185",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe185.it186",
    "access": null,
    "description": "puts CREATE_GROUP_SUCCESS action if server side api returns success",
    "lineNumber": 233
  },
  {
    "__docId__": 597,
    "kind": "testIt",
    "name": "it187",
    "testId": 187,
    "memberof": "test/saga/group.test.js~describe185",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe185.it187",
    "access": null,
    "description": "puts CREATE_GROUP_FAILURE action if server side api returns failure",
    "lineNumber": 264
  },
  {
    "__docId__": 598,
    "kind": "testDescribe",
    "name": "describe188",
    "testId": 188,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe188",
    "access": null,
    "description": "addMemberToGroupSaga",
    "lineNumber": 294,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{addMemberToGroupSaga}"
      }
    ],
    "testTargets": [
      "addMemberToGroupSaga"
    ]
  },
  {
    "__docId__": 599,
    "kind": "testIt",
    "name": "it189",
    "testId": 189,
    "memberof": "test/saga/group.test.js~describe188",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe188.it189",
    "access": null,
    "description": "takes every ADD_MEMBER_TO_GROUP_REQUIRED action and pass it to addMemberToGroupTask",
    "lineNumber": 295
  },
  {
    "__docId__": 600,
    "kind": "testDescribe",
    "name": "describe190",
    "testId": 190,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe190",
    "access": null,
    "description": "addMemberToGroupTask",
    "lineNumber": 336,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{addMemberToGroupTask}"
      }
    ],
    "testTargets": [
      "addMemberToGroupTask"
    ]
  },
  {
    "__docId__": 601,
    "kind": "testIt",
    "name": "it191",
    "testId": 191,
    "memberof": "test/saga/group.test.js~describe190",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe190.it191",
    "access": null,
    "description": "puts ADD_MEMBER_TO_GROUP_SUCCESS action if server side api returns success",
    "lineNumber": 337
  },
  {
    "__docId__": 602,
    "kind": "testIt",
    "name": "it192",
    "testId": 192,
    "memberof": "test/saga/group.test.js~describe190",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe190.it192",
    "access": null,
    "description": "puts ADD_MEMBER_TO_GROUP_FAILURE action if server side api returns failure",
    "lineNumber": 370
  },
  {
    "__docId__": 603,
    "kind": "testDescribe",
    "name": "describe193",
    "testId": 193,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe193",
    "access": null,
    "description": "deleteMemberFromGroupSaga",
    "lineNumber": 405,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{deleteMemberFromGroupSaga}"
      }
    ],
    "testTargets": [
      "deleteMemberFromGroupSaga"
    ]
  },
  {
    "__docId__": 604,
    "kind": "testIt",
    "name": "it194",
    "testId": 194,
    "memberof": "test/saga/group.test.js~describe193",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe193.it194",
    "access": null,
    "description": "takes every DELETE_MEMBER_FROM_GROUP_REQUIRED action and pass it to deleteMemberFromGroupTask",
    "lineNumber": 406
  },
  {
    "__docId__": 605,
    "kind": "testDescribe",
    "name": "describe195",
    "testId": 195,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe195",
    "access": null,
    "description": "deleteMemberFromGroupTask",
    "lineNumber": 418,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{deleteMemberFromGroupTask}"
      }
    ],
    "testTargets": [
      "deleteMemberFromGroupTask"
    ]
  },
  {
    "__docId__": 606,
    "kind": "testIt",
    "name": "it196",
    "testId": 196,
    "memberof": "test/saga/group.test.js~describe195",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe195.it196",
    "access": null,
    "description": "puts DELETE_MEMBER_FROM_GROUP_SUCCESS action if server side api returns success",
    "lineNumber": 419
  },
  {
    "__docId__": 607,
    "kind": "testIt",
    "name": "it197",
    "testId": 197,
    "memberof": "test/saga/group.test.js~describe195",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe195.it197",
    "access": null,
    "description": "puts DELETE_MEMBER_FROM_GROUP_FAILURE action if server side api returns failure",
    "lineNumber": 450
  },
  {
    "__docId__": 608,
    "kind": "testDescribe",
    "name": "describe198",
    "testId": 198,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe198",
    "access": null,
    "description": "setMemberAsGroupAdminSaga",
    "lineNumber": 484,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{setMemberAsGroupAdminSaga}"
      }
    ],
    "testTargets": [
      "setMemberAsGroupAdminSaga"
    ]
  },
  {
    "__docId__": 609,
    "kind": "testIt",
    "name": "it199",
    "testId": 199,
    "memberof": "test/saga/group.test.js~describe198",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe198.it199",
    "access": null,
    "description": "takes every SET_MEMBER_AS_GROUP_ADMIN_REQUIRED action and pass it to setMemberAsGroupAdminTask",
    "lineNumber": 485
  },
  {
    "__docId__": 610,
    "kind": "testDescribe",
    "name": "describe200",
    "testId": 200,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe200",
    "access": null,
    "description": "setMemberAsGroupAdminTask",
    "lineNumber": 497,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{setMemberAsGroupAdminTask}"
      }
    ],
    "testTargets": [
      "setMemberAsGroupAdminTask"
    ]
  },
  {
    "__docId__": 611,
    "kind": "testIt",
    "name": "it201",
    "testId": 201,
    "memberof": "test/saga/group.test.js~describe200",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe200.it201",
    "access": null,
    "description": "puts SET_MEMBER_AS_GROUP_ADMIN_SUCCESS action if server side api returns success",
    "lineNumber": 498
  },
  {
    "__docId__": 612,
    "kind": "testIt",
    "name": "it202",
    "testId": 202,
    "memberof": "test/saga/group.test.js~describe200",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe200.it202",
    "access": null,
    "description": "puts SET_MEMBER_AS_GROUP_ADMIN_FAILURE action if server side api returns failure",
    "lineNumber": 530
  },
  {
    "__docId__": 613,
    "kind": "testDescribe",
    "name": "describe203",
    "testId": 203,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe203",
    "access": null,
    "description": "unsetMemberAsGroupAdminSaga",
    "lineNumber": 565,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{unsetMemberAsGroupAdminSaga}"
      }
    ],
    "testTargets": [
      "unsetMemberAsGroupAdminSaga"
    ]
  },
  {
    "__docId__": 614,
    "kind": "testIt",
    "name": "it204",
    "testId": 204,
    "memberof": "test/saga/group.test.js~describe203",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe203.it204",
    "access": null,
    "description": "takes every UNSET_MEMBER_AS_GROUP_ADMIN_REQUIRED action and pass it to unsetMemberAsGroupAdminTask",
    "lineNumber": 566
  },
  {
    "__docId__": 615,
    "kind": "testDescribe",
    "name": "describe205",
    "testId": 205,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe205",
    "access": null,
    "description": "unsetMemberAsGroupAdminTask",
    "lineNumber": 578,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{unsetMemberAsGroupAdminTask}"
      }
    ],
    "testTargets": [
      "unsetMemberAsGroupAdminTask"
    ]
  },
  {
    "__docId__": 616,
    "kind": "testIt",
    "name": "it206",
    "testId": 206,
    "memberof": "test/saga/group.test.js~describe205",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe205.it206",
    "access": null,
    "description": "puts UNSET_MEMBER_AS_GROUP_ADMIN_SUCCESS action if server side api returns success",
    "lineNumber": 579
  },
  {
    "__docId__": 617,
    "kind": "testIt",
    "name": "it207",
    "testId": 207,
    "memberof": "test/saga/group.test.js~describe205",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe205.it207",
    "access": null,
    "description": "puts UNSET_MEMBER_AS_GROUP_ADMIN_FAILURE action if server side api returns failure",
    "lineNumber": 611
  },
  {
    "__docId__": 618,
    "kind": "testDescribe",
    "name": "describe208",
    "testId": 208,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe208",
    "access": null,
    "description": "changeGroupNameSaga",
    "lineNumber": 646,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeGroupNameSaga}"
      }
    ],
    "testTargets": [
      "changeGroupNameSaga"
    ]
  },
  {
    "__docId__": 619,
    "kind": "testIt",
    "name": "it209",
    "testId": 209,
    "memberof": "test/saga/group.test.js~describe208",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe208.it209",
    "access": null,
    "description": "takes every CHANGE_GROUP_NAME_REQUIRED action and pass it to changeGroupNameTask",
    "lineNumber": 647
  },
  {
    "__docId__": 620,
    "kind": "testDescribe",
    "name": "describe210",
    "testId": 210,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe210",
    "access": null,
    "description": "changeGroupNameTask",
    "lineNumber": 659,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeGroupNameTask}"
      }
    ],
    "testTargets": [
      "changeGroupNameTask"
    ]
  },
  {
    "__docId__": 621,
    "kind": "testIt",
    "name": "it211",
    "testId": 211,
    "memberof": "test/saga/group.test.js~describe210",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe210.it211",
    "access": null,
    "description": "puts CHANGE_GROUP_NAME_SUCCESS action if server side api returns success",
    "lineNumber": 660
  },
  {
    "__docId__": 622,
    "kind": "testIt",
    "name": "it212",
    "testId": 212,
    "memberof": "test/saga/group.test.js~describe210",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe210.it212",
    "access": null,
    "description": "puts CHANGE_GROUP_NAME_FAILURE action if server side api returns failure",
    "lineNumber": 692
  },
  {
    "__docId__": 623,
    "kind": "testDescribe",
    "name": "describe213",
    "testId": 213,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe213",
    "access": null,
    "description": "deleteGroupSaga",
    "lineNumber": 727,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{deleteGroupSaga}"
      }
    ],
    "testTargets": [
      "deleteGroupSaga"
    ]
  },
  {
    "__docId__": 624,
    "kind": "testIt",
    "name": "it214",
    "testId": 214,
    "memberof": "test/saga/group.test.js~describe213",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe213.it214",
    "access": null,
    "description": "takes every DELETE_GROUP_REQUIRED action and pass it to deleteGroupTask",
    "lineNumber": 728
  },
  {
    "__docId__": 625,
    "kind": "testDescribe",
    "name": "describe215",
    "testId": 215,
    "memberof": "test/saga/group.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/group.test.js~describe215",
    "access": null,
    "description": "deleteGroupTask",
    "lineNumber": 740,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{deleteGroupTask}"
      }
    ],
    "testTargets": [
      "deleteGroupTask"
    ]
  },
  {
    "__docId__": 626,
    "kind": "testIt",
    "name": "it216",
    "testId": 216,
    "memberof": "test/saga/group.test.js~describe215",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe215.it216",
    "access": null,
    "description": "puts DELETE_GROUP_SUCCESS action if server side api returns success",
    "lineNumber": 741
  },
  {
    "__docId__": 627,
    "kind": "testIt",
    "name": "it217",
    "testId": 217,
    "memberof": "test/saga/group.test.js~describe215",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/group.test.js~describe215.it217",
    "access": null,
    "description": "puts DELETE_GROUP_FAILURE action if server side api returns failure",
    "lineNumber": 767
  },
  {
    "__docId__": 628,
    "kind": "testFile",
    "name": "test/saga/login.test.js",
    "content": "import assert from 'power-assert';\nimport {loginSaga,loginTask,logoutSaga,loginFailureSaga,cleanRememberMeTask,loginFromRememberMeSaga} from '../../src/saga/login';\nimport {LOGIN_REQUESTED,LOGOUT_REQUESTED,LOGIN_FAILURE,loginRequested,loginSuccess,loginFailure} from '../../src/action/login';\nimport {take,takeEvery,fork,call,put} from 'redux-saga/effects';\nimport {getApiBaseURL} from  '../../src/module/environment';\nimport axios from \"axios\";\n\nconst BASE_API_URL = getApiBaseURL();\n/**@test {loginSaga}*/\ndescribe(\"login Saga\",()=>{\n  //すべてのLOGIN_REQUESTEDを受け取り、loginTaskに受け渡す\n  it(\"takes every LOGIN_REQUESTED action and pass it to loginTask\",()=>{\n    const gen = loginSaga();\n    const ret = gen.next();\n\n    assert(!ret.done);\n    assert.deepEqual(ret.value, takeEvery(LOGIN_REQUESTED,loginTask));\n  });\n});\n/**@test {loginTask}*/\ndescribe(\"login Task\",()=>{\n  //ログインが成功した場合、LOGIN_SUCCESSアクションをputする\n  it(\"puts LOGIN_SUCCESS action if the server returns login success\",()=>{\n    const testAction = {\n      type:LOGIN_REQUESTED,\n      payload:{\n        id:\"test\",\n        pass:\"test\"\n      }\n    };\n\n    const mockTokenReturn = {\n      token:\"mockToken\"\n    };\n\n    const mockUserDataReturn = {\n      id:\"test\",\n      name:\"テスト\"\n    };\n\n    const gen = loginTask(testAction);\n    let rtn = gen.next();\n\n    rtn = gen.next(true);//localStorageへの保存は成功したものとする\n    //与えたActionのpayloadを使用してAPIへアクセスする\n    assert.deepEqual(rtn.value,call(axios.post,\n      BASE_API_URL + \"auth\",\n      {\n        userid:testAction.payload.id,\n        password:testAction.payload.pass\n      }\n    ));\n\n    rtn = gen.next({data:mockTokenReturn});//mockTokenReturnがAPIから返ってきたものとする\n    //mockTokenReturnで返ってきたtokenを使ってuser APIへアクセスする\n    assert.deepEqual(rtn.value, call(axios,{\n      method:\"GET\",\n      url:BASE_API_URL + \"user\",\n      headers:{\"Authorization\":\"Bearer \" + mockTokenReturn.token}\n    }));\n\n    rtn = gen.next({data:mockUserDataReturn});//APIからmockUserDataReturnが返ってきたものとする\n    //APIからの戻り値を使用して、LOGIN_SUCCESSアクションを作成してPUTする\n    assert.deepEqual(rtn.value, put(loginSuccess({\n      userid:mockUserDataReturn.id,\n      name:mockUserDataReturn.name,\n      token:mockTokenReturn.token\n    })));\n\n    rtn = gen.next();\n    assert(rtn.done);\n\n  });\n  //ログインに失敗した場合はLOGIN_FAILUREアクションをPUTする\n  it(\"puts LOGIN_FAILURE action if the server returns login failure\",()=>{\n    const testAction = {\n      type:LOGIN_REQUESTED,\n      payload:{\n        id:\"test\",\n        pass:\"invalid_pass\"\n      }\n    };\n\n    const gen = loginTask(testAction);\n    let rtn = gen.next();\n\n    rtn = gen.next(true);//localStorageへの保存は成功したものとする\n    //与えたActionのpayloadを使用してAPIへアクセスする\n    assert.deepEqual(rtn.value,call(axios.post,\n      BASE_API_URL + \"auth\",\n      {\n        userid:testAction.payload.id,\n        password:testAction.payload.pass\n      }\n    ));\n\n    rtn = gen.throw(new Error(\"API returns not 200 STATUS CODE\"));\n    assert.deepEqual(rtn.value, put(loginFailure()));\n\n    rtn = gen.next();\n    assert(rtn.done);\n  });\n  //rememberMeデータの保存に失敗しても処理を続ける\n  it(\"proceeds processing even if rememberMe function is not available.\",()=>{\n    const testAction = {\n      type:LOGIN_REQUESTED,\n      payload:{\n        id:\"test\",\n        pass:\"test\"\n      }\n    };\n\n    const mockTokenReturn = {\n      token:\"mockToken\"\n    };\n\n    const mockUserDataReturn = {\n      id:\"test\",\n      name:\"テスト\"\n    };\n\n    const gen = loginTask(testAction);\n    let rtn = gen.next();\n\n    rtn = gen.next(false);//localStorageへの保存が失敗\n    assert(!rtn.done); //処理が止まっていない\n    //与えたActionのpayloadを使用してAPIへアクセスする\n    assert.deepEqual(rtn.value,call(axios.post,\n      BASE_API_URL + \"auth\",\n      {\n        userid:testAction.payload.id,\n        password:testAction.payload.pass\n      }\n    ));\n  });\n});\n/**@test {logoutSaga}*/\ndescribe(\"logout Saga\",()=>{\n  //すべてのLOGOUT_REQUESTEDアクションを受け取って、cleanRememberMeTaskに引き渡す\n  it(\"takes every LOGOUT_REQUESTED action and pass it to cleanRememberMeTask\",()=>{\n    const gen = logoutSaga();\n    const ret = gen.next();\n\n    assert(!ret.done);\n    assert.deepEqual(ret.value, takeEvery(LOGOUT_REQUESTED,cleanRememberMeTask));\n  });\n});\n/**@test {loginFailure}*/\ndescribe(\"loginFailure Saga\",()=>{\n  //すべてのLOGIN_FAILUREアクションを受け取って、cleanRememberMeTaskに引き渡す\n  it(\"takes every LOGIN_FAILURE action and pass it to cleanRememberMeTask\",()=>{\n    const gen = loginFailureSaga();\n    const ret = gen.next();\n\n    assert(!ret.done);\n    assert.deepEqual(ret.value, takeEvery(LOGIN_FAILURE,cleanRememberMeTask));\n  });\n});\n/**@test {cleanRememberMeTask}*/\ndescribe(\"cleanRememberMe Task\",()=>{\n  //RememberMe用のデータを削除しようとする\n  it(\"tries to clean RememberMe data\",()=>{\n    const gen = cleanRememberMeTask();\n    let ret = gen.next();\n\n    ret = gen.next(true);//localStorageへのアクセスは成功したとする\n    assert(ret.done);\n  })\n});\n/**@test {loginFromRememberMeSaga}*/\ndescribe(\"loginFromRememberMe Saga\",()=>{\n  //rememberMeのデータが有効である場合、LOGIN_REQUESTEDアクションをputする\n  it(\"puts LOGIN_REQUESTED action if rememberMe data is available\",()=>{\n    const mockRememberMe = {\n      id:\"test\",\n      pass:\"test\"\n    };\n    const gen = loginFromRememberMeSaga();\n    let ret = gen.next();\n\n    ret = gen.next(true);//localStorage上にrememberMeデータがあるものとする\n    ret = gen.next(mockRememberMe)//mockRememberMeがストレージ上から取得できたものとする\n    assert.deepEqual(ret.value,put(loginRequested(mockRememberMe.id,mockRememberMe.pass)));\n    ret = gen.next();\n    assert(ret.done);\n  });\n  //rememberMeのデータがない場合、アクションをputしない\n  it(\"doesn't put any actions if rememberMe is not available\",()=>{\n    const gen = loginFromRememberMeSaga();\n    let ret = gen.next();\n\n    ret = gen.next(false);\n    assert(ret.done);\n  });\n});\n",
    "static": true,
    "longname": "test/saga/login.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 629,
    "kind": "testDescribe",
    "name": "describe218",
    "testId": 218,
    "memberof": "test/saga/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/login.test.js~describe218",
    "access": null,
    "description": "login Saga",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loginSaga}"
      }
    ],
    "testTargets": [
      "loginSaga"
    ]
  },
  {
    "__docId__": 630,
    "kind": "testIt",
    "name": "it219",
    "testId": 219,
    "memberof": "test/saga/login.test.js~describe218",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/login.test.js~describe218.it219",
    "access": null,
    "description": "takes every LOGIN_REQUESTED action and pass it to loginTask",
    "lineNumber": 12
  },
  {
    "__docId__": 631,
    "kind": "testDescribe",
    "name": "describe220",
    "testId": 220,
    "memberof": "test/saga/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/login.test.js~describe220",
    "access": null,
    "description": "login Task",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loginTask}"
      }
    ],
    "testTargets": [
      "loginTask"
    ]
  },
  {
    "__docId__": 632,
    "kind": "testIt",
    "name": "it221",
    "testId": 221,
    "memberof": "test/saga/login.test.js~describe220",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/login.test.js~describe220.it221",
    "access": null,
    "description": "puts LOGIN_SUCCESS action if the server returns login success",
    "lineNumber": 23
  },
  {
    "__docId__": 633,
    "kind": "testIt",
    "name": "it222",
    "testId": 222,
    "memberof": "test/saga/login.test.js~describe220",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/login.test.js~describe220.it222",
    "access": null,
    "description": "puts LOGIN_FAILURE action if the server returns login failure",
    "lineNumber": 75
  },
  {
    "__docId__": 634,
    "kind": "testIt",
    "name": "it223",
    "testId": 223,
    "memberof": "test/saga/login.test.js~describe220",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/login.test.js~describe220.it223",
    "access": null,
    "description": "proceeds processing even if rememberMe function is not available.",
    "lineNumber": 104
  },
  {
    "__docId__": 635,
    "kind": "testDescribe",
    "name": "describe224",
    "testId": 224,
    "memberof": "test/saga/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/login.test.js~describe224",
    "access": null,
    "description": "logout Saga",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{logoutSaga}"
      }
    ],
    "testTargets": [
      "logoutSaga"
    ]
  },
  {
    "__docId__": 636,
    "kind": "testIt",
    "name": "it225",
    "testId": 225,
    "memberof": "test/saga/login.test.js~describe224",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/login.test.js~describe224.it225",
    "access": null,
    "description": "takes every LOGOUT_REQUESTED action and pass it to cleanRememberMeTask",
    "lineNumber": 140
  },
  {
    "__docId__": 637,
    "kind": "testDescribe",
    "name": "describe226",
    "testId": 226,
    "memberof": "test/saga/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/login.test.js~describe226",
    "access": null,
    "description": "loginFailure Saga",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loginFailure}"
      }
    ],
    "testTargets": [
      "loginFailure"
    ]
  },
  {
    "__docId__": 638,
    "kind": "testIt",
    "name": "it227",
    "testId": 227,
    "memberof": "test/saga/login.test.js~describe226",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/login.test.js~describe226.it227",
    "access": null,
    "description": "takes every LOGIN_FAILURE action and pass it to cleanRememberMeTask",
    "lineNumber": 151
  },
  {
    "__docId__": 639,
    "kind": "testDescribe",
    "name": "describe228",
    "testId": 228,
    "memberof": "test/saga/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/login.test.js~describe228",
    "access": null,
    "description": "cleanRememberMe Task",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{cleanRememberMeTask}"
      }
    ],
    "testTargets": [
      "cleanRememberMeTask"
    ]
  },
  {
    "__docId__": 640,
    "kind": "testIt",
    "name": "it229",
    "testId": 229,
    "memberof": "test/saga/login.test.js~describe228",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/login.test.js~describe228.it229",
    "access": null,
    "description": "tries to clean RememberMe data",
    "lineNumber": 162
  },
  {
    "__docId__": 641,
    "kind": "testDescribe",
    "name": "describe230",
    "testId": 230,
    "memberof": "test/saga/login.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/login.test.js~describe230",
    "access": null,
    "description": "loginFromRememberMe Saga",
    "lineNumber": 171,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loginFromRememberMeSaga}"
      }
    ],
    "testTargets": [
      "loginFromRememberMeSaga"
    ]
  },
  {
    "__docId__": 642,
    "kind": "testIt",
    "name": "it231",
    "testId": 231,
    "memberof": "test/saga/login.test.js~describe230",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/login.test.js~describe230.it231",
    "access": null,
    "description": "puts LOGIN_REQUESTED action if rememberMe data is available",
    "lineNumber": 173
  },
  {
    "__docId__": 643,
    "kind": "testIt",
    "name": "it232",
    "testId": 232,
    "memberof": "test/saga/login.test.js~describe230",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/login.test.js~describe230.it232",
    "access": null,
    "description": "doesn't put any actions if rememberMe is not available",
    "lineNumber": 188
  },
  {
    "__docId__": 644,
    "kind": "testFile",
    "name": "test/saga/mydestination.test.js",
    "content": "import assert from 'power-assert';\nimport {loadDestinationSaga,loadDestinationTask,changeDestinationSaga,changeDestinationTask} from '../../src/saga/mydestination';\nimport {MY_DESTINATION_CHANGE,myDestinationChange,myDestinationSaveComplete} from '../../src/action/mydestination';\nimport {LOGIN_SUCCESS} from '../../src/action/login';\nimport axios from 'axios';\nimport {take,put,select,takeEvery,takeLatest,call} from 'redux-saga/effects';\nimport {getApiBaseURL} from '../../src/module/environment';\n\nconst API_BASE_URL = getApiBaseURL();\n\n/**@test {loadDestinationSaga}*/\ndescribe(\"loadDestinationSaga\",()=>{\n  it(\"takes every LOGIN_SUCCESS action and pass it to loadDestinationTask\",()=>{\n    const gen = loadDestinationSaga();\n    const ret = gen.next();\n\n    assert(!ret.done);\n    assert.deepEqual(ret.value, takeEvery(LOGIN_SUCCESS,loadDestinationTask));\n  });\n});\n\n/**@test {loadDestinationTask}*/\ndescribe(\"loadDestinationTask\",()=>{\n  it(\"load user's destination data from server via api and puts MY_DESTINATION_CHANGE action\",()=>{\n    const dummyAPIToken = \"dummyAPIToken\";\n    const dummyAPIResult = {\n      inBusiness:true,\n      comment:\"自席\",\n      contact:\"090-XXX-XXXX\"\n    };\n\n    const gen = loadDestinationTask();\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.user.token));\n    ret = gen.next(dummyAPIToken);//stateの中にトークンが格納されているものとする\n\n    assert.deepEqual(ret.value, call(axios,{\n      method:\"GET\",\n      url:API_BASE_URL + \"status\",\n      headers:{\"Authorization\":\"Bearer \" + dummyAPIToken}\n    }));\n    ret = gen.next({data:dummyAPIResult}); //APIからdummyAPIResultが返ってきたものとする\n\n    assert.deepEqual(ret.value, put(myDestinationChange(dummyAPIResult)));\n    ret = gen.next();\n\n    assert(ret.done);\n  });\n});\n\n/**@test {changeDestinationSaga}*/\ndescribe(\"changeDestinationSaga\",()=>{\n  it(\"takes latest MY_DESTINATION_CHANGE action and pass it to changeDestinationTask\",()=>{\n    const gen = changeDestinationSaga();\n    const ret = gen.next();\n\n    assert(!ret.done);\n    assert.deepEqual(ret.value, takeLatest(MY_DESTINATION_CHANGE,changeDestinationTask));\n  });\n});\n\n/**@test {changeDestinationTask}*/\ndescribe(\"changeDestinationTask\",()=>{\n  it(\"save user's destination which is payload of MY_DESTINATION_CHANGE action into server via api and puts MY_DESTINATION_SAVE_COMPLETE action\",()=>{\n    const dummyAPIToken = \"dummyAPIToken\";\n    const dummyAction = {\n      type:MY_DESTINATION_CHANGE,\n      payload:{\n        inBusiness:false,\n        comment:\"\",\n        contact:\"090-XXX-XXXX\"\n      }\n    };\n\n    const gen = changeDestinationTask(dummyAction);\n    let ret = gen.next();\n\n    //waits some minutes\n    ret = gen.next();\n\n    //gen calls yield select(state => state.login.user.token));\n    ret = gen.next(dummyAPIToken);//stateの中にトークンが格納されているものとする\n\n    assert.deepEqual(ret.value,call(axios.put,\n      API_BASE_URL + \"status\",\n      {inBusiness:dummyAction.payload.inBusiness,comment:dummyAction.payload.comment,contact:dummyAction.payload.contact},\n      {headers:{\"Authorization\":\"Bearer \" + dummyAPIToken}}\n    ));\n\n    ret = gen.next(dummyAction.payload); //APIへのセーブは成功したものとする\n\n    assert.deepEqual(ret.value, put(myDestinationSaveComplete(dummyAction.payload)));\n\n    ret = gen.next();\n    assert(ret.done);\n  })\n});\n",
    "static": true,
    "longname": "test/saga/mydestination.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 645,
    "kind": "testDescribe",
    "name": "describe233",
    "testId": 233,
    "memberof": "test/saga/mydestination.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/mydestination.test.js~describe233",
    "access": null,
    "description": "loadDestinationSaga",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loadDestinationSaga}"
      }
    ],
    "testTargets": [
      "loadDestinationSaga"
    ]
  },
  {
    "__docId__": 646,
    "kind": "testIt",
    "name": "it234",
    "testId": 234,
    "memberof": "test/saga/mydestination.test.js~describe233",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/mydestination.test.js~describe233.it234",
    "access": null,
    "description": "takes every LOGIN_SUCCESS action and pass it to loadDestinationTask",
    "lineNumber": 13
  },
  {
    "__docId__": 647,
    "kind": "testDescribe",
    "name": "describe235",
    "testId": 235,
    "memberof": "test/saga/mydestination.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/mydestination.test.js~describe235",
    "access": null,
    "description": "loadDestinationTask",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{loadDestinationTask}"
      }
    ],
    "testTargets": [
      "loadDestinationTask"
    ]
  },
  {
    "__docId__": 648,
    "kind": "testIt",
    "name": "it236",
    "testId": 236,
    "memberof": "test/saga/mydestination.test.js~describe235",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/mydestination.test.js~describe235.it236",
    "access": null,
    "description": "load user's destination data from server via api and puts MY_DESTINATION_CHANGE action",
    "lineNumber": 24
  },
  {
    "__docId__": 649,
    "kind": "testDescribe",
    "name": "describe237",
    "testId": 237,
    "memberof": "test/saga/mydestination.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/mydestination.test.js~describe237",
    "access": null,
    "description": "changeDestinationSaga",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeDestinationSaga}"
      }
    ],
    "testTargets": [
      "changeDestinationSaga"
    ]
  },
  {
    "__docId__": 650,
    "kind": "testIt",
    "name": "it238",
    "testId": 238,
    "memberof": "test/saga/mydestination.test.js~describe237",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/mydestination.test.js~describe237.it238",
    "access": null,
    "description": "takes latest MY_DESTINATION_CHANGE action and pass it to changeDestinationTask",
    "lineNumber": 54
  },
  {
    "__docId__": 651,
    "kind": "testDescribe",
    "name": "describe239",
    "testId": 239,
    "memberof": "test/saga/mydestination.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/mydestination.test.js~describe239",
    "access": null,
    "description": "changeDestinationTask",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{changeDestinationTask}"
      }
    ],
    "testTargets": [
      "changeDestinationTask"
    ]
  },
  {
    "__docId__": 652,
    "kind": "testIt",
    "name": "it240",
    "testId": 240,
    "memberof": "test/saga/mydestination.test.js~describe239",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/mydestination.test.js~describe239.it240",
    "access": null,
    "description": "save user's destination which is payload of MY_DESTINATION_CHANGE action into server via api and puts MY_DESTINATION_SAVE_COMPLETE action",
    "lineNumber": 65
  },
  {
    "__docId__": 653,
    "kind": "testFile",
    "name": "test/saga/signup.test.js",
    "content": "import assert from 'power-assert';\nimport {signupSaga,signupTask} from '../../src/saga/signup';\nimport {put,call,takeEvery} from 'redux-saga/effects';\nimport {getApiBaseURL} from '../../src/module/environment';\nimport {SIGNUP_REQUIRED,signupSucceess,signupFailure} from '../../src/action/signup';\nimport {SIGNUP_FAILURE_REASONS} from '../../src/const/signup'\nimport {loginRequested} from '../../src/action/login';\nimport axios from \"axios\";\n\nconst BASE_API_URL = getApiBaseURL();\n/**@test {signupSaga}*/\ndescribe(\"signup Saga\",()=>{\n  //常にSIGNUP_REQUIREDを受け付けて、signupTaskに引き渡す\n  it(\"takes every SIGNUP_REQUIRED action and pass it to signupTask\",()=>{\n    const gen = signupSaga();\n    let ret = gen.next();\n\n    assert(!ret.done);\n    assert.deepEqual(ret.value, takeEvery(SIGNUP_REQUIRED,signupTask));\n  });\n});\n/**@test {signupTask} */\ndescribe(\"signup Task\",()=>{\n  //サーバからサインアップ成功が返って来れば、SIGNUP_SUCCESSアクションとLOGIN_REQUESTEDアクションをputする\n  it(\"puts SIGNUP_SUCCESS and LOGIN_REQUESTED action if server returns signup success\",()=>{\n    const testAction = {\n      type:SIGNUP_REQUIRED,\n      payload:{\n        id:\"test\",\n        password:\"test\",\n        name:\"テスト\"\n      }\n    };\n\n    const gen = signupTask(testAction);\n    let ret = gen.next();\n\n    assert.deepEqual(ret.value, call(axios.post,BASE_API_URL + \"user\",{\n      userid:testAction.payload.id,\n      password:testAction.payload.password,\n      name:testAction.payload.name}));\n\n    ret = gen.next({result:\"success\"});//SignUPに成功したものとする\n\n    assert.deepEqual(ret.value, put(signupSucceess()));\n    ret = gen.next();\n\n    assert.deepEqual(ret.value, put(loginRequested(testAction.payload.id,testAction.payload.password)));\n    ret = gen.next();\n\n    assert(ret.done);\n\n  });\n  it(\"puts SIGNUP_FAILURE action if server returns signup failure\",()=>{\n    const testAction = {\n      type:SIGNUP_REQUIRED,\n      payload:{\n        id:\"test\",\n        password:\"test\",\n        name:\"テスト\"\n      }\n    };\n\n    const gen = signupTask(testAction);\n    let ret = gen.next();\n\n    assert.deepEqual(ret.value, call(axios.post,BASE_API_URL + \"user\",{\n      userid:testAction.payload.id,\n      password:testAction.payload.password,\n      name:testAction.payload.name}));\n\n    ret = gen.throw(new Error(\"Server doesn't return 200 OK STATUS CODE\"));//SignUPに失敗したものとする\n    //XXX　エラーが起きればID重複と判断しているが、サーバエラーと区別したい\n    assert.deepEqual(ret.value, put(signupFailure([SIGNUP_FAILURE_REASONS.ID_DUPLICATED])));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n});\n",
    "static": true,
    "longname": "test/saga/signup.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 654,
    "kind": "testDescribe",
    "name": "describe241",
    "testId": 241,
    "memberof": "test/saga/signup.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/signup.test.js~describe241",
    "access": null,
    "description": "signup Saga",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{signupSaga}"
      }
    ],
    "testTargets": [
      "signupSaga"
    ]
  },
  {
    "__docId__": 655,
    "kind": "testIt",
    "name": "it242",
    "testId": 242,
    "memberof": "test/saga/signup.test.js~describe241",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/signup.test.js~describe241.it242",
    "access": null,
    "description": "takes every SIGNUP_REQUIRED action and pass it to signupTask",
    "lineNumber": 14
  },
  {
    "__docId__": 656,
    "kind": "testDescribe",
    "name": "describe243",
    "testId": 243,
    "memberof": "test/saga/signup.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/signup.test.js~describe243",
    "access": null,
    "description": "signup Task",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{signupTask}"
      }
    ],
    "testTargets": [
      "signupTask"
    ]
  },
  {
    "__docId__": 657,
    "kind": "testIt",
    "name": "it244",
    "testId": 244,
    "memberof": "test/saga/signup.test.js~describe243",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/signup.test.js~describe243.it244",
    "access": null,
    "description": "puts SIGNUP_SUCCESS and LOGIN_REQUESTED action if server returns signup success",
    "lineNumber": 25
  },
  {
    "__docId__": 658,
    "kind": "testIt",
    "name": "it245",
    "testId": 245,
    "memberof": "test/saga/signup.test.js~describe243",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/signup.test.js~describe243.it245",
    "access": null,
    "description": "puts SIGNUP_FAILURE action if server returns signup failure",
    "lineNumber": 54
  },
  {
    "__docId__": 659,
    "kind": "testFile",
    "name": "test/saga/suggestion.test.js",
    "content": "import assert from 'power-assert';\nimport {loadSuggestionSaga,loadSuggestionTask,changeSuggestionSaga,changeSuggestionTask} from '../../src/saga/suggestion';\nimport {suggestionChange} from '../../src/action/suggestion';\nimport {DEFAULT_SUGGENSTIONS} from '../../src/const/suggestion';\nimport {LOGIN_SUCCESS} from '../../src/action/login';\nimport {MY_DESTINATION_SAVE_COMPLETE} from '../../src/action/mydestination';\nimport {take,put,select,takeEvery,takeLatest,call} from 'redux-saga/effects';\n\ndescribe(\"loadSuggestionSaga\",()=>{\n  it(\"takes every LOGIN_SUCCESS action and pass it to loadSuggestionTask\",()=>{\n    const gen = loadSuggestionSaga();\n    const ret = gen.next();\n\n    assert(!ret.done);\n    assert.deepEqual(ret.value, takeEvery(LOGIN_SUCCESS,loadSuggestionTask));\n  });\n});\n\ndescribe(\"loadSuggestionTask\",()=>{\n  it(\"loads suggestion from storage and puts SUGGESTION_CHANGE action with it\",()=>{\n    const suggestionInStorage = [\"東銀座\",\"EAST 8F\", \"EAST 3F\", \"宝町\", \"NRI 13F\", \"NRI 12F\"];\n\n    const gen = loadSuggestionTask();\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.user.userid);\n    ret = gen.next(\"dummy_userid\");\n    //gen calls yield existsKeyOnStorage(STORAGE_KEY_SUGGESTION + userid)\n    ret = gen.next(true); //localStorageへ既にsuggestionが保存されているものとする\n    //gen calls yield getFromStorage(STORAGE_KEY_SUGGESTION + userid);\n    ret = gen.next(suggestionInStorage);// suggestionInStorageが保存されているものとする\n\n    assert.deepEqual(ret.value, put(suggestionChange(suggestionInStorage)));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n\n  it(\"doesn't put any actions if suggestion is not saved in storage\",()=>{\n    const gen = loadSuggestionTask();\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.user.userid);\n    ret = gen.next(\"dummy_userid\");\n    //gen calls yield existsKeyOnStorage(STORAGE_KEY_SUGGESTION + userid)\n    ret = gen.next(false); //localStorageへ既にsuggestionが保存されていないものとする\n\n    assert(ret.done);\n  });\n});\n\ndescribe(\"changeSuggestionSaga\",()=>{\n  it(\"takes every MY_DESTINATION_SAVE_COMPLETE action and pass it to changeSuggestionTask\",()=>{\n    const gen = changeSuggestionSaga();\n    const ret = gen.next();\n\n    assert(!ret.done);\n    assert.deepEqual(ret.value, takeEvery(MY_DESTINATION_SAVE_COMPLETE,changeSuggestionTask));\n  });\n});\n\ndescribe(\"changeSuggestionTask\",()=>{\n  it(\"adds comment in payload of action to top of saved suggestion and puts SUGGESTION_CHANGE action with it\",()=>{\n    const dummyAction = {\n      type:MY_DESTINATION_SAVE_COMPLETE,\n      payload:{\n        inBusiness:true,\n        comment:\"高輪\",\n        contact:\"\"\n      }\n    };\n\n    const suggestionInStorage = [\"東銀座\",\"EAST 8F\", \"EAST 3F\", \"宝町\", \"NRI 13F\", \"NRI 12F\"];\n\n    const gen = changeSuggestionTask(dummyAction);\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.user.userid);\n    ret = gen.next(\"dummy_userid\");\n    //gen calls yield existsKeyOnStorage(STORAGE_KEY_SUGGESTION + userid)\n    ret = gen.next(true); //localStorageへ既にsuggestionが保存されているものとする\n    //gen calls yield getFromStorage(STORAGE_KEY_SUGGESTION + userid);\n    ret = gen.next(suggestionInStorage);// suggestionInStorageが保存されているものとする\n    //gen calls yield setToStorage(STORAGE_KEY_SUGGESTION + logonUser.userid, histarr);\n    ret = gen.next(true); //localStorageへの保存が成功したものとする\n\n    const expectNewSuggestion = [dummyAction.payload.comment].concat(suggestionInStorage);\n\n    assert.deepEqual(ret.value, put(suggestionChange(expectNewSuggestion)));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n\n  it(\"does nothing if comment in payload of action is empty\",()=>{\n    const dummyAction = {\n      type:MY_DESTINATION_SAVE_COMPLETE,\n      payload:{\n        inBusiness:true,\n        comment:\"\",\n        contact:\"\"\n      }\n    };\n\n    const gen = changeSuggestionTask(dummyAction);\n    const ret = gen.next();\n\n    assert(ret.done);\n  });\n\n  it(\"add comment to top of DEFAULT_SUGGENSTIONS if suggestion hasn't saved yet\",()=>{\n    const dummyAction = {\n      type:MY_DESTINATION_SAVE_COMPLETE,\n      payload:{\n        inBusiness:true,\n        comment:\"高輪\",\n        contact:\"\"\n      }\n    };\n\n    const gen = changeSuggestionTask(dummyAction);\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.user.userid);\n    ret = gen.next(\"dummy_userid\");\n    //gen calls yield existsKeyOnStorage(STORAGE_KEY_SUGGESTION + userid)\n    ret = gen.next(false); //localStorageへ既にsuggestionが保存されていないものとする\n    //gen calls yield setToStorage(STORAGE_KEY_SUGGESTION + logonUser.userid, histarr);\n    ret = gen.next(true); //localStorageへの保存が成功したものとする\n\n    const expectNewSuggestion = [dummyAction.payload.comment].concat(DEFAULT_SUGGENSTIONS);\n\n    assert.deepEqual(ret.value, put(suggestionChange(expectNewSuggestion)));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n\n  it(\"doesn't add comment if it has already been in suggestion array\",()=>{\n    const dummyAction = {\n      type:MY_DESTINATION_SAVE_COMPLETE,\n      payload:{\n        inBusiness:true,\n        comment:\"宝町\",\n        contact:\"\"\n      }\n    };\n\n    const suggestionInStorage = [\"東銀座\",\"EAST 8F\", \"EAST 3F\", \"宝町\", \"NRI 13F\", \"NRI 12F\"];\n\n    const gen = changeSuggestionTask(dummyAction);\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.user.userid);\n    ret = gen.next(\"dummy_userid\");\n    //gen calls yield existsKeyOnStorage(STORAGE_KEY_SUGGESTION + userid)\n    ret = gen.next(true); //localStorageへ既にsuggestionが保存されているものとする\n    //gen calls yield getFromStorage(STORAGE_KEY_SUGGESTION + userid);\n    ret = gen.next(suggestionInStorage);// suggestionInStorageが保存されているものとする\n    //gen calls yield setToStorage(STORAGE_KEY_SUGGESTION + logonUser.userid, histarr);\n    ret = gen.next(true); //localStorageへの保存が成功したものとする\n\n    const expectNewSuggestion = suggestionInStorage;\n\n    assert.deepEqual(ret.value, put(suggestionChange(expectNewSuggestion)));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n\n  it(\"pops out the last suggestion of array if size of the array exceeds 15\",()=>{\n    const dummyAction = {\n      type:MY_DESTINATION_SAVE_COMPLETE,\n      payload:{\n        inBusiness:true,\n        comment:\"宝町\",\n        contact:\"\"\n      }\n    };\n\n    const suggestionInStorage = [\"1\",\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\"];\n\n    const gen = changeSuggestionTask(dummyAction);\n    let ret = gen.next();\n\n    //gen calls yield select(state => state.login.user.userid);\n    ret = gen.next(\"dummy_userid\");\n    //gen calls yield existsKeyOnStorage(STORAGE_KEY_SUGGESTION + userid)\n    ret = gen.next(true); //localStorageへ既にsuggestionが保存されているものとする\n    //gen calls yield getFromStorage(STORAGE_KEY_SUGGESTION + userid);\n    ret = gen.next(suggestionInStorage);// suggestionInStorageが保存されているものとする\n    //gen calls yield setToStorage(STORAGE_KEY_SUGGESTION + logonUser.userid, histarr);\n    ret = gen.next(true); //localStorageへの保存が成功したものとする\n\n    const expectNewSuggestion = [dummyAction.payload.comment].concat(suggestionInStorage).slice(0,15);\n\n    assert.deepEqual(ret.value, put(suggestionChange(expectNewSuggestion)));\n\n    ret = gen.next();\n    assert(ret.done);\n  });\n});\n",
    "static": true,
    "longname": "test/saga/suggestion.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 660,
    "kind": "testDescribe",
    "name": "describe246",
    "testId": 246,
    "memberof": "test/saga/suggestion.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe246",
    "access": null,
    "description": "loadSuggestionSaga",
    "lineNumber": 9
  },
  {
    "__docId__": 661,
    "kind": "testIt",
    "name": "it247",
    "testId": 247,
    "memberof": "test/saga/suggestion.test.js~describe246",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe246.it247",
    "access": null,
    "description": "takes every LOGIN_SUCCESS action and pass it to loadSuggestionTask",
    "lineNumber": 10
  },
  {
    "__docId__": 662,
    "kind": "testDescribe",
    "name": "describe248",
    "testId": 248,
    "memberof": "test/saga/suggestion.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe248",
    "access": null,
    "description": "loadSuggestionTask",
    "lineNumber": 19
  },
  {
    "__docId__": 663,
    "kind": "testIt",
    "name": "it249",
    "testId": 249,
    "memberof": "test/saga/suggestion.test.js~describe248",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe248.it249",
    "access": null,
    "description": "loads suggestion from storage and puts SUGGESTION_CHANGE action with it",
    "lineNumber": 20
  },
  {
    "__docId__": 664,
    "kind": "testIt",
    "name": "it250",
    "testId": 250,
    "memberof": "test/saga/suggestion.test.js~describe248",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe248.it250",
    "access": null,
    "description": "doesn't put any actions if suggestion is not saved in storage",
    "lineNumber": 39
  },
  {
    "__docId__": 665,
    "kind": "testDescribe",
    "name": "describe251",
    "testId": 251,
    "memberof": "test/saga/suggestion.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe251",
    "access": null,
    "description": "changeSuggestionSaga",
    "lineNumber": 52
  },
  {
    "__docId__": 666,
    "kind": "testIt",
    "name": "it252",
    "testId": 252,
    "memberof": "test/saga/suggestion.test.js~describe251",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe251.it252",
    "access": null,
    "description": "takes every MY_DESTINATION_SAVE_COMPLETE action and pass it to changeSuggestionTask",
    "lineNumber": 53
  },
  {
    "__docId__": 667,
    "kind": "testDescribe",
    "name": "describe253",
    "testId": 253,
    "memberof": "test/saga/suggestion.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe253",
    "access": null,
    "description": "changeSuggestionTask",
    "lineNumber": 62
  },
  {
    "__docId__": 668,
    "kind": "testIt",
    "name": "it254",
    "testId": 254,
    "memberof": "test/saga/suggestion.test.js~describe253",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe253.it254",
    "access": null,
    "description": "adds comment in payload of action to top of saved suggestion and puts SUGGESTION_CHANGE action with it",
    "lineNumber": 63
  },
  {
    "__docId__": 669,
    "kind": "testIt",
    "name": "it255",
    "testId": 255,
    "memberof": "test/saga/suggestion.test.js~describe253",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe253.it255",
    "access": null,
    "description": "does nothing if comment in payload of action is empty",
    "lineNumber": 95
  },
  {
    "__docId__": 670,
    "kind": "testIt",
    "name": "it256",
    "testId": 256,
    "memberof": "test/saga/suggestion.test.js~describe253",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe253.it256",
    "access": null,
    "description": "add comment to top of DEFAULT_SUGGENSTIONS if suggestion hasn't saved yet",
    "lineNumber": 111
  },
  {
    "__docId__": 671,
    "kind": "testIt",
    "name": "it257",
    "testId": 257,
    "memberof": "test/saga/suggestion.test.js~describe253",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe253.it257",
    "access": null,
    "description": "doesn't add comment if it has already been in suggestion array",
    "lineNumber": 139
  },
  {
    "__docId__": 672,
    "kind": "testIt",
    "name": "it258",
    "testId": 258,
    "memberof": "test/saga/suggestion.test.js~describe253",
    "testDepth": 1,
    "static": true,
    "longname": "test/saga/suggestion.test.js~describe253.it258",
    "access": null,
    "description": "pops out the last suggestion of array if size of the array exceeds 15",
    "lineNumber": 171
  }
]